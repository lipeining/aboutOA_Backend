{"version":3,"sources":["webpack:///webpack/bootstrap 708046effab4f84ae18c","webpack:///./node_modules/_isarray@1.0.0@isarray/index.js","webpack:///./node_modules/_ieee754@1.1.11@ieee754/index.js","webpack:///./node_modules/_buffer@4.9.1@buffer/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/_process@0.11.10@process/browser.js","webpack:///./node_modules/_pdfjs-dist@2.0.489@pdfjs-dist/build/pdf.worker.js","webpack:///./node_modules/_base64-js@1.3.0@base64-js/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","toString","Array","isArray","arr","read","buffer","offset","isLE","mLen","nBytes","e","eLen","eMax","eBias","nBits","NaN","Infinity","Math","pow","write","value","rt","abs","isNaN","floor","log","LN2","global","base64","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","this","Error","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","slice","fromString","obj","isBuffer","len","checked","copy","val","type","data","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","bidirectionalIndexOf","dir","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","String","buf","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","g","Function","eval","window","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","args","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","factory","self","__w_pdfjs_require__","unreachable","warn","utf8StringToString","stringToUTF8String","stringToPDFString","stringToBytes","string32","shadow","setVerbosityLevel","ReadableStream","removeNullCharacters","readUint32","readUint16","log2","isEvalSupported","isLittleEndian","createValidAbsoluteUrl","isSameOrigin","isSpace","isString","isNum","isEmptyObj","isBool","isArrayBuffer","info","getVerbosityLevel","getLookupTableFactory","getInheritableProperty","deprecated","createObjectURL","createPromiseCapability","createBlob","bytesToString","assert","arraysToBytes","arrayByteLength","FormatError","XRefParseException","Util","UnknownErrorException","UnexpectedResponseException","TextRenderingMode","StreamType","PasswordResponses","PasswordException","PageViewport","NotImplementedException","NativeImageDecoding","MissingPDFException","MissingDataException","MessageHandler","InvalidPDFException","AbortException","CMapCompressionType","ImageKind","FontType","AnnotationType","AnnotationFlag","AnnotationFieldFlag","AnnotationBorderStyleType","UNSUPPORTED_FEATURES","VerbosityLevel","OPS","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","_typeof","iterator","constructor","_streams_polyfill","ERRORS","WARNINGS","INFOS","verbosity","msg","console","cond","message","details","status","begin","NullCharactersRegExp","rgbBuf","makeCssRgb","r","transform","m1","m2","applyTransform","applyInverseTransform","getAxialAlignedBoundingBox","p1","p2","p3","p4","inverseTransform","apply3dTransform","v","singularValueDecompose2dScale","transpose","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","orderedX","sort","orderedY","result","ROMAN_NUMBER_MAP","toRoman","number","lowerCase","isInteger","romanBuf","romanStr","appendToArray","arr1","arr2","prependToArray","unshift","extendObj","obj1","obj2","key","inherit","base","prop","create","loadScript","callback","script","document","createElement","loaded","setAttribute","onload","getElementsByTagName","appendChild","viewBox","scale","rotation","offsetX","offsetY","dontFlip","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","width","height","centerX","centerY","fontScale","clone","convertToViewportPoint","convertToViewportRectangle","tl","br","convertToPdfPoint","PDFStringTranslateTable","capability","promise","Promise","resolve","reject","digits","contentType","Blob","URL","blob","ii","b1","b2","b3","resolveCall","fn","thisArg","wrapReason","reason","resolveOrReject","success","sourceName","targetName","comObj","_this","callbackId","streamId","postMessageTransfers","streamSinks","streamControllers","callbacksCapabilities","ah","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","isReply","error","action","_sourceName","_targetName","then","postMessage","makeReasonSerializable","_createStreamSink","addEventListener","actionName","handler","scope","send","transfers","sendWithPromise","sendWithStream","queueingStrategy","_this2","controller","startCapability","startCall","isClosed","desiredSize","pull","pullCapability","pullCall","cancel","cancelCapability","cancelCall","_this3","sendStreamRequest","_ref2","chunk","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","ready","close","onPull","onCancel","_this4","sendStreamResponse","_ref3","deleteStreamController","all","map","catch","destroy","removeEventListener","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","SOLID","DASHED","BEVELED","INSET","UNDERLINE","READONLY","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","INVISIBLE","HIDDEN","PRINT","NOZOOM","NOROTATE","NOVIEW","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","UNKNOWN","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","NONE","BINARY","STREAM","DECODE","DISPLAY","NEED_PASSWORD","INCORRECT_PASSWORD","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RL","FILL","STROKE","FILL_STROKE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","item","itemLength","resultLength","strBuf","chunkEnd","_ref","dict","_ref$getArray","getArray","_ref$stopWhenFound","stopWhenFound","loopCount","values","initializer","lookup","ch","baseUrl","otherUrl","origin","other","url","absoluteUrl","protocol","isValidProtocol","ex","buffer8","Uint32Array","ceil","level","writable","charAt","decodeURIComponent","escape","unescape","encodeURIComponent","EOF","Name","nameCache","nameValue","Cmd","cmd","cmdCache","cmdValue","Dict","nonSerializable","xref","_map","objId","suppressEncryption","__nonSerializable__","assignXref","newXref","key1","key2","key3","fetchIfRef","getAsync","fetchIfRefAsync","isRef","fetch","getRaw","getKeys","keys","has","forEach","empty","merge","dictArray","mergedDict","isDict","keyName","Ref","num","gen","RefSet","ref","put","remove","RefSetCache","putAlias","aliasRef","clear","isName","isEOF","isCmd","isRefsEqual","v1","v2","isStream","getBytes","store","uid","_Symbol","USE_SYMBOL","it","LZWStream","StringStream","StreamsSequenceStream","Stream","RunLengthStream","PredictorStream","NullStream","FlateStream","DecodeStream","DecryptStream","AsciiHexStream","Ascii85Stream","_util","_primitives","arrayBuffer","isEmpty","getByte","getUint16","b0","getInt32","strEnd","peekByte","peekedByte","peekBytes","skip","reset","moveStart","makeSubStream","emptyBuffer","maybeMinBufferLength","bufferLength","eof","minBufferLength","readBlock","ensureBuffer","requested","buffer2","bufEnd","getBaseStreams","streams","shift","newLength","baseStreams","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","maybeLength","cmf","flg","codeSize","codeBuf","getBits","bits","getCode","table","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","code2","t","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","code1","dist","k","blockLen","check","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","sum","compArray","bitMask","kk","prevRow","up","upLeft","left","pa","pb","pc","decrypt","nextChunk","initialized","hasMoreData","input","firstDigit","maxDecodeLength","digit","repeatHeader","source","earlyChange","cachedData","bitsCached","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","q","estimatedDecodedSize","blockSize","prevCode","decodedLength","currentBufferLength","hasPrev","core","hide","redefine","ctx","$export","own","exp","IS_FORCED","F","IS_GLOBAL","G","IS_PROTO","P","IS_BIND","B","S","expProto","U","W","R","__g","__e","isObject","SRC","$toString","TPL","split","inspectSource","O","safe","isFunction","aFunction","dP","createDesc","f","exec","anObject","IE8_DOM_DEFINE","toPrimitive","Attributes","IObject","defined","ColorSpace","getRgb","srcOffset","rgb","getRgbItem","dest","destOffset","getRgbBuffer","count","alpha01","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","actualHeight","bpc","comps","numComponentColors","needsResizing","numComps","allColors","destPos","rgbPos","colorMap","w1","h1","w2","h2","py","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","resizeRgbImage","usesZeroToOneRange","parse","cs","pdfFunctionFactory","IR","parseToIR","fromIR","whitePoint","blackPoint","gamma","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","IndexedCS","alt","tintFnIR","AlternateCS","createFromIR","range","LabCS","colorSpaces","resCS","mode","altIR","createIR","isDefaultDecode","decode","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","tintFn","defaultColor","Float32Array","tmpBuf","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","outputDelta","lookupPos","convertToRgb","srcScale","XW","YW","ZW","XB","YB","ZB","A","AG","L","BRADFORD_SCALE_MATRIX","BRADFORD_SCALE_INVERSE_MATRIX","SRGB_D65_XYZ_TO_RGB_MATRIX","FLAT_WHITEPOINT_MATRIX","tempNormalizeMatrix","tempConvertMatrix1","tempConvertMatrix2","DECODE_L_CONSTANT","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","sRGBTransferFunction","color","adjustToRange","decodeL","C","AGR","BGG","CGB","X","Y","Z","XYZ","XYZ_Flat","sourceWhitePoint","XYZ_In","LMS","LMS_Flat","convertToFlat","normalizeWhitePointToFlat","XYZ_Black","sourceBlackPoint","zeroDecodeL","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","compensateBlackPoint","XYZ_D65","LMS_D65","convertToD65","normalizeWhitePointToD65","SRGB","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","as","bs","M","N","ExpertEncoding","MacExpertEncoding","MacRomanEncoding","StandardEncoding","WinAnsiEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","getEncoding","encodingName","id","px","random","$keys","enumBugKeys","def","TAG","tag","stat","isArrayIter","toLength","getIterFn","BREAK","RETURN","_exports","iterable","entries","ITERATOR","step","iterFn","index","next","done","Parser","Linearization","Lexer","_stream","_ccitt_stream","_jbig2_stream","_jpeg_stream","_jpx_stream","MAX_ADLER32_LENGTH","computeAdler32","bytesLength","lexer","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","tryShift","cipherTransform","makeInlineImage","makeStream","decryptString","findDefaultInlineStreamEnd","startPos","state","maybeEIPos","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","findASCIIHexDecodeInlineStreamEnd","dictLength","beginInlineImagePos","filterName","filter","filterZero","imageStream","cacheKey","imageBytes","initialStreamPos","dictBytes","cacheEntry","createStream","skipToNextLine","nextChar","ENDSTREAM_SIGNATURE","skipped","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","stats","streamTypes","JpegStream","JpxStream","CCITTFaxStream","Jbig2Stream","knownCommands","specialChars","toHexDigit","currentChar","peekChar","getNumber","eNotation","divideBy","sign","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","charBuffered","getName","previousCh","x2","getHexString","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","parser","obj3","hints","hintsLength","getHints","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","is","bitmap","cof","propertyIsEnumerable","toInteger","ARG","T","tryGet","callee","shared","Constructor","forbiddenField","$$resolve","$$reject","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","meta","KEY","NEED","fastKey","getWeak","onFreeze","_jpg","jpegImage","JpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transformNeeded","maxValue","decodeTransform","colorTransform","getData","drawWidth","drawHeight","getIR","forceDataSchema","OperatorList","QueueOptimizer","addState","parentState","pattern","checkFn","iterateFn","processFn","InitialState","context","iCurr","fnArray","argsArray","lastProcessed","curr","iFirstSave","iFirstTransform","iFirstPIIXO","maxX","maxLineHeight","currentX","currentY","img","h","imgWidth","imgHeight","imgData","imgRowSize","rowSize","dataOffset","splice","kind","iFirstPIMXO","imageMask","handlePaintSolidColorImageMask","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","images","maskParams","firstPIXOArg0","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","_optimize","flush","NullOptimizer","intent","messageHandler","pageIndex","optimizer","dependencies","_totalLength","weight","totalLength","addOp","CHUNK_SIZE","addDependency","addDependencies","addOpList","opList","lastChunk","cached","getTransfers","operatorList","getGlyphsUnicode","getDingbatsGlyphsUnicode","valueOf","toIObject","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","UNSCOPABLES","ArrayProto","classof","test","LIBRARY","Iterators","$iterCreate","setToStringTag","getPrototypeOf","BUGGY","returnThis","Base","NAME","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","documentElement","$iterators","wks","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","SPECIES","D","defer","channel","port","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","listener","now","port2","port1","onmessage","importScripts","removeChild","newPromiseCapability","promiseCapability","SAFE_CLOSING","riter","skipClosing","iter","toObject","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","callbackfn","_t","ChunkedStreamManager","ChunkedStream","chunkSize","manager","loadedChunks","numChunksLoaded","numChunks","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","allChunksLoaded","onReceiveData","curChunk","beginChunk","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","pdfNetworkStream","rangeChunkSize","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","onLoadedStream","sendRequest","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","readChunk","chunkData","requestAllChunks","_requestChunks","requestId","chunksNeeded","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","groupedChunks","prevChunk","bytesLoaded","total","isProgressive","loadedRequests","requestIds","onError","err","abort","cancelAllRequests","FileSpec","XRef","ObjectLoader","Catalog","_slicedToArray","_n","_d","_e","_s","_i","sliceIterator","_parser","_chunked_stream","_crypto","_colorspace","pdfManager","pageFactory","catDict","getCatalogObj","fontCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","encryptMetadata","encrypt","subtype","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","root","items","parent","processed","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","docBaseUrl","flags","rgbColor","outlineItem","unsafeUrl","newWindow","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","names","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","style","prefix","nums","NumberTree","currentLabel","currentIndex","labelDict","st","baseCharCode","letterIndex","character","charBuf","jj","pageMode","attachments","fs","serializable","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","cleanup","promises","translatedFonts","translated","getPage","getPageDict","createPage","nodesToVisit","currentPageIndex","currentNode","pop","fetchAsync","kids","last","getPageIndex","pageRef","kidRef","parentRef","node","kidPromises","kid","pagesBeforeRef","addDefaultProtocolToUrl","urlDict","remoteDest","JSON","stringify","namedAction","jsAction","jsUrl","RegExp","tryConvertUrlEncoding","href","xrefstms","cache","fontTypes","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","ids","fileId","CipherTransformFactory","password","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","entryCount","entry","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","LF","CR","LT","readToken","token","skipUntil","dataLength","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","xrefStms","contentLength","endPos","checkPos","tokenStr","objToken","content","xrefTagOffset","startXRefParsedCache","topDict","getEntry","xrefEntry","fetchUncompressed","fetchCompressed","substring","createCipherTransform","tableOffset","streamManager","tryFetch","NameOrNumberTree","_type","kidsOrEntries","limits","currentKey","description","contentAvailable","pickPlatformItem","filename","_filename","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","_ii","refSet","load","_walk","nodesToRevisit","pendingRequests","foundMissingData","_i2","_ii2","CCITTFaxDecoder","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","options","eoline","byteAlign","rows","eoblock","black","codingLine","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","readNextChar","refPos","blackPixels","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limitValue","ArithmeticDecoder","QeTable","qe","nmps","nlps","switchFlag","bp","dataEnd","chigh","clow","byteIn","ct","readBit","contexts","cx_index","cx_mps","qeTableIcx","qeIcx","JpxImage","_arithmetic_decoder","JpxError","SubbandsGainLog2","LL","LH","HL","HH","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","calculateTileGrids","components","tile","SIZ","tiles","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","getPrecinctIndexIfExist","pxIndex","pyIndex","sizeInImageScale","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","getPrecinctSizesInImageScale","componentsCount","MAX_VALUE","maxNumWide","maxNumHigh","sizePerComponent","decompositionLevelsCount","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","resolutions","widthCurrentResolution","heightCurrentResolution","buildPackets","tileIndex","currentTile","blocksDimensions","bscale","resolutionSubbands","progressionOrder","codingStyleDefaultParameters","packetsIterator","layersCount","maxDecompositionLevelsCount","nextPacket","packet","maxNumPrecinctsInLevel","maxNumPrecincts","precinctsIterationSizes","parseTilePackets","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","zeroBitPlanes","codingpasses","codingpassesLog2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","encodedData","decoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","mu","epsilon","gainLog2","calculate","top","initializeTile","qcdOrQcc","QCC","QCD","COC","headerSize","lbox","tbox","jumpDataLength","method","colorspace","parseCodestream","headerType","parseImageProperties","newByte","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","cqcc","qcc","cod","scod","multipleComponentTransform","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticallyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","resultImages","transformedTiles","y2","tile0","Uint8ClampedArray","fourComponents","y0items","y1items","y2items","y3items","component0","transformComponents","levelsLength","levels","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","processingFlags","Int8Array","setNeighborsSignificance","column","labels","i0","i1","contextLabel","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","i2","Transform","u0","v0","ll","iterate","extend","j1","j2","hl_lh_hh","u","llWidth","llHeight","llItems","rowBuffer","numBuffers","colBuffers","currentBuffer","current","alpha","beta","K","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","ARCFourCipher","AES256Cipher","AES128Cipher","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","_classCallCheck","instance","tmp","keyLength","encryptBlock","tmp2","output","decryptBlock","h0","h3","paddedLength","padded","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","assign","rotr","z","maj","sigma","sigmaPrime","littleSigma","h4","h5","h6","h7","t1","t2","littleSigmaPrime","mode384","tmp3","tmp1","NullCipher","AESBaseCipher","_inv_s","_mix","_mixCol","bufferPosition","cipherKey","_keySize","_cyclesOfRepetition","_j","_j2","_k","_j3","s0","s1","s2","s3","_j4","_j5","_j6","_j7","_j8","_j9","_k2","finalize","sourceLength","iv","plain","_decrypt","_key","outputLength","lastBlock","psLen","_j10","_decryptBlock2","cipher","_encrypt","_i3","_j11","_AESBaseCipher","_rcon","_expandKey","rcon","t3","t4","_AESBaseCipher2","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","hash","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","defaultPasswordBytes","prepareKeyData","revision","hashDataSize","keyLengthInBytes","checkData","encryptionKey","derivedKey","identityName","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","uBytes","perms","passwordLength","pdfAlgorithm","createEncryptionKey20","decodeUserPassword","cf","stmf","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","cipherConstructor","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","_encodings","CharstringValidationData","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack","file","properties","seacAnalysisEnabled","cff","header","parseHeader","nameIndex","parseIndex","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","createDict","strings","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","charset","fontBBox","ascent","descent","ascentScaled","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","widths","major","minor","hdrSize","offSize","parseOperand","parseFloat","parseFloatOperand","operands","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","bias","subrNumber","firstStackClearing","charstring","valid","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","defaultWidth","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","cid","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","predefined","baseEncoding","dataStart","glyphsCount","rangesCount","gid","supplementsCount","sid","readSupplement","CFFEncoding","invalidFirstGID","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","valueLength","setByName","createTables","layout","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset0","offset1","offset2","offset3","offset4","compile","compileHeader","compileNameIndex","subDict","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","nibbles","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","subrs","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","getSupplementalGlyphMapForCalibri","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getSymbolsFonts","getSerifFonts","getNonStdFontMap","getStdFontMap","getSpecialPUASymbols","UnicodeRanges","getNormalizedUnicodes","mapSpecialUnicodeValues","reverseIfRtl","chars","charsLength","getUnicodeRangeFor","getUnicodeForGlyph","glyphsUnicodeMap","unicode","hexStr","nameLen","toUpperCase","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","isPDFFunction","_ps_parser","IsEvalSupportedCached","_ref$isEvalSupported","PDFFunction","fnObj","parseArray","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","typeFn","constructSampled","constructInterpolated","constructStiched","constructPostScript","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref4","_ref5","_ref6","toMultiArray","domain","inputSize","encode","_ref7","interpolate","xmin","xmax","ymin","ymax","samples","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","size_i","e0","n0","n1","rj","_ref8","c0","c1","diff","_ref9","_ref10","fnRefs","fns","_ref11","bounds","fnsIR","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","numOutputs","numInputs","evaluator","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","roll","operators","operator","atan","cos","LN10","sin","AstNode","AstArgument","AstLiteral","AstBinaryOperation","op","arg1","arg2","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","instructions","lastRegister","instruction","statementBuilder","expr","fnDict","pdfjsCoreWorker","WorkerMessageHandler","WorkerTask","_pdf_manager","_is_node","_is_node2","default","maybePort","terminated","_capability","finished","finish","terminate","ensureNotTerminated","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","_reader","getReader","_headersReady","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","reader","headersReady","setup","testMessageProcessed","supportTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","createDocumentHandler","docParams","cancelXHRs","WorkerTasks","apiVersion","docId","workerHandlerName","startWorkerTask","task","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","ensureDoc","fingerprint","parseFailure","getPdfManager","evaluatorOptions","pdfManagerCapability","LocalPdfManager","pdfStream","cachedChunks","fullRequest","NetworkPdfManager","sendProgressiveData","pdfFile","flushChunks","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","results","userUnit","view","pdfDocument","catalog","ensureCatalog","requestLoadedStream","pageNum","Date","getOperatorList","renderInteractiveForms","featureId","wrappedException","minimumStackMessage","sink","extractTextContent","normalizeWhitespace","combineTextItems","waitOn","onSuccess","doc","pdfInfo","onFailure","updatePassword","pdfManagerReady","disableCreateObjectURL","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","newPdfManager","setupDoc","initializeFromPort","globalScope","_pdfjsCompatibilityChecked","isNodeJS","hasDOM","btoa","atob","scripts","Element","parentNode","WeakMap","hasWorkingUrl","pathname","relative","relativePathDotMapping","ALPHA","ALPHANUMERIC","JURL","_isInvalid","_url","authority","_username","_password","_isRelative","host","_query","_fragment","_scheme","_port","_host","hostname","_path","_schemeData","search","_","OriginalURL","revokeObjectURL","isRelativeScheme","scheme","invalid","IDNAToASCII","percentEscape","percentEscapeQuery","stateOverride","errors","cursor","seenAt","seenBracket","loop","nextC","nextNextC","cp","tempC","temp","searchString","isRegExp","MATCH","re","$includes","$at","iterated","point","TO_STRING","dPs","IE_PROTO","Empty","_createDict","iframeDocument","iframe","display","contentWindow","open","lt","Properties","ObjectProto","addToUnscopables","Arguments","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","anInstance","forOf","speciesConstructor","microtask","newPromiseCapabilityModule","perform","promiseResolve","$Promise","isNode","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","notify","isReject","chain","_c","_v","ok","reaction","exited","fail","_h","onHandleUnhandled","enter","exit","onUnhandled","unhandled","isUnhandled","onunhandledrejection","_a","onrejectionhandled","$reject","_w","$resolve","wrapper","executor","onFulfilled","onRejected","$index","alreadyCalled","race","getIteratorMethod","un","macrotask","Observer","MutationObserver","WebKitMutationObserver","head","navigator","standalone","toggle","createTextNode","observe","characterData","DESCRIPTORS","finally","onFinally","try","InternalMap","each","weak","fails","validate","uncaughtFrozenStore","ufstore","$WeakMap","freeze","getConstructor","_f","original","gOPS","pIE","$assign","aLen","getSymbols","isEnum","getOwnPropertySymbols","redefineAll","createArrayMethod","$has","arrayFind","arrayFindIndex","_l","UncaughtFrozenStore","findUncaughtFrozen","delete","ADDER","$iterDetect","inheritIfRequired","common","IS_WEAK","fixMethod","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","setStrong","buggy","gOPD","getOwnPropertyDescriptor","COLLECTION","of","mapping","cb","mapFn","nextItem","$values","isEntries","isReadableStreamSupported","_typeof2","IsPropertyKey","argument","Call","V","typeIsObject","createDataProperty","createArrayFromList","elements","ArrayBufferCopy","CreateIterResultObject","IsFiniteNonNegativeNumber","InvokeOrNoop","PromiseInvokeOrNoop","returnValueE","PromiseInvokeOrPerformFallback","argsF","methodE","TransferArrayBuffer","ValidateAndNormalizeHighWaterMark","highWaterMark","ValidateAndNormalizeQueuingStrategy","AssertionError","rethrowAssertionErrorRejection","_require","_require2","_require3","DequeueValue","EnqueueValueWithSize","PeekQueueValue","ResetQueue","WritableStream","underlyingSink","_ref$highWaterMark","_state","_storedError","_writer","_writableStreamController","_writeRequests","_inFlightWriteRequest","_closeRequest","_inFlightCloseRequest","_pendingAbortRequest","_backpressure","WritableStreamDefaultController","__startSteps","IsWritableStream","streamBrandCheckException","IsWritableStreamLocked","WritableStreamAbort","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","WritableStreamDealWithRejection","WritableStreamFinishErroring","writer","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","_started","__errorSteps","storedError","abortRequest","WritableStreamRejectCloseAndClosedPromiseIfNeeded","__abortSteps","WritableStreamFinishInFlightClose","_closedPromise_resolve","_closedPromise_reject","_closedPromiseState","defaultWriterClosedPromiseResolve","WritableStreamCloseQueuedOrInFlight","defaultWriterClosedPromiseReject","_closedPromise","WritableStreamUpdateBackpressure","backpressure","_readyPromise_resolve","_readyPromise_reject","_readyPromise","_readyPromiseState","defaultWriterReadyPromiseReset","defaultWriterReadyPromiseResolve","WritableStreamDefaultControllerError","WritableStreamDefaultWriterCloseWithErrorPropagation","_ownerWritableStream","WritableStreamDefaultWriterClose","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterClosedPromiseInitializeAsResolved","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultWriterAbort","WritableStreamDefaultControllerGetDesiredSize","WritableStreamDefaultWriterGetDesiredSize","closeRequest","WritableStreamDefaultControllerAdvanceQueueIfNeeded","WritableStreamDefaultWriterEnsureClosedPromiseRejected","defaultWriterClosedPromiseResetToRejected","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","releasedError","strategySize","_strategySize","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","WritableStreamDefaultControllerGetChunkSize","writeRequest","WritableStreamAddWriteRequest","writeRecord","enqueueE","_controlledWritableStream","WritableStreamDefaultControllerGetBackpressure","WritableStreamDefaultControllerWrite","_underlyingSink","_queue","_queueTotalSize","normalizedStrategy","_strategyHWM","IsWritableStreamDefaultController","startResult","WritableStreamMarkCloseRequestInFlight","WritableStreamFinishInFlightCloseWithError","WritableStreamDefaultControllerProcessClose","WritableStreamMarkFirstWriteRequestInFlight","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamDefaultControllerProcessWrite","container","_require4","_require5","underlyingSource","_disturbed","_readableStreamController","ReadableByteStreamController","ReadableStreamDefaultController","IsReadableStream","IsReadableStreamLocked","ReadableStreamCancel","AcquireReadableStreamDefaultReader","ReadableStreamBYOBReader","readable","ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue","pipeTo","preventClose","preventAbort","preventCancel","Boolean","shuttingDown","currentWrite","isOrBecomesErrored","shutdownWithAction","shutdown","destClosed","waitForWritesToFinish","oldCurrentWrite","originalIsError","originalError","doTheRest","newError","isError","ReadableStreamReaderGenericRelease","pipeLoop","ReadableStreamDefaultReaderRead","branches","ReadableStreamTee","ReadableStreamDefaultReader","cloneForBranch2","teeState","closedOrErrored","canceled1","canceled2","reason1","reason2","branch1","_branch1","branch2","_branch2","_teeState","ReadableStreamDefaultControllerClose","value1","value2","ReadableStreamDefaultControllerEnqueue","create_ReadableStreamTeePullFunction","_cloneForBranch2","cancel1","compositeReason","cancelResult","create_ReadableStreamTeeBranch1CancelFunction","cancel2","create_ReadableStreamTeeBranch2CancelFunction","underlyingSource1","branch1Stream","underlyingSource2","branch2Stream","ReadableStreamDefaultControllerError","ReadableStreamAddReadIntoRequest","IsReadableStreamBYOBReader","readIntoRequest","_readIntoRequests","ReadableStreamAddReadRequest","IsReadableStreamDefaultReader","readRequest","_readRequests","ReadableStreamClose","__cancelSteps","defaultReaderClosedPromiseResolve","ReadableStreamError","defaultReaderClosedPromiseReject","ReadableStreamFulfillReadRequest","ReadableStreamGetNumReadIntoRequests","ReadableStreamGetNumReadRequests","ReadableStreamHasBYOBReader","ReadableStreamHasDefaultReader","IsReadableStreamDisturbed","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamReaderGenericInitialize","defaultReaderBrandCheckException","_ownerReadableStream","readerLockException","ReadableStreamReaderGenericCancel","IsReadableByteStreamController","byobReaderBrandCheckException","_controlledReadableStream","elementSize","DataView","BYTES_PER_ELEMENT","ctor","pullIntoDescriptor","bytesFilled","readerType","_pendingPullIntos","emptyView","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","ReadableByteStreamControllerHandleQueueDrain","_closeRequested","ReadableByteStreamControllerError","ReadableByteStreamControllerCallPullIfNeeded","ReadableByteStreamControllerPullInto","ReadableStreamBYOBReaderRead","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","defaultReaderClosedPromiseResetToRejected","__pullSteps","_underlyingSource","_pullAgain","_pulling","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerErrorIfNeeded","IsReadableStreamDefaultController","defaultControllerBrandCheckException","pendingPromise","ReadableStreamDefaultControllerShouldCallPull","ReadableStreamBYOBRequest","_associatedReadableByteStreamController","_view","bytesWritten","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","ReadableByteStreamControllerRespondInternal","ReadableByteStreamControllerRespond","firstDescriptor","ReadableByteStreamControllerRespondWithNewView","underlyingByteSource","_underlyingByteSource","ReadableByteStreamControllerClearPendingPullIntos","autoAllocateChunkSize","_autoAllocateChunkSize","byteStreamControllerBrandCheckException","firstPendingPullInto","ReadableByteStreamControllerClose","transferredBuffer","ReadableByteStreamControllerEnqueueChunkToQueue","transferredView","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerEnqueue","viewE","bufferE","_byobRequest","ReadableByteStreamControllerGetDesiredSize","ReadableByteStreamControllerShouldCallPull","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","ReadableStreamFulfillReadIntoRequest","currentAlignedBytes","maxBytesToCopy","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableByteStreamControllerShiftPendingPullInto","ReadableByteStreamControllerRespondInClosedState","remainderSize","ReadableByteStreamControllerRespondInReadableState","transformStream","writableStream","TransformStream","TransformStreamEnqueueToReadable","_errored","_readableClosed","_readableController","TransformStreamErrorIfNeeded","TransformStreamSetBackpressure","TransformStreamCloseReadableInternal","TransformStreamErrorInternal","_writableDone","_writableController","TransformStreamReadableReadyPromise","_backpressureChangePromise","_backpressureChangePromise_resolve","TransformStreamDefaultTransform","transformStreamController","_controlledTransformStream","IsTransformStreamDefaultController","IsTransformStream","TransformStreamSink","startPromise","_transformStream","_startPromise","_transforming","transformer","_transformer","_transformStreamController","TransformStreamTransform","TransformStreamSource","TransformStreamDefaultController","TransformStreamCloseReadable","TransformStreamError","readableController","readableStrategy","writableStrategy","startPromise_resolve","_readable","_writable","_document","BasePdfManager","_docId","_docBaseUrl","ensureXRef","PDFDocument","ensureHelper","Page","_obj","_annotation","_operator_list","_evaluator","_function","LETTER_SIZE_MEDIABOX","isAnnotationRenderable","annotation","viewable","printable","pageDict","resourcesPromise","uniquePrefix","idCounters","idFactory","createObjId","_getInheritableProperty","resources","mediaBox","cropBox","intersection","getContentStream","loadResources","contentStreamPromise","partialEvaluator","PartialEvaluator","pageListPromise","contentStream","transparency","hasBlendModes","annotationsPromise","pageOpList","annotations","opListPromises","opLists","getTextContent","getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","find","needle","backwards","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","pdfFormatVersion","acroForm","xfa","fields","linearization","checkHeader","parseStartXRef","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray","hex","_ccitt","ccittFaxDecoder","EndOfLine","EncodedByteAlign","Columns","Rows","EndOfBlock","BlackIs1","_jbig","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","prev","decodeIAID","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmap","mmr","templateIndex","prediction","at","decodingContext","decodeMMRBitmap","Reader","pixel","row1","row2","decodeBitmapTemplate0","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","decodeRefinement","referenceBitmap","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeTextRegion","huffman","refinement","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","symbolCodeLength","transposed","dsOffset","referenceCorner","combinationOperator","huffmanTables","refinementTemplateIndex","refinementAt","logStripSize","huffmanInput","stripT","tableDeltaT","firstS","currentS","tableFirstS","currentT","symbolId","symbolIDTable","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","tableDeltaS","readSegmentHeader","segmentHeader","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionMmr","RegionSegmentInformationFieldLength","searchPattern","headerEnd","readSegments","segments","segment","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","numberOfExportedSymbols","numberOfNewSymbols","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","patternWidth","patternHeight","maxPatternIndex","halftoneRegion","halftoneRegionFlags","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","genericRegion","genericRegionSegmentFlags","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","SimpleSegmentVisitor","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","buildTree","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","customTables","customIndex","tableDeltaHeight","tableDeltaWidth","getStandardTable","getCustomHuffmanTable","tableBitmapSize","tableAggregateInstances","getSymbolDictionaryHuffmanTables","symbols","referredSymbols","newSymbols","currentHeight","tableB1","symbolWidths","currentWidth","totalWidth","firstSymbol","deltaWidth","numberOfInstances","rdx","rdy","bitmapSize","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","exportedSymbols","currentFlag","totalSymbolsLength","runLength","decodeSymbolDictionary","onImmediateTextRegion","numberOfSymbols","runCodesTable","repeatedLength","numberOfRepeats","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","onPatternDictionary","patterns","patternBitmap","decodePatternDictionary","onImmediateHalftoneRegion","regionWidth","regionHeight","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","decodeHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","decodeTablesSegment","decodeNode","htOffset","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","standardTablesCache","currentByte","endOfBlock","numBits","parseJbig2Chunks","JpegError","DNLMarkerError","scanLines","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","parseDNLMarker","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","decodeHuffman","tree","receive","receiveAndExtend","eobrun","successiveACNextValue","successiveACState","decodeMcu","mcu","mcuCol","decodeBlock","decodeFn","componentsLength","huffmanTableDC","blockData","pred","rs","huffmanTableAC","offsetZ","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","quantizeAndInverse","blockBufferOffset","v3","v4","v5","v6","v7","p0","p5","p6","p7","qt","quantizationTable","buildComponentData","computationBuffer","Int16Array","blockRow","blockCol","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","_ref$dnlScanLines","dnlScanLines","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","maxV","blocksPerLineForMcu","blocksBufferSize","jfif","adobe","numSOSMarkers","quantizationTables","huffmanTablesAC","huffmanTablesDC","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","extended","sofScanLines","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","nextFileMarker","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","_jpx","jpxImage","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","srcPosition","dataPosition","tileRowSize","AnnotationBorderStyle","Annotation","_get","receiver","desc","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","flag","_hasFlag","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","hasPopup","contents","renderForms","appearanceDict","bbox","maxY","getTransformMatrix","_isViewable","_isPrintable","dashArray","horizontalCornerRadius","verticalCornerRadius","isValid","allZeros","element","radius","_Annotation","annotationType","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","comb","_WidgetAnnotation2","checkBox","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","_this5","option","isOptionArray","exportValue","displayValue","combo","multiSelect","_Annotation2","_this6","_preparePopup","_Annotation3","_this7","_Annotation4","_this8","parentItem","parentSubtype","parentType","parentId","parentFlags","_Annotation5","_this9","lineCoordinates","_Annotation6","_this10","_Annotation7","_this11","_Annotation8","_this12","rawVertices","vertices","_PolylineAnnotation","_this13","_Annotation9","_this14","_Annotation10","_this15","_Annotation11","_this16","_Annotation12","_this17","_Annotation13","_this18","_Annotation14","_this19","_cmap","_fonts","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_murmurhash","_image","DefaultPartialEvaluatorOptions","NativeImageDecoder","_ref$forceDataSchema","_ref3$options","fetchBuiltInCMap","cachedCMap","compressionType","canDecode","image","isDecodable","colorSpace","isSupported","TimeSlotManager","endTime","deferred","newOptions","newEvaluator","nodes","graphicStates","graphicStatesKeys","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","buildPaintImageXObject","_ref4$isInline","isInline","_ref4$forceDisableNat","forceDisableNativeImageDecoder","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","softMask","createImageData","nativeImageDecoder","buildImage","nativeDecoder","imageObj","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","transferFn","transferMap","handleTilingType","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","tilingPatternIR","handleSetFont","fontArgs","fontRef","fontName","loadFont","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","fillColorSpace","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","gState","gStateObj","gStateKeys","_loop","normalizeBlendMode","errorFont","fontRes","fontID","translatedPromise","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontAliases","aliasFontRef","Font","getFontID","translateFont","translatedFont","fontType","fontFile3","getFontType","lastIndex","opArgs","handleColorN","patternName","typeNum","shading","Pattern","parseShading","_ref5$initialState","EvalState","xobjs","StateManager","preprocessor","EvaluatorPreprocessor","timeSlotManager","closePendingRestoreOPS","savedStatesDepth","promiseBody","stop","resolveXObject","rejectXObject","fontSize","combinedGlyphs","arrItem","strokeColorSpace","shadingRes","patternIR","dictName","extGState","_ref6$stateManager","_ref6$normalizeWhites","_ref6$combineTextItem","_ref6$seenStyles","seenStyles","TextState","textState","WhitespaceRegexp","textContent","styles","textContentItem","vertical","lastAdvanceWidth","lastAdvanceHeight","textAdvanceScale","spaceWidth","fakeSpaceMin","fakeMultiSpaceMin","fakeMultiSpaceMax","textRunBreakAllowed","SPACE_FACTOR","MULTI_SPACE_FACTOR","MULTI_SPACE_FACTOR_MAX","skipEmptyXObjs","ensureTextContentItem","fontFamily","fallbackName","tsm","textHScale","textRise","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","isMonospace","runBidiTransform","textChunk","bidiResult","bidi","replaceWhitespace","buildTextContentItem","glyphWidth","vmetric","glyphUnicode","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","translateTextMatrix","fakeSpaces","flushTextContentItem","enqueueChunk","advance","fontNameArg","fontSizeArg","leading","isSameTextLine","translateTextLineMatrix","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","gStateFont","extractDataStructures","baseDict","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","differences","baseEncodingName","diffEncoding","defaultEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","hasEncoding","buildToUnicode","_buildSimpleFontToUnicode","charcode","glyphName","ToUnicodeMap","hasIncludedToUnicodeMap","fallbackToUnicode","cMap","builtInCMap","IdentityCMap","ucs2CMapName","CMapFactory","useCMap","ucs2CMap","ucs2","IdentityToUnicodeMap","firstChar","lastChar","cmapObj","cmap","getMap","charCode","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","glyphsWidths","glyphsVMetrics","vmetrics","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","monospace","lookupName","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","update","diffLength","diffBuf","diffEntry","hexdigest","maxCharIndex","Serif","baseFont","fontNameStr","baseFontStr","cMapPromise","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cidEncoding","type3Loaded","sent","fontData","exportData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","stateStack","old","txDiff","tyDiff","denominator","calcRenderMatrix","getOPMap","numArgs","variableArgs","opMap","nonProcessedArgs","opSpec","argsLength","preprocessCommand","CMap","BUILT_IN_CMAPS","codespaceRanges","numCodespaceRanges","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","contains","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","MAX_NUM_SIZE","MAX_ENCODED_NUM_SIZE","BinaryCMapStream","readByte","readNumber","readSigned","readHex","readHexNumber","sp","readHexSigned","readString","sequence","dataSize","subitemsCount","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embeddedUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","parsedCMap","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","adjustWidths","recoverGlyphName","Glyph","operatorListId","isInFont","matchesForCache","amend","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","toArray","tablesNames","tableName","numTables","tableOffsets","searchParams","checksum","addTable","sizes","missingFile","glyphCache","toFontChar","fallbackToSystemFont","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","ID","int16","signedInt16","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","charCodeToGlyphId","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","glyphId","fontCharCode","hasUnicodeValue","createCmapTable","numGlyphs","codeIndices","getRanges","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","format314","format31012","header31012","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","angle","createNameTable","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","FontRendererFactory","stdFontMap","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","SupplementalGlyphMapForCalibri","unicodeCharCode","VALID_TABLES","readTables","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","sanitizeGlyph","sourceStart","sourceEnd","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","repeat","glyphDataLength","readNameTable","numRecords","stringsStart","records","platform","language","record","TTOpsStackDeltas","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","foldTTTable","isTrueTypeCollectionFile","ttcData","ttc","_readTrueTypeCollecti","ttcTag","majorVersion","minorVersion","numFonts","offsetTable","dsigTag","dsigLength","dsigOffset","readTrueTypeCollectionHeader","potentialHeader","potentialTables","nameEntry","readTrueTypeCollectionData","cffFile","isTrueType","maxFunctionDefs","maxSizeOfInstructions","dupFirstEntry","fpgm","prep","cvt","checkInvalidFunctions","cvtData","sanitizeTTPrograms","numOfMetrics","numMissing","sanitizeMetrics","locaLength","indexToLocFormat","numGlyphsPlusOne","sanitizeHead","isGlyphLocationsLong","glyphsInfo","loca","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","sanitizeGlyphLocations","metricsOverride","post","maxpNumGlyphs","glyphNames","glyphNameIndexes","customNames","stringLength","readPostScriptTable","hasGlyph","isCidToGidMapEmpty","cmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","segIndex","offsetsCount","rangeOffset","offsetIndex","readCmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","standardGlyphName","unicodeOrCharCode","newMapping","os2","selection","validateOS2Table","compiler","namePrototype","builder","tableTag","builtInEncoding","adjustToUnicode","getGlyphMapping","getCharCodes","charCodes","createCharCode","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","charsCache","charsCacheKey","type1FontGlyphMapping","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","headerBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","suggestedLength","headerBytes","headerBytesLength","block","actualLength","EEXEC_SIGNATURE","streamStartPos","getHeaderBlock","Type1Parser","extractFontHeader","eexecBytes","eexecBlock","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","userAgent","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","isCFFCIDFont","lookupCmap","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","glyphNameMap","gsubrsBias","subrsBias","compileGlyph","cmds","compileGlyphImpl","compileGlyf","quadraticCurveTo","xa","ya","numberOfContours","scale01","scale10","subglyph","endPtsOfContours","numberOfPoints","points","startPoint","endPoint","contour","compileCharString","stems","bezierCurveTo","xb","yb","subrCode","stackClean","numSubrs","achar","bchar","parseGlyfTable","Type1CharString","COMMAND_MAP","lsb","flexing","encoded","wx","sbx","dy","executeCommand","sby","flexArgs","howManyArgs","command","keepStack","stackLength","EEXEC_ENCRYPT_KEY","isHexDigit","discardNumber","decrypted","isSpecial","encrypted","isBinary","digit1","digit2","decryptAscii","readNumberArray","getToken","readInt","readBoolean","readCharStrings","lenIV","program","blueArray","charString","encodingArg","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","Shadings","RadialAxial","Mesh","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","createFromArray","colorStops","ratio","cssColor","background","r0","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","hasData","align","readFlag","bitsPerFlag","readCoordinate","bitsPerCoordinate","xi","yi","readComponents","ci","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","TRIANGLE_DENSITY","getB","lut","t_","buildB","buildFigureFromPatch","mesh","figure","figures","coords","pi","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","splitYBy","verticesPerRow","figureCoords","figureColors","cl","cr","c2","c3","bRow","bCol","newColor","updateBounds","patchMesh","ps","verticesLeft","coord","decodeType4Shading","decodeType5Shading","tmp4","decodeType6Shading","decodeType7Shading","coordsPacked","xy","colorsPacked","packData","xstep","ystep","paintType","tilingType","baseTypes","arabicTypes","isOdd","isEven","findUnequal","setValues","reverseValues","createBidiText","isLTR","startLevel","strLength","numBidi","charType","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","nextToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","seed","blockCounts","tailLength","dataUint32","k2","C1","C2","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","_ref$isInline","_ref$smask","_ref$mask","_ref$isMask","isMask","matte","needsDecode","decodeCoefficients","decodeAddends","smaskPromise","maskPromise","_ref2$isInline","_ref2$nativeDecoder","imagePromise","imageData","smaskData","maskData","computedLength","decodeBuffer","getComponents","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","getImageBytes","newArray","imageLength","maybeUndoPreblend","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk"],"mappings":"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AA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,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ACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,EACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,EACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,EACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEA,SAAAL,EAAA9wD,EAAAgD,EAAAC,GACA1E,KAAAyB,OACAzB,KAAA6yD,GAAApuD,EACAzE,KAAA8yD,QAAApuD,EACA1E,KAAA+yD,MAAAtxD,EAAAgD,GACAzE,KAAAgzD,KAAA,EACAhzD,KAAAizD,SACAjzD,KAAA+yD,MAAA/yD,KAAA+yD,OAAA,QAAA/yD,KAAAgzD,MAAA,MACAhzD,KAAAgzD,KAAAhzD,KAAAgzD,MAAA,QACAhzD,KAAAkzD,IAAA,EACAlzD,KAAAyG,EAAA,MA+EA,OA7EA8rD,EAAAp1D,WACA81D,OAAA,WACA,IAAAxxD,EAAAzB,KAAAyB,KACAoxD,EAAA7yD,KAAA6yD,GACA,MAAApxD,EAAAoxD,GACApxD,EAAAoxD,EAAA,GACA,KACA7yD,KAAAgzD,MAAA,MACAhzD,KAAAkzD,GAAA,IAEAL,IACA7yD,KAAAgzD,MAAAvxD,EAAAoxD,IAAA,EACA7yD,KAAAkzD,GAAA,EACAlzD,KAAA6yD,OAGAA,IACA7yD,KAAAgzD,MAAAH,EAAA7yD,KAAA8yD,QAAArxD,EAAAoxD,IAAA,QACA7yD,KAAAkzD,GAAA,EACAlzD,KAAA6yD,MAEA7yD,KAAAgzD,KAAA,QACAhzD,KAAA+yD,OAAA/yD,KAAAgzD,MAAA,GACAhzD,KAAAgzD,MAAA,QAGAG,QAAA,SAAAC,EAAAtsD,GACA,IAIAxK,EAJA+2D,EAAAD,EAAAtsD,IAAA,EACAwsD,EAAA,EAAAF,EAAAtsD,GACAysD,EAAAf,EAAAa,GACAG,EAAAD,EAAAd,GAEAhsD,EAAAzG,KAAAyG,EAAA+sD,EACA,GAAAxzD,KAAA+yD,MAAAS,EACA/sD,EAAA+sD,GACA/sD,EAAA+sD,EACAl3D,EAAAg3D,EACAD,EAAAE,EAAAb,OAEAjsD,EAAA+sD,EACAl3D,EAAA,EAAAg3D,EACA,IAAAC,EAAAX,aACAU,EAAAh3D,GAEA+2D,EAAAE,EAAAZ,UAEO,CAEP,GADA3yD,KAAA+yD,OAAAS,EACA,UAAA/sD,GAEA,OADAzG,KAAAyG,IACA6sD,EAEA7sD,EAAA+sD,GACAl3D,EAAA,EAAAg3D,EACA,IAAAC,EAAAX,aACAU,EAAAh3D,GAEA+2D,EAAAE,EAAAZ,OAEAr2D,EAAAg3D,EACAD,EAAAE,EAAAb,MAGA,GACA,IAAA1yD,KAAAkzD,IACAlzD,KAAAizD,SAEAxsD,IAAA,EACAzG,KAAA+yD,MAAA/yD,KAAA+yD,OAAA,QAAA/yD,KAAAgzD,MAAA,KACAhzD,KAAAgzD,KAAAhzD,KAAAgzD,MAAA,QACAhzD,KAAAkzD,WACO,UAAAzsD,IAGP,OAFAzG,KAAAyG,IACA2sD,EAAAtsD,GAAAusD,GAAA,EAAAC,EACAh3D,IAGAi2D,EAtUA,GAwUAz2D,EAAAy2D,qBAIA,SAAAx2D,EAAAD,EAAA0T,GAEA,aAGA9S,OAAAC,eAAAb,EAAA,cACA6C,OAAA,IAEA7C,EAAA23D,cAAAhzD,EAEA,IAAA2xB,EAAA5iB,EAAA,GAEAkkD,EAAAlkD,EAAA,IAEAmkD,EAAA,WACA,SAAAA,EAAAz/C,GACAlU,KAAAqU,QAAA,cAAAH,EAKA,OAHAy/C,EAAAx2D,UAAA,IAAA8C,MACA0zD,EAAAx2D,UAAAZ,KAAA,WACAo3D,EAAA//C,YAAA+/C,EACAA,EAPA,GASAF,EAAA,WACA,IAAAG,GACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GAEA,SAAAP,IACAzzD,KAAAi0D,sBAAA,EAuWA,SAAAC,EAAAC,EAAAC,GACAD,EAAAE,GAAA71D,KAAA4uB,KAAAgnC,EAAAE,MAAAH,EAAAI,OACAJ,EAAAK,GAAAh2D,KAAA4uB,KAAAgnC,EAAAK,KAAAN,EAAAI,OACAJ,EAAAO,GAAAl2D,KAAA4uB,KAAAgnC,EAAAO,MAAAR,EAAAS,OACAT,EAAAU,GAAAr2D,KAAA4uB,KAAAgnC,EAAAU,KAAAX,EAAAS,OACAT,EAAA/6C,MAAA+6C,EAAAK,GAAAL,EAAAE,GACAF,EAAA96C,OAAA86C,EAAAU,GAAAV,EAAAO,GAEA,SAAAK,EAAA5hB,EAAA6hB,GAMA,IALA,IACAC,EADAb,EAAAjhB,EAAA+hB,IAEAC,KACAC,EAAA52D,KAAA4uB,MAAAgnC,EAAAK,KAAAL,EAAAiB,QAAAjB,EAAAkB,OACAC,EAAA/2D,KAAA4uB,MAAAgnC,EAAAU,KAAAV,EAAAoB,QAAApB,EAAAqB,OACA57B,EAAA,EAAmBA,EAAA07B,EAAe17B,IAClC,QAAAx8B,EAAA,EAAqBA,EAAA+3D,EAAe/3D,KACpC43D,MACAS,IAAAl3D,KAAAiJ,IAAA2sD,EAAAiB,OAAAh4D,EAAA+2D,EAAAkB,MAAAlB,EAAAE,OACAW,EAAAU,IAAAn3D,KAAAiJ,IAAA2sD,EAAAoB,OAAA37B,EAAAu6B,EAAAqB,MAAArB,EAAAO,OACAM,EAAAW,IAAAp3D,KAAAqG,IAAAuvD,EAAAiB,QAAAh4D,EAAA,GAAA+2D,EAAAkB,MAAAlB,EAAAK,MACAQ,EAAAY,IAAAr3D,KAAAqG,IAAAuvD,EAAAoB,QAAA37B,EAAA,GAAAu6B,EAAAqB,MAAArB,EAAAU,MACAG,EAAA77C,MAAA67C,EAAAW,IAAAX,EAAAS,IACAT,EAAA57C,OAAA47C,EAAAY,IAAAZ,EAAAU,IACAV,EAAAD,cACAG,EAAArxD,KAAAmxD,GAGA9hB,EAAAgiB,QAEA,IADA,IACAn5D,EAAA,EAAA0e,EADA05C,EAAA0B,KACyC95D,EAAA0e,EAAQ1e,IAEjD,IADA,IAAAm4D,EAAAa,EAAAh5D,GACAiH,EAAA,EAAAukD,EAAA2N,EAAAz1D,OAAwCuD,EAAAukD,EAAQvkD,IAAA,CAChD,IAAA8yD,KACAd,EAAAE,EAAAlyD,GACA8yD,EAAAC,KAAAx3D,KAAA4uB,KAAA6nC,EAAAS,IAAAvB,EAAAI,OACAwB,EAAAE,KAAAz3D,KAAA4uB,KAAA6nC,EAAAU,IAAAxB,EAAAS,OACAmB,EAAAG,KAAA13D,KAAA4uB,KAAA6nC,EAAAW,IAAAzB,EAAAI,OACAwB,EAAAI,KAAA33D,KAAA4uB,KAAA6nC,EAAAY,IAAA1B,EAAAS,OACAmB,EAAA38C,MAAA28C,EAAAG,KAAAH,EAAAC,KACAD,EAAA18C,OAAA08C,EAAAI,KAAAJ,EAAAE,KACAhB,EAAAD,WAAAh5D,GAAA+5D,GAIA,SAAAK,EAAAjjB,EAAAghB,EAAAv/C,GACA,IAAAyhD,EAAAlC,EAAAmC,sBACA7/C,KAUA,OATA4/C,EAAAE,iCAIA9/C,EAAA+/C,IAAAH,EAAAI,eAAA7hD,GAAA4hD,IACA//C,EAAAigD,IAAAL,EAAAI,eAAA7hD,GAAA8hD,MAJAjgD,EAAA+/C,IAAA,GACA//C,EAAAigD,IAAA,IAKAjgD,EAAAkgD,KAAA/hD,EAAA,EAAApW,KAAAqG,IAAAwxD,EAAAO,IAAAngD,EAAA+/C,IAAA,GAAAh4D,KAAAqG,IAAAwxD,EAAAO,IAAAngD,EAAA+/C,KACA//C,EAAAogD,KAAAjiD,EAAA,EAAApW,KAAAqG,IAAAwxD,EAAAS,IAAArgD,EAAAigD,IAAA,GAAAl4D,KAAAqG,IAAAwxD,EAAAS,IAAArgD,EAAAigD,KACAjgD,EAEA,SAAAsgD,EAAA5jB,EAAA6jB,EAAAC,GACA,IAAAC,EAAA,GAAAD,EAAAT,IACAW,EAAA,GAAAF,EAAAP,IACAU,EAAA,IAAAJ,EAAAK,SACAC,EAAA,GAAAL,EAAAT,KAAAY,EAAA,MACAG,EAAA,GAAAN,EAAAP,KAAAU,EAAA,MACAI,EAAAR,EAAAS,KAAAT,EAAAU,KAAAl5D,KAAA4uB,KAAA4pC,EAAAS,KAAAP,GAAA14D,KAAAO,MAAAi4D,EAAAU,KAAAR,GAAA,EACAS,EAAAX,EAAAY,KAAAZ,EAAAa,KAAAr5D,KAAA4uB,KAAA4pC,EAAAY,KAAAT,GAAA34D,KAAAO,MAAAi4D,EAAAa,KAAAV,GAAA,EACAW,EAAAN,EAAAG,EACAX,EAAAe,oBACAb,gBACAC,iBACAK,mBACAG,mBACAG,eACAR,yBACAC,2BAGA,SAAAS,EAAA7kB,EAAA8kB,EAAAhB,GACA,IAWAj7D,EAAAiH,EAAAi1D,EAAAC,EAXAxB,EAAAM,EAAAN,KACAE,EAAAI,EAAAJ,KACAuB,EAAA,GAAAzB,EACA0B,EAAA,GAAAxB,EACAyB,EAAAL,EAAAM,MAAA5B,EACA6B,EAAAP,EAAAQ,MAAA5B,EACA6B,EAAAT,EAAAU,KAAAP,EAAA,GAAAzB,EACAiC,EAAAX,EAAAY,KAAAR,EAAA,GAAAxB,EACAkB,EAAAE,EAAAjB,WAAAe,mBACAe,KACAC,KAEA,IAAA91D,EAAAu1D,EAAkBv1D,EAAA21D,EAAU31D,IAC5B,IAAAjH,EAAAs8D,EAAoBt8D,EAAA08D,EAAU18D,IAAA,CAmB9B,IAlBAk8D,GACAc,IAAAh9D,EACAi9D,IAAAh2D,EACAs1D,KAAAH,EAAAp8D,EACAy8D,KAAAJ,EAAAp1D,EACA01D,KAAAP,GAAAp8D,EAAA,GACA68D,KAAAR,GAAAp1D,EAAA,KAEAi2D,MAAA16D,KAAAiJ,IAAAwwD,EAAAM,KAAAL,EAAAK,MACAL,EAAAiB,MAAA36D,KAAAiJ,IAAAwwD,EAAAQ,KAAAP,EAAAO,MACAP,EAAAkB,MAAA56D,KAAAqG,IAAAozD,EAAAU,KAAAT,EAAAS,MACAT,EAAAmB,MAAA76D,KAAAqG,IAAAozD,EAAAY,KAAAX,EAAAW,MAGAV,EAFA35D,KAAAO,OAAAm5D,EAAAgB,MAAAjB,EAAAM,MAAAR,EAAAT,wBACA94D,KAAAO,OAAAm5D,EAAAiB,MAAAlB,EAAAQ,MAAAV,EAAAR,yBACAQ,EAAAP,iBACAU,EAAAC,iBACAD,EAAAoB,YAAArB,EAAAz2D,KACA02D,EAAAqB,OAAA,IACArB,EAAAkB,OAAAlB,EAAAgB,OAAAhB,EAAAmB,OAAAnB,EAAAiB,OAAA,CAGAL,EAAAh1D,KAAAo0D,GACA,IAAAsB,EAAAT,EAAAZ,QACA13D,IAAA+4D,GACAx9D,EAAAw9D,EAAAC,OACAD,EAAAC,OAAAz9D,EACWA,EAAAw9D,EAAAE,SACXF,EAAAE,OAAA19D,GAEAiH,EAAAu2D,EAAAG,OACAH,EAAAC,OAAAx2D,EACWA,EAAAu2D,EAAAI,SACXJ,EAAAI,OAAA32D,IAGA81D,EAAAZ,GAAAqB,GACAC,OAAAz9D,EACA29D,OAAA12D,EACAy2D,OAAA19D,EACA49D,OAAA32D,GAGAi1D,EAAAsB,YAGAvB,EAAA4B,qBACAzB,eAAAzB,EACA0B,gBAAAxB,EACAiD,iBAAApB,EAAAJ,EAAA,EACAyB,iBAAAnB,EAAAJ,EAAA,GAEAP,EAAAa,aACAb,EAAAc,YAEA,SAAAiB,EAAAhD,EAAAmB,EAAA8B,GAGA,IAFA,IAAAC,KACAC,EAAAnD,EAAAmD,SACAn+D,EAAA,EAAA0e,EAAAy/C,EAAAz6D,OAAyC1D,EAAA0e,EAAQ1e,IAGjD,IAFA,IACA88D,EADAqB,EAAAn+D,GACA88D,WACA71D,EAAA,EAAAukD,EAAAsR,EAAAp5D,OAA6CuD,EAAAukD,EAAQvkD,IAAA,CACrD,IAAAi1D,EAAAY,EAAA71D,GACAi1D,EAAAC,oBAGA+B,EAAAp2D,KAAAo0D,GAGA,OACA+B,cACAnB,WAAAoB,GAyNA,SAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxD,GACA,IAAAyD,EAAAJ,EAAAG,EAAAE,SACAC,EAAAL,EAAAE,EAAAI,UACA,GAAAH,EAAAF,EAAAnhD,OAAA,GAAAuhD,EAAAJ,EAAAlhD,QAAA,EACA,YAEA,IAAAwhD,EAAAF,EAAAJ,EAAAnhD,MAAA49C,EAAAe,mBAAAP,iBACA,OAAAiD,EAAAF,EAAAlhD,OAAAwhD,EAEA,SAAAC,EAAA7F,GAOA,IANA,IAAA8F,EAAA9F,EAAAD,WAAAt1D,OACAg7D,EAAAv3D,OAAA63D,UACAJ,EAAAz3D,OAAA63D,UACAC,EAAA,EACAC,EAAA,EACAC,EAAA,IAAA39D,MAAAu9D,GACA1+D,EAAA,EAAmBA,EAAA0+D,EAAqB1+D,IAAA,CASxC,IARA,IAAA83D,EAAAc,EAAAD,WAAA34D,GACA++D,EAAAjH,EAAAmC,sBAAA8E,yBACAC,EAAA,IAAA79D,MAAA49D,EAAA,GACAE,EAAAn4D,OAAA63D,UACAO,EAAAp4D,OAAA63D,UACAQ,EAAA,EACAC,EAAA,EACAhjD,EAAA,EACA7D,EAAAwmD,EAA4CxmD,GAAA,IAAQA,EAAA,CACpD,IAAAoiD,EAAA7C,EAAAuH,YAAA9mD,GACA+mD,EAAAljD,EAAAu+C,EAAAe,mBAAAb,cACA0E,EAAAnjD,EAAAu+C,EAAAe,mBAAAZ,eACAmE,EAAA98D,KAAAqG,IAAAy2D,EAAAK,GACAJ,EAAA/8D,KAAAqG,IAAA02D,EAAAK,GACAJ,EAAAh9D,KAAAiJ,IAAA+zD,EAAAxE,EAAAe,mBAAAP,kBACAiE,EAAAj9D,KAAAiJ,IAAAg0D,EAAAzE,EAAAe,mBAAAJ,kBACA0D,EAAAzmD,IACAwE,MAAAuiD,EACAtiD,OAAAuiD,GAEAnjD,IAAA,EAEAiiD,EAAAl8D,KAAAqG,IAAA61D,EAAAY,GACAV,EAAAp8D,KAAAqG,IAAA+1D,EAAAW,GACAN,EAAAz8D,KAAAiJ,IAAAwzD,EAAAO,GACAN,EAAA18D,KAAAiJ,IAAAyzD,EAAAO,GACAN,EAAA9+D,IACAq/D,YAAAL,EACAX,SAAAY,EACAV,UAAAW,EACAN,WAAAO,EACAN,WAAAO,GAGA,OACAzG,WAAAmG,EACAT,WACAE,YACAK,aACAC,cAGA,SAAAW,EAAA1oB,GAKA,IAJA,IAAAihB,EAAAjhB,EAAA+hB,IACA4G,EAAA3oB,EAAA4oB,YAAAxyB,MACA0rB,EAAA9hB,EAAAgiB,MAAA2G,GACAf,EAAA3G,EAAA0B,KACAz5D,EAAA,EAAmBA,EAAA0+D,EAAqB1+D,IAAA,CAKxC,IAJA,IAAA83D,EAAAc,EAAAD,WAAA34D,GACA++D,EAAAjH,EAAAmC,sBAAA8E,yBACAM,KACAvB,KACAvlD,EAAA,EAAqBA,GAAAwmD,EAA+BxmD,IAAA,CACpD,IAUAqjD,EAVA+D,EAAA5F,EAAAjjB,EAAAghB,EAAAv/C,GACAoiD,KACAv+C,EAAA,GAAA2iD,EAAAxmD,EASA,GARAoiD,EAAAU,KAAAl5D,KAAA4uB,KAAA+mC,EAAA6B,KAAAv9C,GACAu+C,EAAAa,KAAAr5D,KAAA4uB,KAAA+mC,EAAA8B,KAAAx9C,GACAu+C,EAAAS,KAAAj5D,KAAA4uB,KAAA+mC,EAAA+B,KAAAz9C,GACAu+C,EAAAY,KAAAp5D,KAAA4uB,KAAA+mC,EAAAgC,KAAA19C,GACAu+C,EAAAK,SAAAziD,EACAmiD,EAAA5jB,EAAA6jB,EAAAgF,GACAN,EAAA53D,KAAAkzD,GAEA,IAAApiD,GACAqjD,MACAz2D,KAAA,KACAy2D,EAAAM,KAAA/5D,KAAA4uB,KAAA+mC,EAAA6B,KAAAv9C,GACAw/C,EAAAQ,KAAAj6D,KAAA4uB,KAAA+mC,EAAA8B,KAAAx9C,GACAw/C,EAAAU,KAAAn6D,KAAA4uB,KAAA+mC,EAAA+B,KAAAz9C,GACAw/C,EAAAY,KAAAr6D,KAAA4uB,KAAA+mC,EAAAgC,KAAA19C,GACAw/C,EAAAjB,aACAgB,EAAA7kB,EAAA8kB,EAAA+D,GACA7B,EAAAr2D,KAAAm0D,GACAjB,EAAAmD,UAAAlC,OACS,CACT,IAAAgE,EAAA,GAAAb,EAAAxmD,EAAA,EACAsnD,MACAjE,MACAz2D,KAAA,KACAy2D,EAAAM,KAAA/5D,KAAA4uB,KAAA+mC,EAAA6B,KAAAiG,EAAA,IACAhE,EAAAQ,KAAAj6D,KAAA4uB,KAAA+mC,EAAA8B,KAAAgG,GACAhE,EAAAU,KAAAn6D,KAAA4uB,KAAA+mC,EAAA+B,KAAA+F,EAAA,IACAhE,EAAAY,KAAAr6D,KAAA4uB,KAAA+mC,EAAAgC,KAAA8F,GACAhE,EAAAjB,aACAgB,EAAA7kB,EAAA8kB,EAAA+D,GACA7B,EAAAr2D,KAAAm0D,GACAiE,EAAAp4D,KAAAm0D,IACAA,MACAz2D,KAAA,KACAy2D,EAAAM,KAAA/5D,KAAA4uB,KAAA+mC,EAAA6B,KAAAiG,GACAhE,EAAAQ,KAAAj6D,KAAA4uB,KAAA+mC,EAAA8B,KAAAgG,EAAA,IACAhE,EAAAU,KAAAn6D,KAAA4uB,KAAA+mC,EAAA+B,KAAA+F,GACAhE,EAAAY,KAAAr6D,KAAA4uB,KAAA+mC,EAAAgC,KAAA8F,EAAA,IACAhE,EAAAjB,aACAgB,EAAA7kB,EAAA8kB,EAAA+D,GACA7B,EAAAr2D,KAAAm0D,GACAiE,EAAAp4D,KAAAm0D,IACAA,MACAz2D,KAAA,KACAy2D,EAAAM,KAAA/5D,KAAA4uB,KAAA+mC,EAAA6B,KAAAiG,EAAA,IACAhE,EAAAQ,KAAAj6D,KAAA4uB,KAAA+mC,EAAA8B,KAAAgG,EAAA,IACAhE,EAAAU,KAAAn6D,KAAA4uB,KAAA+mC,EAAA+B,KAAA+F,EAAA,IACAhE,EAAAY,KAAAr6D,KAAA4uB,KAAA+mC,EAAAgC,KAAA8F,EAAA,IACAhE,EAAAjB,aACAgB,EAAA7kB,EAAA8kB,EAAA+D,GACA7B,EAAAr2D,KAAAm0D,GACAiE,EAAAp4D,KAAAm0D,GACAjB,EAAAmD,SAAA+B,GAGA/H,EAAAuH,cACAvH,EAAAgG,WAEA,IAAAgC,EAAAlH,EAAAmH,6BAAAD,iBACA,OAAAA,GACA,OACAlH,EAAAoH,gBAAA,IA5VA,SAAAlpB,GAOA,IANA,IAAAihB,EAAAjhB,EAAA+hB,IACA4G,EAAA3oB,EAAA4oB,YAAAxyB,MACA0rB,EAAA9hB,EAAAgiB,MAAA2G,GACAQ,EAAArH,EAAAmH,6BAAAE,YACAvB,EAAA3G,EAAA0B,KACAyG,EAAA,EACA1iC,EAAA,EAAmBA,EAAAkhC,EAAqBlhC,IACxC0iC,EAAA/9D,KAAAiJ,IAAA80D,EAAAtH,EAAAD,WAAAn7B,GAAAy8B,sBAAA8E,0BAEA,IAAAn/D,EAAA,EACA2Y,EAAA,EACA5Y,EAAA,EACAy6B,EAAA,EACAz2B,KAAAw8D,WAAA,WACA,KAAYvgE,EAAAqgE,EAAiBrgE,IAAA,CAC7B,KAAc2Y,GAAA2nD,EAAkC3nD,IAAA,CAChD,KAAgB5Y,EAAA++D,EAAqB/+D,IAAA,CACrC,IAAAm4D,EAAAc,EAAAD,WAAAh5D,GACA,KAAA4Y,EAAAu/C,EAAAmC,sBAAA8E,0BAAA,CAKA,IAFA,IAAApE,EAAA7C,EAAAuH,YAAA9mD,GACAkjD,EAAAd,EAAAe,mBAAAD,aACkBrhC,EAAAqhC,GAAkB,CACpC,IAAA2E,EAAAzC,EAAAhD,EAAAvgC,EAAAx6B,GAEA,OADAw6B,IACAgmC,EAEAhmC,EAAA,GAEAz6B,EAAA,EAEA4Y,EAAA,EAEA,UAAA++C,EAAA,mBAyTA,CAAAxgB,GACA,MACA,OACA8hB,EAAAoH,gBAAA,IAzTA,SAAAlpB,GAOA,IANA,IAAAihB,EAAAjhB,EAAA+hB,IACA4G,EAAA3oB,EAAA4oB,YAAAxyB,MACA0rB,EAAA9hB,EAAAgiB,MAAA2G,GACAQ,EAAArH,EAAAmH,6BAAAE,YACAvB,EAAA3G,EAAA0B,KACAyG,EAAA,EACA1iC,EAAA,EAAmBA,EAAAkhC,EAAqBlhC,IACxC0iC,EAAA/9D,KAAAiJ,IAAA80D,EAAAtH,EAAAD,WAAAn7B,GAAAy8B,sBAAA8E,0BAEA,IAAAxmD,EAAA,EACA3Y,EAAA,EACAD,EAAA,EACAy6B,EAAA,EACAz2B,KAAAw8D,WAAA,WACA,KAAY5nD,GAAA2nD,EAAkC3nD,IAAA,CAC9C,KAAc3Y,EAAAqgE,EAAiBrgE,IAAA,CAC/B,KAAgBD,EAAA++D,EAAqB/+D,IAAA,CACrC,IAAAm4D,EAAAc,EAAAD,WAAAh5D,GACA,KAAA4Y,EAAAu/C,EAAAmC,sBAAA8E,0BAAA,CAKA,IAFA,IAAApE,EAAA7C,EAAAuH,YAAA9mD,GACAkjD,EAAAd,EAAAe,mBAAAD,aACkBrhC,EAAAqhC,GAAkB,CACpC,IAAA2E,EAAAzC,EAAAhD,EAAAvgC,EAAAx6B,GAEA,OADAw6B,IACAgmC,EAEAhmC,EAAA,GAEAz6B,EAAA,EAEAC,EAAA,EAEA,UAAA03D,EAAA,mBAsRA,CAAAxgB,GACA,MACA,OACA8hB,EAAAoH,gBAAA,IAtRA,SAAAlpB,GACA,IAKAl3C,EAAA2Y,EAAAvY,EAAAgB,EALA+2D,EAAAjhB,EAAA+hB,IACA4G,EAAA3oB,EAAA4oB,YAAAxyB,MACA0rB,EAAA9hB,EAAAgiB,MAAA2G,GACAQ,EAAArH,EAAAmH,6BAAAE,YACAvB,EAAA3G,EAAA0B,KAEAyG,EAAA,EACA,IAAAlgE,EAAA,EAAeA,EAAA0+D,EAAqB1+D,IAAA,CACpC,IAAA83D,EAAAc,EAAAD,WAAA34D,GACAkgE,EAAA/9D,KAAAiJ,IAAA80D,EAAApI,EAAAmC,sBAAA8E,0BAEA,IAAAsB,EAAA,IAAAtoC,WAAAmoC,EAAA,GACA,IAAA3nD,EAAA,EAAeA,GAAA2nD,IAAkC3nD,EAAA,CACjD,IAAA+nD,EAAA,EACA,IAAAtgE,EAAA,EAAiBA,EAAA0+D,IAAqB1+D,EAAA,CACtC,IAAAq/D,EAAAzG,EAAAD,WAAA34D,GAAAq/D,YACA9mD,EAAA8mD,EAAAh8D,SACAi9D,EAAAn+D,KAAAiJ,IAAAk1D,EAAAjB,EAAA9mD,GAAAmjD,mBAAAD,eAGA4E,EAAA9nD,GAAA+nD,EAEA1gE,EAAA,EACA2Y,EAAA,EACAvY,EAAA,EACAgB,EAAA,EACA2C,KAAAw8D,WAAA,WACA,KAAY5nD,GAAA2nD,EAAkC3nD,IAAA,CAC9C,KAAcvX,EAAAq/D,EAAA9nD,GAA+BvX,IAAA,CAC7C,KAAgBhB,EAAA0+D,EAAqB1+D,IAAA,CACrC,IAAA83D,EAAAc,EAAAD,WAAA34D,GACA,KAAAuY,EAAAu/C,EAAAmC,sBAAA8E,0BAAA,CAGA,IAAApE,EAAA7C,EAAAuH,YAAA9mD,GACAkjD,EAAAd,EAAAe,mBAAAD,aACA,KAAAz6D,GAAAy6D,GAAA,CAGA,KAAkB77D,EAAAqgE,GAAiB,CACnC,IAAAG,EAAAzC,EAAAhD,EAAA35D,EAAApB,GAEA,OADAA,IACAwgE,EAEAxgE,EAAA,IAEAI,EAAA,EAEAgB,EAAA,EAEA,UAAAs2D,EAAA,mBAmOA,CAAAxgB,GACA,MACA,OACA8hB,EAAAoH,gBAAA,IAnOA,SAAAlpB,GACA,IAAAihB,EAAAjhB,EAAA+hB,IACA4G,EAAA3oB,EAAA4oB,YAAAxyB,MACA0rB,EAAA9hB,EAAAgiB,MAAA2G,GACAQ,EAAArH,EAAAmH,6BAAAE,YACAvB,EAAA3G,EAAA0B,KACAW,EAAAqE,EAAA7F,GACA2H,EAAAnG,EACAx6D,EAAA,EACA2Y,EAAA,EACAvY,EAAA,EACA+rC,EAAA,EACAxJ,EAAA,EACA5+B,KAAAw8D,WAAA,WACA,KAAY59B,EAAAg+B,EAAA1B,WAAyCt8B,IAAA,CACrD,KAAcwJ,EAAAw0B,EAAA3B,WAAyC7yB,IAAA,CACvD,KAAgB/rC,EAAA0+D,EAAqB1+D,IAAA,CAGrC,IAFA,IAAA83D,EAAAc,EAAAD,WAAA34D,GACA++D,EAAAjH,EAAAmC,sBAAA8E,yBACkBxmD,GAAAwmD,EAA+BxmD,IAAA,CACjD,IAAAoiD,EAAA7C,EAAAuH,YAAA9mD,GACA2lD,EAAA9D,EAAAzB,WAAA34D,GAAAq/D,YAAA9mD,GACA6hB,EAAA2jC,EAAAhyB,EAAAxJ,EAAA27B,EAAAqC,EAAA5F,GACA,UAAAvgC,EAAA,CAGA,KAAoBx6B,EAAAqgE,GAAiB,CACrC,IAAAG,EAAAzC,EAAAhD,EAAAvgC,EAAAx6B,GAEA,OADAA,IACAwgE,EAEAxgE,EAAA,GAEA2Y,EAAA,EAEAvY,EAAA,EAEA+rC,EAAA,EAEA,UAAAurB,EAAA,mBA4LA,CAAAxgB,GACA,MACA,OACA8hB,EAAAoH,gBAAA,IA5LA,SAAAlpB,GACA,IAAAihB,EAAAjhB,EAAA+hB,IACA4G,EAAA3oB,EAAA4oB,YAAAxyB,MACA0rB,EAAA9hB,EAAAgiB,MAAA2G,GACAQ,EAAArH,EAAAmH,6BAAAE,YACAvB,EAAA3G,EAAA0B,KACAW,EAAAqE,EAAA7F,GACAh5D,EAAA,EACA2Y,EAAA,EACAvY,EAAA,EACA+rC,EAAA,EACAxJ,EAAA,EACA5+B,KAAAw8D,WAAA,WACA,KAAYngE,EAAA0+D,IAAqB1+D,EAAA,CAIjC,IAHA,IAAA83D,EAAAc,EAAAD,WAAA34D,GACAugE,EAAAnG,EAAAzB,WAAA34D,GACA++D,EAAAjH,EAAAmC,sBAAA8E,yBACcx8B,EAAAg+B,EAAA1B,WAAyCt8B,IAAA,CACvD,KAAgBwJ,EAAAw0B,EAAA3B,WAAyC7yB,IAAA,CACzD,KAAkBxzB,GAAAwmD,EAA+BxmD,IAAA,CACjD,IAAAoiD,EAAA7C,EAAAuH,YAAA9mD,GACA2lD,EAAAqC,EAAAlB,YAAA9mD,GACA6hB,EAAA2jC,EAAAhyB,EAAAxJ,EAAA27B,EAAAqC,EAAA5F,GACA,UAAAvgC,EAAA,CAGA,KAAoBx6B,EAAAqgE,GAAiB,CACrC,IAAAG,EAAAzC,EAAAhD,EAAAvgC,EAAAx6B,GAEA,OADAA,IACAwgE,EAEAxgE,EAAA,GAEA2Y,EAAA,EAEAwzB,EAAA,EAEAxJ,EAAA,EAEA,UAAA+0B,EAAA,mBAqJA,CAAAxgB,GACA,MACA,QACA,UAAAwgB,EAAA,iCAAAwI,IAGA,SAAAU,EAAA1pB,EAAA1xC,EAAA5D,EAAAgvD,GACA,IACAjvD,EADA8hD,EAAA,EAEAod,EAAA,EACAC,GAAA,EACA,SAAApjC,EAAA2D,GACA,KAAAw/B,EAAAx/B,GAAA,CACA,IAAAn7B,EAAAV,EAAA5D,EAAA6hD,GACAA,IACAqd,GACAn/D,KAAA,EAAAuE,EACA26D,GAAA,EACAC,GAAA,IAEAn/D,KAAA,EAAAuE,EACA26D,GAAA,GAEA,MAAA36D,IACA46D,GAAA,GAIA,OAAAn/D,KADAk/D,GAAAx/B,IACA,GAAAA,GAAA,EAEA,SAAA0/B,EAAAr+D,GACA,aAAA8C,EAAA5D,EAAA6hD,EAAA,IAAAj+C,EAAA5D,EAAA6hD,KAAA/gD,GACAs+D,EAAA,IACA,GACO,MAAAx7D,EAAA5D,EAAA6hD,IAAAj+C,EAAA5D,EAAA6hD,EAAA,KAAA/gD,IACPs+D,EAAA,IACA,GAIA,SAAAA,EAAA3/B,GACAoiB,GAAApiB,EAEA,SAAA4/B,IACAJ,EAAA,EACAC,IACArd,IACAqd,GAAA,GAGA,SAAAI,IACA,OAAAxjC,EAAA,GACA,SAEA,OAAAA,EAAA,GACA,SAEA,IAAAh7B,EAAAg7B,EAAA,GACA,OAAAh7B,EAAA,EACAA,EAAA,GAEAA,EAAAg7B,EAAA,IACA,GACAh7B,EAAA,GAEAA,EAAAg7B,EAAA,IACA,GAOA,IALA,IAAAmiC,EAAA3oB,EAAA4oB,YAAAxyB,MACA0rB,EAAA9hB,EAAAgiB,MAAA2G,GACAsB,EAAAjqB,EAAAkqB,IAAAD,cACAE,EAAAnqB,EAAAkqB,IAAAC,cACAjB,EAAApH,EAAAoH,gBACA3c,EAAAmN,GAAA,CACAqQ,IACAE,GAAAJ,EAAA,MACAC,EAAA,GAEA,IAAAR,EAAAJ,EAAAG,aACA,GAAA7iC,EAAA,IAMA,IAHA,IAEAu+B,EAFA+B,EAAAwC,EAAAxC,YACA5sD,KAEArR,EAAA,EAAA0e,EAAA+hD,EAAA3D,WAAAp5D,OAAoD1D,EAAA0e,EAAQ1e,IAAA,CAE5D,IAAAw9D,GADAtB,EAAAuE,EAAA3D,WAAA98D,IACAw9D,SACA+D,EAAArF,EAAAc,IAAAQ,EAAAC,OACA+D,EAAAtF,EAAAe,IAAAO,EAAAG,OACA8D,GAAA,EACAC,GAAA,EAEA,QAAAj9D,IAAAy3D,EAAA,SACAuF,IAAA9jC,EAAA,OACS,CAET,IAAAgkC,EAAAC,EACA,QAAAn9D,KAFA+4D,EAAAtB,EAAAsB,UAEA,cACAmE,EAAAnE,EAAAmE,kBACW,CACX,IAAAvkD,EAAAogD,EAAAE,OAAAF,EAAAC,OAAA,EACApgD,EAAAmgD,EAAAI,OAAAJ,EAAAG,OAAA,EACAgE,EAAA,IAAAE,EAAAzkD,EAAAC,EAAA4gD,GACA2D,EAAA,IAAAE,EAAA1kD,EAAAC,GACAmgD,EAAAmE,gBACAnE,EAAAoE,oBAEA,GAAAD,EAAA1qC,MAAAsqC,EAAAC,EAAAvD,GACA,QACA,IAAAtgC,EAAA,GAOe,CACfgkC,EAAAI,eAAA9D,GACA,MAPA,IADA0D,EAAAK,YACA,CACA9F,EAAA+F,UAAA,EACAR,EAAAC,GAAA,EACA,QASA,GAAAD,EAAA,CAGA,GAAAC,EAAA,CAGA,KAFAE,EAAApE,EAAAoE,mBACA3qC,MAAAsqC,EAAAC,KAEA,GAAA7jC,EAAA,IAEA,IADAikC,EAAAI,YAEA,WAGAJ,EAAAG,iBAGA7F,EAAAgG,cAAAN,EAAAj/D,MAGA,IADA,IAAAw/D,EAAAhB,IACAxjC,EAAA,IACAu+B,EAAAqB,SAEA,IAAA6E,GAAA,EAAAhsC,EAAA9hB,MAAA6tD,GAEAE,EAAA1kC,GADAwkC,EAAA,GAAAC,IAAA,EAAAA,GAAAlG,EAAAqB,QAEAlsD,EAAAvJ,MACAo0D,YACAiG,eACAtR,WAAAwR,KAOA,IAJAnB,IACAI,GACAN,EAAA,KAEA3vD,EAAA3N,OAAA,IACA,IAAA4+D,EAAAjxD,EAAA2mB,aAEAvzB,KADAy3D,EAAAoG,EAAApG,WACA,OACAA,EAAAz2D,SAEAy2D,EAAAz2D,KAAAqC,MACArC,OACAgD,MAAA5G,EAAA6hD,EACAh7C,IAAA7G,EAAA6hD,EAAA4e,EAAAzR,WACAsR,aAAAG,EAAAH,eAEAze,GAAA4e,EAAAzR,aAGA,OAAAnN,EAEA,SAAA6e,EAAAC,EAAAC,EAAAC,EAAAzG,EAAA0G,EAAAC,EAAAC,EAAAC,GAOA,IANA,IAAAzK,EAAA4D,EAAAM,KACA7D,EAAAuD,EAAAQ,KACAr/C,EAAA6+C,EAAAU,KAAAV,EAAAM,KACAO,EAAAb,EAAAa,WACAiG,EAAA,MAAA9G,EAAAz2D,KAAA+rB,OAAA,OACAyxC,EAAA,MAAA/G,EAAAz2D,KAAA+rB,OAAA,GAAAkxC,EAAA,EACAziE,EAAA,EAAA0e,EAAAo+C,EAAAp5D,OAA2C1D,EAAA0e,IAAQ1e,EAAA,CACnD,IAAAk8D,EAAAY,EAAA98D,GACAijE,EAAA/G,EAAAkB,MAAAlB,EAAAgB,MACAgG,EAAAhH,EAAAmB,MAAAnB,EAAAiB,MACA,OAAA8F,GAAA,IAAAC,QAGAz+D,IAAAy3D,EAAA,MAGA,IAAAiH,EAAAC,EACAD,EAAA,IAAAE,EAAAJ,EAAAC,EAAAhH,EAAAoB,YAAApB,EAAAgG,cAAAU,GACAQ,EAAA,EACA,IAGAn8D,EAAAukD,EAAA8X,EAHA79D,EAAAy2D,EAAAz2D,KACAk1C,EAAA,EACAwnB,EAAA,EAEA,IAAAl7D,EAAA,EAAAukD,EAAA/lD,EAAA/B,OAAmCuD,EAAAukD,EAAQvkD,IAE3C0zC,IADA2oB,EAAA79D,EAAAwB,IACAyB,IAAA46D,EAAA76D,MACA05D,GAAAmB,EAAAnB,aAEA,IAAAoB,EAAA,IAAA3/D,WAAA+2C,GACA+I,EAAA,EACA,IAAAz8C,EAAA,EAAAukD,EAAA/lD,EAAA/B,OAAmCuD,EAAAukD,EAAQvkD,IAAA,CAE3C,IAAAqb,GADAghD,EAAA79D,EAAAwB,IACAxB,KAAAsE,SAAAu5D,EAAA76D,MAAA66D,EAAA56D,KACA66D,EAAA3zD,IAAA0S,EAAAohC,GACAA,GAAAphC,EAAA5e,OAEA,IAAA8/D,EAAA,IAAA9L,EAAAnB,kBAAAgN,EAAA,EAAA5oB,GAEA,IADAwoB,EAAAM,WAAAD,GACAv8D,EAAA,EAAiBA,EAAAk7D,EAAkBl7D,IAAA,CACnC,OAAAm8D,GACA,OACAD,EAAAO,iCACA,MACA,OACAP,EAAAQ,6BACA,MACA,OACAR,EAAAS,iBACAd,GACAK,EAAAU,0BAIAT,KAAA,KAEA,IAKA3oC,EAAA15B,EAAA+iE,EALAjiE,EAAAq6D,EAAAgB,MAAA7E,GAAA6D,EAAAiB,MAAAzE,GAAAt7C,EACA60B,EAAAkxB,EAAAY,gBACAC,EAAAb,EAAAc,qBACAC,EAAAf,EAAAe,YACAC,EAAAtB,EAAA,KAEAnf,EAAA,EACA,IAAA0gB,EAAA,OAAAnI,EAAAz2D,KACA,IAAAyB,EAAA,EAAiBA,EAAAi8D,EAAiBj8D,IAAA,CAClC,IACAo9D,EAAA,GADAxiE,EAAAub,EAAA,IACAqlD,EAAArlD,GAAA2lD,EAAAC,EACA,IAAAvoC,EAAA,EAAmBA,EAAAwoC,EAAgBxoC,IAAA,CAEnC,QADA15B,EAAAijE,EAAAtgB,IACA,CACA3iD,KAAAojE,GAAAxB,EACA,IAAA1wB,EAAAyR,KACA3iD,MAEA+iE,EAAAI,EAAAxgB,GACA,IAAA54C,EAAAs5D,EAAAC,GAAAxiE,GAAA,GAAAA,EAEA2gE,EAAA13D,GADA+3D,GAAAiB,GAAAlB,EACA7hE,EAEAA,GAAA,GAAA6hE,EAAAkB,GAGAjiE,IACA6hD,IAEA7hD,GAAAub,EAAA6lD,KAIA,SAAAqB,EAAAntB,EAAA8hB,EAAA54D,GAcA,IAbA,IAAA83D,EAAAc,EAAAD,WAAA34D,GACAi6D,EAAAnC,EAAAmC,sBACAiK,EAAApM,EAAAoM,uBACAnF,EAAA9E,EAAA8E,yBACAoF,EAAAD,EAAAE,OACAC,EAAAH,EAAAG,gBACAC,EAAAJ,EAAAI,UACA7B,EAAAxI,EAAAwI,uBACA8B,EAAAztB,EAAA6hB,WAAA34D,GAAAukE,UACA/B,EAAAvI,EAAAuK,yBACAhsD,EAAAgqD,EAAA,IAAAiC,EAAA,IAAAC,EACAC,KACA7+D,EAAA,EACAnG,EAAA,EAAmBA,GAAAo/D,EAA+Bp/D,IAAA,CAKlD,IAJA,IAAAg7D,EAAA7C,EAAAuH,YAAA1/D,GACAod,EAAA49C,EAAAS,KAAAT,EAAAU,KACAr+C,EAAA29C,EAAAY,KAAAZ,EAAAa,KACA2G,EAAA,IAAA78B,aAAAvoB,EAAAC,GACApW,EAAA,EAAAukD,EAAAwP,EAAAmD,SAAAz6D,OAAsDuD,EAAAukD,EAAQvkD,IAAA,CAC9D,IAAAg+D,EAAAC,EACAR,GAIAO,EAAAT,EAAAr+D,GAAA8+D,GACAC,EAAAV,EAAAr+D,GAAA++D,QACA/+D,MALA8+D,EAAAT,EAAA,GAAAS,GACAC,EAAAV,EAAA,GAAAU,SAAAllE,EAAA,IAAAA,EAAA,IAMA,IAAAi8D,EAAAjB,EAAAmD,SAAAl3D,GACAk+D,EAAAvN,EAAAqE,EAAAz2D,MAGA+8D,EAAAC,EAAAplD,EAAAC,EAAA4+C,EAFA4G,EAAA,EAAArgE,KAAAC,IAAA,EAAAmiE,EAAAO,EAAAD,IAAA,EAAAD,EAAA,MACAN,EAAAO,EAAA,EACArC,EAAAC,GAEAkC,EAAAl9D,MACAsV,QACAC,SACA2rC,MAAAwZ,IAGA,IAAA/nD,EAAA5B,EAAAusD,UAAAJ,EAAA7M,EAAA6B,KAAA7B,EAAA8B,MACA,OACAh+B,KAAAk8B,EAAA6B,KACAqL,IAAAlN,EAAA8B,KACA78C,MAAA3C,EAAA2C,MACAC,OAAA5C,EAAA4C,OACA2rC,MAAAvuC,EAAAuuC,OAkFA,SAAAsc,EAAAnuB,EAAA2oB,GAIA,IAHA,IACAf,EADA5nB,EAAA+hB,IACAY,KACAb,EAAA9hB,EAAAgiB,MAAA2G,GACAz/D,EAAA,EAAmBA,EAAA0+D,EAAqB1+D,IAAA,CACxC,IAAA83D,EAAAc,EAAAD,WAAA34D,GACAklE,OAAA9gE,IAAA0yC,EAAA4oB,YAAAyF,IAAAnlE,GAAA82C,EAAA4oB,YAAAyF,IAAAnlE,GAAA82C,EAAA4oB,YAAA0F,IACAtN,EAAAoM,uBAAAgB,EACA,IAAAlL,OAAA51D,IAAA0yC,EAAA4oB,YAAA2F,IAAArlE,GAAA82C,EAAA4oB,YAAA2F,IAAArlE,GAAA82C,EAAA4oB,YAAAsB,IACAlJ,EAAAmC,sBAAAD,EAEApB,EAAAmH,6BAAAjpB,EAAA4oB,YAAAsB,IAvwCA5J,EAAAt2D,WACAkiC,MAAA,SAAA59B,GAEA,YADA,EAAA2wB,EAAA/hB,YAAA5O,EAAA,GAOA,IAFA,IAAAi+C,EAAA,EACAhgD,EAAA+B,EAAA/B,OACAggD,EAAAhgD,GAAA,CACA,IAAAiiE,EAAA,EACAC,GAAA,EAAAxvC,EAAAhiB,YAAA3O,EAAAi+C,GACAmiB,GAAA,EAAAzvC,EAAAhiB,YAAA3O,EAAAi+C,EAAA,GAUA,GATAA,GAAAiiB,EACA,IAAAC,IACAA,EAAA,cAAAxvC,EAAAhiB,YAAA3O,EAAAi+C,IAAA,EAAAttB,EAAAhiB,YAAA3O,EAAAi+C,EAAA,GACAA,GAAA,EACAiiB,GAAA,GAEA,IAAAC,IACAA,EAAAliE,EAAAggD,EAAAiiB,GAEAC,EAAAD,EACA,UAAAhO,EAAA,0BAEA,IAAA9G,EAAA+U,EAAAD,EACAG,GAAA,EACA,OAAAD,GACA,gBACAC,GAAA,EACA,MACA,gBACA,IAAAC,EAAAtgE,EAAAi+C,GACA,OAAAqiB,EAAA,CACA,IAAAC,GAAA,EAAA5vC,EAAAhiB,YAAA3O,EAAAi+C,EAAA,GACA,OAAAsiB,GACA,QACA,QACA,QACA,MACA,SACA,EAAA5vC,EAAA1iB,MAAA,sBAAAsyD,SAGa,IAAAD,IACb,EAAA3vC,EAAAnhB,MAAA,6BAEA,MACA,gBACAjR,KAAAiiE,gBAAAxgE,EAAAi+C,IAAAmN,GACA,MACA,eACA,eAAAz6B,EAAAhiB,YAAA3O,EAAAi+C,KACA,EAAAttB,EAAA1iB,MAAA,yBAEA,MACA,gBACA,gBACA,gBACA,gBACA,gBACA,MACA,QACA,IAAAwyD,EAAAt/D,OAAA4C,aAAAq8D,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,IACA,EAAAzvC,EAAA1iB,MAAA,2BAAAmyD,EAAA,KAAAK,EAAA,KAGAJ,IACApiB,GAAAmN,QAhEA7sD,KAAAiiE,gBAAAxgE,EAAA,EAAAA,EAAA/B,SAoEAyiE,qBAAA,SAAAhmD,GAEA,IADA,IAAAimD,EAAAjmD,EAAAqW,UACA4vC,GAAA,IAIA,YAHAA,GAEA,GADAA,EAAAjmD,EAAAqW,YAEA,CACArW,EAAA6W,KAAA,GACA,IAAAyhC,EAAAt4C,EAAAwW,aAAA,EACAmiC,EAAA34C,EAAAwW,aAAA,EACA2hC,EAAAn4C,EAAAwW,aAAA,EACAgiC,EAAAx4C,EAAAwW,aAAA,EACAxW,EAAA6W,KAAA,IACA,IAAA8iC,EAAA35C,EAAAsW,YAKA,OAJAzyB,KAAAoZ,MAAAq7C,EAAAH,EACAt0D,KAAAqZ,OAAAy7C,EAAAH,EACA30D,KAAA+6D,gBAAAjF,OACA91D,KAAA+xC,iBAAA,IAIA,UAAA4hB,EAAA,uCAEAsO,gBAAA,SAAAxgE,EAAAgD,EAAAC,GACA,IAAAyuC,KACAkvB,GAAA,EACA,IAEA,IADA,IAAA3iB,EAAAj7C,EACAi7C,EAAA,EAAAh7C,GAAA,CACA,IAAAmH,GAAA,EAAAumB,EAAA/hB,YAAA5O,EAAAi+C,GACAA,GAAA,EACA,IACAz8C,EACAq/D,EACA9B,EACA+B,EACA7B,EACAzL,EANAv1D,EAAA,EAOA,OAAAmM,GACA,WACAsnC,EAAAqvB,YAAA,EACA,MACA,WACA,MACA,WACA9iE,GAAA,EAAA0yB,EAAA/hB,YAAA5O,EAAAi+C,GACA,IAAA0U,KACAA,EAAAK,MAAA,EAAAriC,EAAAhiB,YAAA3O,EAAAi+C,EAAA,GACA0U,EAAAU,MAAA,EAAA1iC,EAAAhiB,YAAA3O,EAAAi+C,EAAA,GACA0U,EAAAE,OAAA,EAAAliC,EAAAhiB,YAAA3O,EAAAi+C,EAAA,IACA0U,EAAAO,OAAA,EAAAviC,EAAAhiB,YAAA3O,EAAAi+C,EAAA,IACA0U,EAAAkB,OAAA,EAAAljC,EAAAhiB,YAAA3O,EAAAi+C,EAAA,IACA0U,EAAAqB,OAAA,EAAArjC,EAAAhiB,YAAA3O,EAAAi+C,EAAA,IACA0U,EAAAiB,QAAA,EAAAjjC,EAAAhiB,YAAA3O,EAAAi+C,EAAA,IACA0U,EAAAoB,QAAA,EAAApjC,EAAAhiB,YAAA3O,EAAAi+C,EAAA,IACA,IAAAqb,GAAA,EAAA3oC,EAAA/hB,YAAA5O,EAAAi+C,EAAA,IACA0U,EAAA0B,KAAAiF,EACA,IAAA/F,KACA/xD,EAAAy8C,EAAA,GACA,QAAA1jD,EAAA,EAA6BA,EAAA++D,EAAqB/+D,IAAA,CAClD,IAAAm4D,GACAyM,UAAA,OAAAn/D,EAAAwB,IACAw/D,YAAA,IAAAhhE,EAAAwB,IACAsxD,MAAA9yD,EAAAwB,EAAA,GACA2xD,MAAAnzD,EAAAwB,EAAA,IAEAA,GAAA,EACAixD,EAAAC,EAAAC,GACAY,EAAAlxD,KAAAqwD,GAEAhhB,EAAA+hB,IAAAd,EACAjhB,EAAA6hB,aACAD,EAAA5hB,EAAA6hB,GACA7hB,EAAAquB,OACAruB,EAAAuuB,OACA,MACA,WACAhiE,GAAA,EAAA0yB,EAAA/hB,YAAA5O,EAAAi+C,GACA,IAAAgjB,KAGA,OAFAz/D,EAAAy8C,EAAA,EAEA,IADA4iB,EAAA7gE,EAAAwB,OAEA,OACAs/D,EAAA,EACA7B,GAAA,EACA,MACA,OACA6B,EAAA,GACA7B,GAAA,EACA,MACA,OACA6B,EAAA,GACA7B,GAAA,EACA,MACA,QACA,UAAAzgE,MAAA,sBAAAqiE,GAMA,IAJAI,EAAAC,eAAA,IAAAJ,EACAG,EAAAhC,kBACAgC,EAAA/B,UAAA2B,GAAA,EACA9B,KACAv9D,EAAAvD,EAAAggD,GAAA,CACA,IAAAkjB,KACA,IAAAL,GACAK,EAAA1B,QAAAz/D,EAAAwB,MAAA,EACA2/D,EAAA3B,GAAA,IAEA2B,EAAA1B,QAAAz/D,EAAAwB,IAAA,EACA2/D,EAAA3B,IAAA,EAAAx/D,EAAAwB,KAAA,EAAAxB,EAAAwB,EAAA,GACAA,GAAA,GAEAu9D,EAAA18D,KAAA8+D,GAEAF,EAAAjC,OAAAD,EACArtB,EAAAqvB,WACArvB,EAAAsuB,IAAAiB,GAEAvvB,EAAA4oB,YAAA0F,IAAAiB,EACAvvB,EAAA4oB,YAAAyF,QAEA,MACA,WACA9hE,GAAA,EAAA0yB,EAAA/hB,YAAA5O,EAAAi+C,GACA,IAEAmjB,EAFAC,KAUA,OATA7/D,EAAAy8C,EAAA,EAEAvM,EAAA+hB,IAAAY,KAAA,IACA+M,EAAAphE,EAAAwB,MAEA4/D,GAAA,EAAAzwC,EAAA/hB,YAAA5O,EAAAwB,GACAA,GAAA,GAGA,IADAq/D,EAAA7gE,EAAAwB,OAEA,OACAs/D,EAAA,EACA7B,GAAA,EACA,MACA,OACA6B,EAAA,GACA7B,GAAA,EACA,MACA,OACA6B,EAAA,GACA7B,GAAA,EACA,MACA,QACA,UAAAzgE,MAAA,sBAAAqiE,GAMA,IAJAQ,EAAAH,eAAA,IAAAJ,EACAO,EAAApC,kBACAoC,EAAAnC,UAAA2B,GAAA,EACA9B,KACAv9D,EAAAvD,EAAAggD,GACAkjB,KACA,IAAAL,GACAK,EAAA1B,QAAAz/D,EAAAwB,MAAA,EACA2/D,EAAA3B,GAAA,IAEA2B,EAAA1B,QAAAz/D,EAAAwB,IAAA,EACA2/D,EAAA3B,IAAA,EAAAx/D,EAAAwB,KAAA,EAAAxB,EAAAwB,EAAA,GACAA,GAAA,GAEAu9D,EAAA18D,KAAA8+D,GAEAE,EAAArC,OAAAD,EACArtB,EAAAqvB,WACArvB,EAAAquB,IAAAqB,GAAAC,EAEA3vB,EAAA4oB,YAAAyF,IAAAqB,GAAAC,EAEA,MACA,WACApjE,GAAA,EAAA0yB,EAAA/hB,YAAA5O,EAAAi+C,GACA,IAAAqjB,KACA9/D,EAAAy8C,EAAA,EACA,IAAAsjB,EAAAvhE,EAAAwB,KACA8/D,EAAAxM,mCAAA,EAAAyM,GACAD,EAAA3F,iBAAA,EAAA4F,GACAD,EAAAzF,iBAAA,EAAA0F,GACAD,EAAA5G,iBAAA16D,EAAAwB,KACA8/D,EAAAzG,aAAA,EAAAlqC,EAAA/hB,YAAA5O,EAAAwB,GACAA,GAAA,EACA8/D,EAAAE,2BAAAxhE,EAAAwB,KACA8/D,EAAA3H,yBAAA35D,EAAAwB,KACA8/D,EAAAnM,IAAA,MAAAn1D,EAAAwB,MACA8/D,EAAAjM,IAAA,MAAAr1D,EAAAwB,MACA,IAAAigE,EAAAzhE,EAAAwB,KAQA,GAPA8/D,EAAAI,mCAAA,EAAAD,GACAH,EAAAK,6BAAA,EAAAF,GACAH,EAAAM,+BAAA,EAAAH,GACAH,EAAAO,oBAAA,EAAAJ,GACAH,EAAAQ,0BAAA,GAAAL,GACAH,EAAAjE,0BAAA,GAAAoE,GACAH,EAAAlC,yBAAAp/D,EAAAwB,KACA8/D,EAAAxM,gCAAA,CAEA,IADA,IAAAE,KACAxzD,EAAAvD,EAAAggD,GAAA,CACA,IAAA8jB,EAAA/hE,EAAAwB,KACAwzD,EAAA3yD,MACA0yD,IAAA,GAAAgN,EACA9M,IAAA8M,GAAA,IAGAT,EAAAtM,iBAEA,IAAAgN,KAgBA,GAfAV,EAAAI,iCACAM,EAAA3/D,KAAA,mCAEAi/D,EAAAK,2BACAK,EAAA3/D,KAAA,6BAEAi/D,EAAAM,6BACAI,EAAA3/D,KAAA,+BAEAi/D,EAAAO,kBACAG,EAAA3/D,KAAA,oBAEAi/D,EAAAQ,wBACAE,EAAA3/D,KAAA,0BAEA2/D,EAAA/jE,OAAA,EAEA,MADA2iE,GAAA,EACA,IAAApiE,MAAA,4BAAAwjE,EAAA97D,KAAA,WAEAwrC,EAAAqvB,WACArvB,EAAAkqB,IAAA0F,GAEA5vB,EAAA4oB,YAAAsB,IAAA0F,EACA5vB,EAAA4oB,YAAA2F,QAEA,MACA,WACAhiE,GAAA,EAAA0yB,EAAA/hB,YAAA5O,EAAAi+C,IACAuV,MACA1rB,OAAA,EAAAnX,EAAA/hB,YAAA5O,EAAAi+C,EAAA,GACAuV,EAAAv1D,QAAA,EAAA0yB,EAAAhiB,YAAA3O,EAAAi+C,EAAA,GACAuV,EAAAnC,QAAAmC,EAAAv1D,OAAAggD,EAAA,EACAuV,EAAAyO,UAAAjiE,EAAAi+C,EAAA,GACAuV,EAAA0O,WAAAliE,EAAAi+C,EAAA,GACAvM,EAAAqvB,YAAA,EACA,IAAAvN,EAAAyO,YACAzO,EAAAoI,IAAAlqB,EAAAkqB,IACApI,EAAAyM,IAAAvuB,EAAAuuB,IAAA1gE,MAAA,GACAi0D,EAAAwM,IAAAtuB,EAAAsuB,IACAxM,EAAAuM,IAAAruB,EAAAquB,IAAAxgE,MAAA,IAEAmyC,EAAA4oB,YAAA9G,EACA,MACA,WAEA,KADAA,EAAA9hB,EAAA4oB,aACA2H,YACApC,EAAAnuB,EAAA8hB,EAAA1rB,OACAsyB,EAAA1oB,IAGA0pB,EAAA1pB,EAAA1xC,EAAAi+C,EADAhgD,EAAAu1D,EAAAnC,QAAApT,GAEA,MACA,WACA,WACA,WACA,WACAhgD,GAAA,EAAA0yB,EAAA/hB,YAAA5O,EAAAi+C,GACA,MACA,WACA,UAAAz/C,MAAA,mDACA,QACA,UAAAA,MAAA,4BAAA4L,EAAAtO,SAAA,KAEAmiD,GAAAhgD,GAEO,MAAAzB,GACP,GAAAokE,GAAAriE,KAAAi0D,qBACA,UAAAN,EAAA11D,EAAAoW,UAEA,EAAA+d,EAAA1iB,MAAA,gCAAAzR,EAAAoW,SAGArU,KAAAm1D,MA80BA,SAAAhiB,GAKA,IAJA,IAAAihB,EAAAjhB,EAAA+hB,IACAF,EAAA7hB,EAAA6hB,WACA+F,EAAA3G,EAAA0B,KACA8N,KACA5nE,EAAA,EAAA0e,EAAAy4B,EAAAgiB,MAAAz1D,OAA8C1D,EAAA0e,EAAQ1e,IAAA,CACtD,IAEAK,EAFA44D,EAAA9hB,EAAAgiB,MAAAn5D,GACA6nE,KAEA,IAAAxnE,EAAA,EAAiBA,EAAA0+D,EAAqB1+D,IACtCwnE,EAAAxnE,GAAAikE,EAAAntB,EAAA8hB,EAAA54D,GAEA,IASA23B,EAAAn2B,EAEAoF,EACAukD,EACAkN,EACAG,EACAiP,EAfAC,EAAAF,EAAA,GACAv7D,EAAA,IAAA07D,kBAAAD,EAAA/e,MAAAtlD,OAAAq7D,GACAtkD,GACAwhB,KAAA8rC,EAAA9rC,KACAopC,IAAA0C,EAAA1C,IACAjoD,MAAA2qD,EAAA3qD,MACAC,OAAA0qD,EAAA1qD,OACA2rC,MAAA18C,GAGAxB,EAAA,EAMA,GAAAmuD,EAAAmH,6BAAA6G,2BAAA,CACA,IAAAgB,EAAA,IAAAlJ,EACAmJ,EAAAL,EAAA,GAAA7e,MACAmf,EAAAN,EAAA,GAAA7e,MACAof,EAAAP,EAAA,GAAA7e,MACAqf,EAAAJ,EAAAJ,EAAA,GAAA7e,MAAA,KACAhxB,EAAAghC,EAAA,GAAA4L,UAAA,EACA/iE,EAAA,SAAAm2B,GACA,IAAAswC,EAAArP,EAAAD,WAAA,GACAz3B,EAAAw9B,EAAA,EAEA,GADAvT,EAAA0c,EAAAxkE,OACA4kE,EAAAhO,sBAAAuK,yBAUA,IAAA59D,EAAA,EAAqBA,EAAAukD,EAAQvkD,IAAA6D,GAAAy2B,EAAA,CAC7Bm3B,EAAAwP,EAAAjhE,GAAApF,EACAg3D,EAAAsP,EAAAlhE,GACA6gE,EAAAM,EAAAnhE,GACA,IAAAsJ,EAAAmoD,GAAAoP,EAAAjP,GAAA,GACAvsD,EAAAxB,KAAAyF,EAAAu3D,GAAA9vC,EACA1rB,EAAAxB,KAAAyF,GAAAynB,EACA1rB,EAAAxB,KAAAyF,EAAAsoD,GAAA7gC,OAhBA,IAAA/wB,EAAA,EAAqBA,EAAAukD,EAAQvkD,IAAA6D,GAAAy2B,EAC7Bm3B,EAAAwP,EAAAjhE,GAAApF,EACAg3D,EAAAsP,EAAAlhE,GACA6gE,EAAAM,EAAAnhE,GACAqF,EAAAxB,KAAA4tD,EAAA,MAAAoP,GAAA9vC,EACA1rB,EAAAxB,KAAA4tD,EAAA,OAAAG,EAAA,OAAAiP,GAAA9vC,EACA1rB,EAAAxB,KAAA4tD,EAAA,MAAAG,GAAA7gC,EAaA,GAAAiwC,EACA,IAAAhhE,EAAA,EAAA6D,EAAA,EAA8B7D,EAAAukD,EAAQvkD,IAAA6D,GAAA,EACtCwB,EAAAxB,GAAAu9D,EAAAphE,GAAApF,GAAAm2B,OAIA,IAAA33B,EAAA,EAAmBA,EAAA0+D,EAAqB1+D,IAAA,CACxC,IAAA2oD,EAAA6e,EAAAxnE,GAAA2oD,MAGA,IAFAhxB,EAAAghC,EAAA34D,GAAAukE,UAAA,EACA/iE,EAAA,SAAAm2B,GACAltB,EAAAzK,EAAA4G,EAAA,EAAAukD,EAAAxC,EAAAtlD,OAAiDuD,EAAAukD,EAAQvkD,IACzDqF,EAAAxB,GAAAk+C,EAAA/hD,GAAApF,GAAAm2B,EACAltB,GAAAi0D,EAIA6I,EAAA9/D,KAAA2S,GAEA,OAAAmtD,EA35BAW,CAAApxB,GACAnzC,KAAAoZ,MAAA+5B,EAAA+hB,IAAAT,KAAAthB,EAAA+hB,IAAAZ,MACAt0D,KAAAqZ,OAAA85B,EAAA+hB,IAAAJ,KAAA3hB,EAAA+hB,IAAAP,MACA30D,KAAA+6D,gBAAA5nB,EAAA+hB,IAAAY,OAu6BA,IAAAgI,EAAA,WACA,SAAAA,EAAA1kD,EAAAC,GACA,IAAAmrD,GAAA,EAAApyC,EAAA9hB,MAAA9R,KAAAiJ,IAAA2R,EAAAC,IAAA,EACArZ,KAAAykE,UACA,QAAAzoE,EAAA,EAAqBA,EAAAwoE,EAAkBxoE,IAAA,CACvC,IAAAqxB,GACAjU,QACAC,SACA2rC,UAEAhlD,KAAAykE,OAAA3gE,KAAAupB,GACAjU,EAAA5a,KAAA4uB,KAAAhU,EAAA,GACAC,EAAA7a,KAAA4uB,KAAA/T,EAAA,IA6CA,OA1CAykD,EAAA3gE,WACA81B,MAAA,SAAAj3B,EAAAiH,GAIA,IAHA,IAEAoqB,EAFAq3C,EAAA,EACA/lE,EAAA,EAEA+lE,EAAA1kE,KAAAykE,OAAA/kE,QAAA,CAEA,IAAA6pC,EAAAvtC,EAAAiH,GADAoqB,EAAArtB,KAAAykE,OAAAC,IACAtrD,MACA,QAAA3Y,IAAA4sB,EAAA23B,MAAAzb,GAAA,CACA5qC,EAAA0uB,EAAA23B,MAAAzb,GACA,MAEAlc,EAAAkc,QACAvtC,IAAA,EACAiH,IAAA,EACAyhE,IAEAA,KACAr3C,EAAArtB,KAAAykE,OAAAC,IACA1f,MAAA33B,EAAAkc,OAAA5qC,EACAqB,KAAA0kE,sBACA1kE,KAAArB,OAEAo/D,eAAA,WACA,IAAA1wC,EAAArtB,KAAAykE,OAAAzkE,KAAA0kE,cACAr3C,EAAA23B,MAAA33B,EAAAkc,UAEAy0B,UAAA,WACA,IAAA0G,EAAA1kE,KAAA0kE,aACAr3C,EAAArtB,KAAAykE,OAAAC,GACA/lE,EAAA0uB,EAAA23B,MAAA33B,EAAAkc,OAEA,QADAm7B,EACA,GACA1kE,KAAArB,SACA,IAEAqB,KAAA0kE,gBACAr3C,EAAArtB,KAAAykE,OAAAC,IACA1f,MAAA33B,EAAAkc,OAAA5qC,GACA,KAGAm/D,EAzDA,GA2DAD,EAAA,WACA,SAAAA,EAAAzkD,EAAAC,EAAAsrD,GACA,IAAAH,GAAA,EAAApyC,EAAA9hB,MAAA9R,KAAAiJ,IAAA2R,EAAAC,IAAA,EACArZ,KAAAykE,UACA,QAAAzoE,EAAA,EAAqBA,EAAAwoE,EAAkBxoE,IAAA,CAEvC,IADA,IAAAgpD,EAAA,IAAAplD,WAAAwZ,EAAAC,GACApW,EAAA,EAAAukD,EAAAxC,EAAAtlD,OAA0CuD,EAAAukD,EAAQvkD,IAClD+hD,EAAA/hD,GAAA0hE,EAEA,IAAAt3C,GACAjU,QACAC,SACA2rC,SAEAhlD,KAAAykE,OAAA3gE,KAAAupB,GACAjU,EAAA5a,KAAA4uB,KAAAhU,EAAA,GACAC,EAAA7a,KAAA4uB,KAAA/T,EAAA,IAuDA,OApDAwkD,EAAA1gE,WACA81B,MAAA,SAAAj3B,EAAAiH,EAAA2hE,GAEA,IADA,IAAAF,EAAA,EACAA,EAAA1kE,KAAAykE,OAAA/kE,QAAA,CACA,IAAA2tB,EAAArtB,KAAAykE,OAAAC,GACAn7B,EAAAvtC,EAAAiH,EAAAoqB,EAAAjU,MACAiU,EAAAkc,QACA,IAAA5qC,EAAA0uB,EAAA23B,MAAAzb,GACA,SAAA5qC,EACA,MAEA,GAAAA,EAAAimE,EAGA,OAFA5kE,KAAA0kE,eACA1kE,KAAA6kE,mBACA,EAEA7oE,IAAA,EACAiH,IAAA,EACAyhE,IAGA,OADA1kE,KAAA0kE,eAAA,GACA,GAEA3G,eAAA,SAAA6G,GACA,IAAAv3C,EAAArtB,KAAAykE,OAAAzkE,KAAA0kE,cACAr3C,EAAA23B,MAAA33B,EAAAkc,OAAAq7B,EAAA,EACA5kE,KAAA6kE,mBAEAA,gBAAA,WAIA,IAHA,IAAAC,EAAA9kE,KAAA0kE,aACAr3C,EAAArtB,KAAAykE,OAAAK,GACAC,EAAA13C,EAAA23B,MAAA33B,EAAAkc,SACAu7B,GAAA,IACAz3C,EAAArtB,KAAAykE,OAAAK,IACA9f,MAAA33B,EAAAkc,OAAAw7B,GAGA/G,UAAA,WACA,IAAA0G,EAAA1kE,KAAA0kE,aACAr3C,EAAArtB,KAAAykE,OAAAC,GACA/lE,EAAA0uB,EAAA23B,MAAA33B,EAAAkc,OAGA,OAFAlc,EAAA23B,MAAA33B,EAAAkc,OAAA,QACAm7B,EACA,KAGA1kE,KAAA0kE,gBACAr3C,EAAArtB,KAAAykE,OAAAC,IACA1f,MAAA33B,EAAAkc,OAAA5qC,GACA,KAGAk/D,EAvEA,GAyEAwB,EAAA,WACA,IAEA2F,EAAA,IAAAplE,YAAA,wJACAqlE,EAAA,IAAArlE,YAAA,wJACAslE,EAAA,IAAAtlE,YAAA,wJACA,SAAAy/D,EAAAjmD,EAAAC,EAAA4+C,EAAAiG,EAAAU,GACA5+D,KAAAoZ,QACApZ,KAAAqZ,SACArZ,KAAAmlE,kBAAA,OAAAlN,EAAAiN,EAAA,OAAAjN,EAAAgN,EAAAD,EACA,IAAAI,EAAAhsD,EAAAC,EACArZ,KAAAqlE,sBAAA,IAAAzlE,WAAAwlE,GACAplE,KAAA+/D,gBAAA,IAAAngE,WAAAwlE,GACAplE,KAAAigE,qBAAArB,EAAA,OAAAzxC,YAAAi4C,GAAAxG,EAAA,MAAArlC,YAAA6rC,GAAA,IAAAxlE,WAAAwlE,GACAplE,KAAAslE,gBAAA,IAAA1lE,WAAAwlE,GACA,IAAAlF,EAAA,IAAAtgE,WAAAwlE,GACA,OAAAlH,EACA,QAAAliE,EAAA,EAAuBA,EAAAopE,EAAsBppE,IAC7CkkE,EAAAlkE,GAAAkiE,EAGAl+D,KAAAkgE,cACAlgE,KAAAizB,QAyPA,OAvPAosC,EAAAliE,WACAsiE,WAAA,SAAAD,GACAx/D,KAAAw/D,WAEAvsC,MAAA,WACAjzB,KAAAozD,SAAA,IAAAmS,UAAA,IACAvlE,KAAAozD,SAAA,KACApzD,KAAAozD,SA9BA,IA8BA,GACApzD,KAAAozD,SA9BA,IA8BA,GAEAoS,yBAAA,SAAAtU,EAAAuU,EAAAl8B,GACA,IAKAvtC,EALAqpE,EAAArlE,KAAAqlE,sBACAjsD,EAAApZ,KAAAoZ,MACAC,EAAArZ,KAAAqZ,OACA4e,EAAAwtC,EAAA,EACA1G,EAAA0G,EAAA,EAAArsD,EAEA83C,EAAA,IACAl1D,EAAAutC,EAAAnwB,EACA6e,IACAotC,EAAArpE,EAAA,QAEA+iE,IACAsG,EAAArpE,EAAA,QAEAqpE,EAAArpE,IAAA,GAEAk1D,EAAA,EAAA73C,IACArd,EAAAutC,EAAAnwB,EACA6e,IACAotC,EAAArpE,EAAA,QAEA+iE,IACAsG,EAAArpE,EAAA,QAEAqpE,EAAArpE,IAAA,GAEAi8B,IACAotC,EAAA97B,EAAA,OAEAw1B,IACAsG,EAAA97B,EAAA,OAEA87B,EAAA97B,IAAA,KAEAm2B,+BAAA,WAcA,IAbA,IAAAF,EAAAx/D,KAAAw/D,QACApmD,EAAApZ,KAAAoZ,MACAC,EAAArZ,KAAAqZ,OACA4mD,EAAAjgE,KAAAigE,qBACAF,EAAA//D,KAAA+/D,gBACAsF,EAAArlE,KAAAqlE,sBACAC,EAAAtlE,KAAAslE,gBACAlS,EAAApzD,KAAAozD,SACAsS,EAAA1lE,KAAAmlE,kBACAjF,EAAAlgE,KAAAkgE,YAIAyF,EAAA,EAAwBA,EAAAtsD,EAAassD,GAAA,EACrC,QAAA1iE,EAAA,EAAyBA,EAAAmW,EAAWnW,IAEpC,IADA,IAAAsmC,EAAAo8B,EAAAvsD,EAAAnW,EACA2iE,EAAA,EAA4BA,EAAA,EAAQA,IAAAr8B,GAAAnwB,EAAA,CACpC,IAAApd,EAAA2pE,EAAAC,EACA,GAAA5pE,GAAAqd,EACA,MAGA,GADAisD,EAAA/7B,KAXA,GAYA02B,EAAA12B,IAAA87B,EAAA97B,GAAA,CAGA,IAAAs8B,EAAAH,EAAAL,EAAA97B,IAEA,GADAi2B,EAAArM,QAAAC,EAAAyS,GACA,CACA,IAAA53B,EAAAjuC,KAAA8lE,cAAA9pE,EAAAiH,EAAAsmC,GACAw2B,EAAAx2B,GAAA0E,EACAgyB,EAAA12B,GAAA,EACAvpC,KAAAwlE,yBAAAxpE,EAAAiH,EAAAsmC,GACA+7B,EAAA/7B,IApBA,EAsBA22B,EAAA32B,KACA+7B,EAAA/7B,IAxBA,KA6BAu8B,cAAA,SAAA5U,EAAAuU,EAAAl8B,GACA,IAIAw8B,EAAAC,EAAAC,EAAAC,EACAL,EAAAM,EALA/sD,EAAApZ,KAAAoZ,MACAC,EAAArZ,KAAAqZ,OACA4mD,EAAAjgE,KAAAigE,qBACAF,EAAA//D,KAAA+/D,gBAGAmG,EAAAT,EAAA,OAAAxF,EAAA12B,EAAA,GACAk8B,EAAA,EAAArsD,GAAA,IAAA6mD,EAAA12B,EAAA,IACA08B,EAAAlG,EAAAx2B,EAAA,GAGAw8B,EAFAG,EAEA,EAAAD,GADAD,EAAAjG,EAAAx2B,EAAA,IAGA,EAAA08B,KAIAF,EAFSG,EAET,GADAF,EAAAjG,EAAAx2B,EAAA,IACAy8B,EAEA,EAEA,IAAAI,EAAA,EAAAL,EAuBA,OAtBAG,EAAAhV,EAAA,OAAA+O,EAAA12B,EAAAnwB,GACA83C,EAAA,EAAA73C,GAAA,IAAA4mD,EAAA12B,EAAAnwB,IACA6sD,EAAAlG,EAAAx2B,EAAAnwB,GAGA2sD,EAFAG,EAEA,EAAAD,GADAD,EAAAjG,EAAAx2B,EAAAnwB,IACAgtD,EAEA,EAAAH,IAAAG,GAIAL,EAFSG,EAET,GADAF,EAAAjG,EAAAx2B,EAAAnwB,IACA4sD,EAAAI,EAEAA,EAEAL,GAAA,GACAF,EAAA,EAAAE,EACAI,EAAAnmE,KAAAw/D,QAAArM,QAAAnzD,KAAAozD,SAAAyS,KAEAA,EAAA,EAAAE,EACAI,EAAA,EAAAnmE,KAAAw/D,QAAArM,QAAAnzD,KAAAozD,SAAAyS,IAEAM,GAEAxG,2BAAA,WAaA,IAZA,IAYA0G,EAZA7G,EAAAx/D,KAAAw/D,QACApmD,EAAApZ,KAAAoZ,MACAC,EAAArZ,KAAAqZ,OACA4mD,EAAAjgE,KAAAigE,qBACAoF,EAAArlE,KAAAqlE,sBACAjS,EAAApzD,KAAAozD,SACA8M,EAAAlgE,KAAAkgE,YACAoF,EAAAtlE,KAAAslE,gBAGA5lE,EAAA0Z,EAAAC,EACAitD,EAAA,EAAAltD,EACAmtD,EAAA,EAAuCA,EAAA7mE,EAAiB6mE,EAAAF,EAAA,CACxDA,EAAA7nE,KAAAqG,IAAAnF,EAAA6mE,EAAAD,GACA,QAAArjE,EAAA,EAAyBA,EAAAmW,EAAWnW,IACpC,QAAAsmC,EAAAg9B,EAAAtjE,EAAwCsmC,EAAA88B,EAAmB98B,GAAAnwB,EAC3D,GAAA6mD,EAAA12B,IAAA,IARA,EAQA+7B,EAAA/7B,IAAA,CAGA,IAAAs8B,EAAA,GACA,OAXA,EAWAP,EAAA/7B,IACA+7B,EAAA/7B,IAZA,EAcAs8B,EAAA,KADA,IAAAR,EAAA97B,IACA,MAEA,IAAAi9B,EAAAhH,EAAArM,QAAAC,EAAAyS,GACA5F,EAAA12B,GAAA02B,EAAA12B,IAAA,EAAAi9B,EACAtG,EAAA32B,KACA+7B,EAAA/7B,IApBA,KAyBAq2B,eAAA,WAiBA,IAhBA,IAeA6G,EAfAjH,EAAAx/D,KAAAw/D,QACApmD,EAAApZ,KAAAoZ,MACAC,EAAArZ,KAAAqZ,OACAgsD,EAAArlE,KAAAqlE,sBACApF,EAAAjgE,KAAAigE,qBACAF,EAAA//D,KAAA+/D,gBACA3M,EAAApzD,KAAAozD,SACAsS,EAAA1lE,KAAAmlE,kBACAjF,EAAAlgE,KAAAkgE,YACAoF,EAAAtlE,KAAAslE,gBAGAoB,EAAAttD,EACAutD,EAAA,EAAAvtD,EACAwtD,EAAA,EAAAxtD,EAEAusD,EAAA,EAAwBA,EAAAtsD,EAAassD,EAAAc,EAAA,CACrCA,EAAAjoE,KAAAqG,IAAA8gE,EAAA,EAAAtsD,GAGA,IAFA,IAAAwtD,EAAAlB,EAAAvsD,EACA0tD,EAAAnB,EAAA,EAAAtsD,EACApW,EAAA,EAAyBA,EAAAmW,EAAWnW,IAAA,CACpC,IAKAgrC,EALAs4B,EAAAM,EAAA5jE,EAEA2iE,EAAA,EACAr8B,EAAAg9B,EACAvqE,EAAA2pE,EAEA,GALAmB,GAAA,IAAAxB,EAAAiB,IAAA,IAAAjB,EAAAiB,EAAAG,IAAA,IAAApB,EAAAiB,EAAAI,IAAA,IAAArB,EAAAiB,EAAAK,IAAA,IAAAvB,EAAAkB,IAAA,IAAAlB,EAAAkB,EAAAG,IAAA,IAAArB,EAAAkB,EAAAI,IAAA,IAAAtB,EAAAkB,EAAAK,GAKA,CAEA,IADApH,EAAArM,QAAAC,EA1NA,IA2NA,CACA8M,EAAAqG,KACArG,EAAAqG,EAAAG,KACAxG,EAAAqG,EAAAI,KACAzG,EAAAqG,EAAAK,KACA,SAGA,KADAhB,EAAApG,EAAArM,QAAAC,EAnOA,KAmOA,EAAAoM,EAAArM,QAAAC,EAnOA,OAqOAp3D,EAAA2pE,EAAAC,EACAr8B,GAAAq8B,EAAAxsD,GAEA60B,EAAAjuC,KAAA8lE,cAAA9pE,EAAAiH,EAAAsmC,GACAw2B,EAAAx2B,GAAA0E,EACAgyB,EAAA12B,GAAA,EACAvpC,KAAAwlE,yBAAAxpE,EAAAiH,EAAAsmC,GACA+7B,EAAA/7B,IAlCA,EAmCAA,EAAAg9B,EACA,QAAAQ,EAAApB,EAA+BoB,GAAA/qE,EAAS+qE,IAAAx9B,GAAAnwB,EACxC8mD,EAAA32B,KAEAq8B,IAEA,IAAA5pE,EAAA2pE,EAAAC,EAA6B5pE,EAAAyqE,EAAWzqE,IAAAutC,GAAAnwB,EACxC,IAAA6mD,EAAA12B,IAAA,IA3CA,EA2CA+7B,EAAA/7B,IAAA,CAGA,IAAAs8B,EAAAH,EAAAL,EAAA97B,IAEA,IADAi2B,EAAArM,QAAAC,EAAAyS,KAEA53B,EAAAjuC,KAAA8lE,cAAA9pE,EAAAiH,EAAAsmC,GACAw2B,EAAAx2B,GAAA0E,EACAgyB,EAAA12B,GAAA,EACAvpC,KAAAwlE,yBAAAxpE,EAAAiH,EAAAsmC,GACA+7B,EAAA/7B,IApDA,GAsDA22B,EAAA32B,SAKAs2B,wBAAA,WACA,IAAAL,EAAAx/D,KAAAw/D,QACApM,EAAApzD,KAAAozD,SAEA,SADAoM,EAAArM,QAAAC,EAxQA,KAwQA,EAAAoM,EAAArM,QAAAC,EAxQA,KAwQA,EAAAoM,EAAArM,QAAAC,EAxQA,KAwQA,EAAAoM,EAAArM,QAAAC,EAxQA,KA0QA,UAAAO,EAAA,iCAIA0L,EA/QA,GAiRA2H,EAAA,WACA,SAAAA,KAkGA,OAjGAA,EAAA7pE,UAAAikE,UAAA,SAAAjH,EAAA8M,EAAAC,GAEA,IADA,IAAAC,EAAAhN,EAAA,GACAn+D,EAAA,EAAA0e,EAAAy/C,EAAAz6D,OAA2C1D,EAAA0e,EAAQ1e,IACnDmrE,EAAAnnE,KAAAonE,QAAAD,EAAAhN,EAAAn+D,GAAAirE,EAAAC,GAEA,OAAAC,GAEAH,EAAA7pE,UAAAkqE,OAAA,SAAAzpE,EAAAC,EAAA+D,GACA,IAAAgkE,EAAA/nE,EAAA,EACAypE,EAAAzpE,EAAA,EACAkpE,EAAAlpE,EAAA+D,EAAA,EACA2lE,EAAA1pE,EAAA+D,EACAhE,EAAAgoE,KAAAhoE,EAAA0pE,KACA1pE,EAAA2pE,KAAA3pE,EAAAmpE,KACAnpE,EAAAgoE,KAAAhoE,EAAA0pE,KACA1pE,EAAA2pE,KAAA3pE,EAAAmpE,KACAnpE,EAAAgoE,KAAAhoE,EAAA0pE,KACA1pE,EAAA2pE,KAAA3pE,EAAAmpE,KACAnpE,EAAAgoE,GAAAhoE,EAAA0pE,GACA1pE,EAAA2pE,GAAA3pE,EAAAmpE,IAEAC,EAAA7pE,UAAAiqE,QAAA,SAAAD,EAAAK,EAAAP,EAAAC,GACA,IAMAlrE,EAAAiH,EAAAwzB,EAAAx6B,EAAAwrE,EAAAhyD,EANAiyD,EAAAP,EAAA/tD,MACAuuD,EAAAR,EAAA9tD,OACAuuD,EAAAT,EAAAniB,MACA5rC,EAAAouD,EAAApuD,MACAC,EAAAmuD,EAAAnuD,OACA2rC,EAAAwiB,EAAAxiB,MAEA,IAAAvuB,EAAA,EAAAz6B,EAAA,EAAwBA,EAAA2rE,EAAc3rE,IAEtC,IADAC,EAAA,EAAAD,EAAAod,EACAnW,EAAA,EAAmBA,EAAAykE,EAAazkE,IAAAwzB,IAAAx6B,GAAA,EAChC+oD,EAAA/oD,GAAA2rE,EAAAnxC,GAGAmxC,EAAAT,EAAAniB,MAAA,KACA,IACA6iB,EAAA,IAAAlmC,aAAAvoB,EAAA,GACA,OAAAA,GACA,SAAA6tD,GACA,IAAAxxD,EAAA,EAAAghB,EAAA,EAA4BhhB,EAAA4D,EAAY5D,IAAAghB,GAAArd,EACxC4rC,EAAAvuB,IAAA,QAIA,IAAAhhB,EAAA,EAAAghB,EAAA,EAA0BhhB,EAAA4D,EAAY5D,IAAAghB,GAAArd,EACtCyuD,EAAAj8D,IAAAo5C,EAAAj/C,SAAA0wB,IAAArd,GAVA,GAWApZ,KAAAqnE,OAAAQ,EAXA,EAWAzuD,GACApZ,KAAAgsC,OAAA67B,EAZA,EAYAzuD,GACA4rC,EAAAp5C,IAAAi8D,EAAA9hE,SAbA,IAaAqT,GAAAqd,GAGA,IAAAqxC,EAAA,GACAC,KACA,IAAA/rE,EAAA,EAAiBA,EAAA8rE,EAAgB9rE,IACjC+rE,EAAAjkE,KAAA,IAAA69B,aAAAtoB,EAAA,IAEA,IAAAlX,EACA6lE,EAAA,EAEA,GADAb,EAvBA,EAuBA9tD,EACA,IAAAA,GACA,SAAA6tD,GACA,IAAAO,EAAA,EAAqBA,EAAAruD,EAAWquD,IAChCziB,EAAAyiB,IAAA,QAIA,IAAAA,EAAA,EAAmBA,EAAAruD,EAAWquD,IAAA,CAC9B,OAAAO,EAAA,CAEA,IADAF,EAAAtpE,KAAAqG,IAAAuU,EAAAquD,EAAAK,GACArxC,EAAAgxC,EAAAxrE,EAlCA,EAkC0CA,EAAAkrE,EAAQ1wC,GAAArd,EAAAnd,IAClD,IAAAkG,EAAA,EAAyBA,EAAA2lE,EAAgB3lE,IACzC4lE,EAAA5lE,GAAAlG,GAAA+oD,EAAAvuB,EAAAt0B,GAGA6lE,EAAAF,EAGA,IAAAlqE,EAAAmqE,IADAC,GAIA,GAFAhoE,KAAAqnE,OAAAzpE,EA3CA,EA2CAyb,GACArZ,KAAAgsC,OAAApuC,EA5CA,EA4CAyb,GACA,IAAA2uD,EAEA,IADAvxC,EAAAgxC,EAAAK,EAAA,EACA7rE,EA/CA,EA+CmCA,EAAAkrE,EAAQ1wC,GAAArd,EAAAnd,IAC3C,IAAAkG,EAAA,EAAyBA,EAAA2lE,EAAgB3lE,IACzC6iD,EAAAvuB,EAAAt0B,GAAA4lE,EAAA5lE,GAAAlG,GAMA,OACAmd,QACAC,SACA2rC,UAGAgiB,EAnGA,GAqGAjG,EAAA,WACA,SAAAA,IACAiG,EAAA7qE,KAAA6D,MAwEA,OAtEA+gE,EAAA5jE,UAAAT,OAAAmb,OAAAmvD,EAAA7pE,WACA4jE,EAAA5jE,UAAA6uC,OAAA,SAAAtlC,EAAA7I,EAAA6B,GACA,IAEAuD,EAAAlG,EAAAkrE,EAAAz+B,EAFApoC,EAAA1B,GAAA,EAGAwoE,GAAA,kBACAC,GAAA,iBACAtoC,EAAA,iBACA8+B,EAAA,iBACAyJ,EAAA,kBAGA,IADAnlE,GARApF,GAAA,GAQA,EACAd,EAAAqE,EAAA,EAAuBrE,IAAKkG,GAAA,EAC5ByD,EAAAzD,IAHA,kBAOA,IADAglE,EAAAtJ,EAAAj4D,GADAzD,EAAApF,EAAA,GACA,GACAd,EAAAqE,EAAA,EAAuBrE,MACvBysC,EAAAm1B,EAAAj4D,EAAAzD,EAAA,GACAyD,EAAAzD,GAAAmlE,EAAA1hE,EAAAzD,GAAAglE,EAAAz+B,EACAzsC,KAH4BkG,GAAA,EAK5BglE,EAAAtJ,EAAAj4D,GADAzD,GAAA,GACA,GACAyD,EAAAzD,GAAAmlE,EAAA1hE,EAAAzD,GAAAglE,EAAAz+B,EAOA,IADAy+B,EAAApoC,EAAAn5B,GADAzD,EAAApF,EAAA,GACA,GACAd,EAAAqE,EAAA,EAAuBrE,MACvBysC,EAAA3J,EAAAn5B,EAAAzD,EAAA,GACAyD,EAAAzD,IAAAglE,EAAAz+B,EACAzsC,KAH4BkG,GAAA,EAK5BglE,EAAApoC,EAAAn5B,GADAzD,GAAA,GACA,GACAyD,EAAAzD,IAAAglE,EAAAz+B,EAOA,IADAy+B,EAAAE,EAAAzhE,GADAzD,EAAApF,GACA,GACAd,EAAAqE,EAAA,EAAuBrE,MACvBysC,EAAA2+B,EAAAzhE,EAAAzD,EAAA,GACAyD,EAAAzD,IAAAglE,EAAAz+B,EACAzsC,KAH4BkG,GAAA,EAK5BglE,EAAAE,EAAAzhE,GADAzD,GAAA,GACA,GACAyD,EAAAzD,IAAAglE,EAAAz+B,EAKA,OAAApoC,EAGA,IADA6mE,EAAAC,EAAAxhE,GADAzD,EAAApF,EAAA,GACA,GACAd,EAAAqE,EAAqBrE,MACrBysC,EAAA0+B,EAAAxhE,EAAAzD,EAAA,GACAyD,EAAAzD,IAAAglE,EAAAz+B,EACAzsC,KAH0BkG,GAAA,EAK1BglE,EAAAC,EAAAxhE,GADAzD,GAAA,GACA,GACAyD,EAAAzD,IAAAglE,EAAAz+B,GAOAu3B,EA1EA,GA4EAD,EAAA,WACA,SAAAA,IACAkG,EAAA7qE,KAAA6D,MAcA,OAZA8gE,EAAA3jE,UAAAT,OAAAmb,OAAAmvD,EAAA7pE,WACA2jE,EAAA3jE,UAAA6uC,OAAA,SAAAtlC,EAAA7I,EAAA6B,GACA,IAEAuD,EAAAlG,EAFAqE,EAAA1B,GAAA,EAGA,IAAAuD,EAFApF,GAAA,EAEAd,EAAAqE,EAAA,EAAmCrE,IAAKkG,GAAA,EACxCyD,EAAAzD,IAAAyD,EAAAzD,EAAA,GAAAyD,EAAAzD,EAAA,QAEA,IAAAA,EAAApF,EAAA,EAAAd,EAAAqE,EAAmCrE,IAAKkG,GAAA,EACxCyD,EAAAzD,IAAAyD,EAAAzD,EAAA,GAAAyD,EAAAzD,EAAA,OAGA69D,EAhBA,GAkBA,OAAArN,EA32DA,GA62DA33D,EAAA23D,YAIA,SAAA13D,EAAAD,EAAA0T,GAEA,aAGA9S,OAAAC,eAAAb,EAAA,cACA6C,OAAA,IAEA7C,EAAAusE,gBAAAvsE,EAAAwsE,gBAAAxsE,EAAAysE,gBAAAzsE,EAAA0sE,aAAA1sE,EAAA2sE,MAAA3sE,EAAA4sE,MAAA5sE,EAAAivD,uBAAAjvD,EAAA6sE,cAAA7sE,EAAA8sE,aAAA9sE,EAAA+sE,kBAAApoE,EAEA,IAAAqoE,EAAA,WAAgC,SAAAC,EAAAnhE,EAAAohE,GAA2C,QAAAhtE,EAAA,EAAgBA,EAAAgtE,EAAAtpE,OAAkB1D,IAAA,CAAO,IAAAitE,EAAAD,EAAAhtE,GAA2BitE,EAAApsE,WAAAosE,EAAApsE,aAAA,EAAwDosE,EAAArsE,cAAA,EAAgC,UAAAqsE,MAAA37C,UAAA,GAAuD5wB,OAAAC,eAAAiL,EAAAqhE,EAAAxxD,IAAAwxD,IAA+D,gBAAAx4B,EAAAy4B,EAAAC,GAA2L,OAAlID,GAAAH,EAAAt4B,EAAAtzC,UAAA+rE,GAAqEC,GAAAJ,EAAAt4B,EAAA04B,GAA6D14B,GAAxhB,GAEAre,EAAA5iB,EAAA,GAEA6iB,EAAA7iB,EAAA,GAEAq6B,EAAAr6B,EAAA,GAEA,SAAA45D,EAAA75D,EAAApT,GAAiD,IAAAoT,EAAa,UAAA85D,eAAA,6DAAyF,OAAAltE,GAAA,iBAAAA,GAAA,mBAAAA,EAAAoT,EAAApT,EAEvJ,SAAAmtE,EAAAC,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAAppE,UAAA,kEAAAopE,GAAuGD,EAAApsE,UAAAT,OAAAmb,OAAA2xD,KAAArsE,WAAyEyW,aAAejV,MAAA4qE,EAAA1sE,YAAA,EAAAywB,UAAA,EAAA1wB,cAAA,KAA6E4sE,IAAA9sE,OAAA+sE,eAAA/sE,OAAA+sE,eAAAF,EAAAC,GAAAD,EAAA1pE,UAAA2pE,GAErX,SAAAE,EAAAC,EAAAl5B,GAAiD,KAAAk5B,aAAAl5B,GAA0C,UAAArwC,UAAA,qCAE3F,IAAAuoE,EAAA,WACA,SAAAA,EAAAlxD,GACAzX,KAAAyG,EAAA,EACAzG,KAAAmC,EAAA,EACA,IACAnG,EAEA4tE,EAHAtsE,EAAA,IAAAsC,WAAA,KAEAqD,EAAA,EAEA4mE,EAAApyD,EAAA/X,OACA,IAAA1D,EAAA,EAAeA,EAAA,MAASA,EACxBsB,EAAAtB,KAEA,IAAAA,EAAA,EAAeA,EAAA,MAASA,EAExBiH,KADA2mE,EAAAtsE,EAAAtB,IACAyb,EAAAzb,EAAA6tE,GAAA,IACAvsE,EAAAtB,GAAAsB,EAAA2F,GACA3F,EAAA2F,GAAA2mE,EAEA5pE,KAAA1C,IA2BA,OAzBAqrE,EAAAxrE,WACA2sE,aAAA,SAAAroE,GACA,IAAAzF,EAEA4tE,EACAG,EAFAhtE,EAAA0E,EAAA/B,OAGA+G,EAAAzG,KAAAyG,EACAtE,EAAAnC,KAAAmC,EACA7E,EAAA0C,KAAA1C,EACA0sE,EAAA,IAAApqE,WAAA7C,GACA,IAAAf,EAAA,EAAiBA,EAAAe,IAAOf,EAIxB+tE,EAAAzsE,EADA6E,KADAynE,EAAAtsE,EADAmJ,IAAA,QAEA,KAEAnJ,EAAAmJ,GAAAsjE,EACAzsE,EAAA6E,GAAAynE,EACAI,EAAAhuE,GAAAyF,EAAAzF,GAAAsB,EAAAssE,EAAAG,EAAA,KAIA,OAFA/pE,KAAAyG,IACAzG,KAAAmC,IACA6nE,IAGArB,EAAAxrE,UAAA8sE,aAAAtB,EAAAxrE,UAAA2sE,aACAnB,EA7CA,GA+CAH,EAAA,WACA,IAAA5zD,EAAA,IAAAhV,YAAA,8KACA62B,EAAA,IAAArC,aAAA,yrBAiEA,OAhEA,SAAA3yB,EAAA5D,EAAA6B,GACA,IAMA1D,EAAAiH,EAAAlG,EANAmtE,EAAA,WACAzrC,GAAA,UACAE,GAAA,WACAwrC,EAAA,UACAC,EAAA1qE,EAAA,OACA2qE,EAAA,IAAAzqE,WAAAwqE,GAEA,IAAApuE,EAAA,EAAeA,EAAA0D,IAAY1D,EAC3BquE,EAAAruE,GAAAyF,EAAA5D,KAIA,IAFAwsE,EAAAruE,KAAA,IACAe,EAAAqtE,EAAA,EACApuE,EAAAe,GACAstE,EAAAruE,KAAA,EAEAquE,EAAAruE,KAAA0D,GAAA,MACA2qE,EAAAruE,KAAA0D,GAAA,MACA2qE,EAAAruE,KAAA0D,GAAA,OACA2qE,EAAAruE,KAAA0D,GAAA,OACA2qE,EAAAruE,KAAA0D,IAAA,OACA2qE,EAAAruE,KAAA,EACAquE,EAAAruE,KAAA,EACAquE,EAAAruE,KAAA,EACA,IAAAm1C,EAAA,IAAA/c,WAAA,IACA,IAAAp4B,EAAA,EAAeA,EAAAouE,GAAkB,CACjC,IAAAnnE,EAAA,EAAiBA,EAAA,KAAQA,EAAAjH,GAAA,EACzBm1C,EAAAluC,GAAAonE,EAAAruE,GAAAquE,EAAAruE,EAAA,MAAAquE,EAAAruE,EAAA,OAAAquE,EAAAruE,EAAA,OAEA,IAIAsgC,EACA/vB,EALA9F,EAAAyjE,EACA/nE,EAAAs8B,EACApiC,EAAAsiC,EACAriC,EAAA6tE,EAGA,IAAAlnE,EAAA,EAAiBA,EAAA,KAAQA,EAAA,CACzBA,EAAA,IACAq5B,EAAAn6B,EAAA9F,GAAA8F,EAAA7F,EACAiQ,EAAAtJ,GACSA,EAAA,IACTq5B,EAAAhgC,EAAA6F,GAAA7F,EAAAD,EACAkQ,EAAA,EAAAtJ,EAAA,MACSA,EAAA,IACTq5B,EAAAn6B,EAAA9F,EAAAC,EACAiQ,EAAA,EAAAtJ,EAAA,OAEAq5B,EAAAjgC,GAAA8F,GAAA7F,GACAiQ,EAAA,EAAAtJ,EAAA,IAEA,IAAA2mE,EAAAttE,EACAguE,EAAA7jE,EAAA61B,EAAA7F,EAAAxzB,GAAAkuC,EAAA5kC,GAAA,EACAg+D,EAAA31D,EAAA3R,GACA3G,EAAAD,EACAA,EAAA8F,EACAA,KAAAmoE,GAAAC,EAAAD,IAAA,GAAAC,GAAA,EACA9jE,EAAAmjE,EAEAM,IAAAzjE,EAAA,EACAg4B,IAAAt8B,EAAA,EACAw8B,IAAAtiC,EAAA,EACA8tE,IAAA7tE,EAAA,EAEA,WAAAsD,YAAA,IAAAsqE,KAAA,MAAAA,GAAA,OAAAA,IAAA,WAAAzrC,KAAA,MAAAA,GAAA,OAAAA,IAAA,WAAAE,KAAA,MAAAA,GAAA,OAAAA,IAAA,WAAAwrC,KAAA,MAAAA,GAAA,OAAAA,IAAA,UAjEA,GAqEAK,EAAA,WACA,SAAAA,EAAAC,EAAAC,GACA1qE,KAAA2qE,KAAA,EAAAF,EACAzqE,KAAA4qE,IAAA,EAAAF,EA0EA,OAxEAF,EAAArtE,WACA0tE,IAAA,SAAAC,GACA9qE,KAAA2qE,MAAAG,EAAAH,KACA3qE,KAAA4qE,KAAAE,EAAAF,KAEAG,IAAA,SAAAD,GACA9qE,KAAA2qE,MAAAG,EAAAH,KACA3qE,KAAA4qE,KAAAE,EAAAF,KAEAI,GAAA,SAAAF,GACA9qE,KAAA2qE,MAAAG,EAAAH,KACA3qE,KAAA4qE,KAAAE,EAAAF,KAEAK,WAAA,SAAAC,GACAA,GAAA,IACAlrE,KAAA4qE,IAAA5qE,KAAA2qE,OAAAO,EAAA,KACAlrE,KAAA2qE,KAAA,IAEA3qE,KAAA4qE,IAAA5qE,KAAA4qE,MAAAM,EAAAlrE,KAAA2qE,MAAA,GAAAO,EACAlrE,KAAA2qE,KAAA3qE,KAAA2qE,OAAAO,EAAA,IAGAC,UAAA,SAAAD,GACAA,GAAA,IACAlrE,KAAA2qE,KAAA3qE,KAAA4qE,KAAAM,EAAA,GACAlrE,KAAA4qE,IAAA,IAEA5qE,KAAA2qE,KAAA3qE,KAAA2qE,MAAAO,EAAAlrE,KAAA4qE,MAAA,GAAAM,EACAlrE,KAAA4qE,IAAA5qE,KAAA4qE,KAAAM,IAGAE,YAAA,SAAAF,GACA,IAAAN,EAAAD,EACA,GAAAO,GACAP,EAAA3qE,KAAA4qE,IACAA,EAAA5qE,KAAA2qE,OAEAC,EAAA5qE,KAAA4qE,IACAD,EAAA3qE,KAAA2qE,MAEAO,GAAA,GACAlrE,KAAA4qE,QAAAM,EAAAP,GAAA,GAAAO,EACAlrE,KAAA2qE,SAAAO,EAAAN,GAAA,GAAAM,GAEAG,IAAA,WACArrE,KAAA2qE,MAAA3qE,KAAA2qE,KACA3qE,KAAA4qE,KAAA5qE,KAAA4qE,KAEAU,IAAA,SAAAR,GACA,IAAAS,GAAAvrE,KAAA4qE,MAAA,IAAAE,EAAAF,MAAA,GACAY,GAAAxrE,KAAA2qE,OAAA,IAAAG,EAAAH,OAAA,GACAY,EAAA,aACAC,GAAA,GAEAxrE,KAAA4qE,IAAA,EAAAW,EACAvrE,KAAA2qE,KAAA,EAAAa,GAEAC,OAAA,SAAAjjE,EAAA3K,GACA2K,EAAA3K,GAAAmC,KAAA2qE,OAAA,OACAniE,EAAA3K,EAAA,GAAAmC,KAAA2qE,MAAA,OACAniE,EAAA3K,EAAA,GAAAmC,KAAA2qE,MAAA,MACAniE,EAAA3K,EAAA,OAAAmC,KAAA2qE,KACAniE,EAAA3K,EAAA,GAAAmC,KAAA4qE,MAAA,OACApiE,EAAA3K,EAAA,GAAAmC,KAAA4qE,KAAA,OACApiE,EAAA3K,EAAA,GAAAmC,KAAA4qE,KAAA,MACApiE,EAAA3K,EAAA,OAAAmC,KAAA4qE,KAEAc,OAAA,SAAAZ,GACA9qE,KAAA2qE,KAAAG,EAAAH,KACA3qE,KAAA4qE,IAAAE,EAAAF,MAGAJ,EA7EA,GA+EAjC,EAAA,WACA,SAAAoD,EAAAjlE,EAAA3J,GACA,OAAA2J,IAAA3J,EAAA2J,GAAA,GAAA3J,EAEA,SAAAyvB,EAAA9lB,EAAAC,EAAAilE,GACA,OAAAllE,EAAAC,GAAAD,EAAAklE,EAEA,SAAAC,EAAAnlE,EAAAC,EAAAilE,GACA,OAAAllE,EAAAC,EAAAD,EAAAklE,EAAAjlE,EAAAilE,EAEA,SAAAE,EAAAplE,GACA,OAAAilE,EAAAjlE,EAAA,GAAAilE,EAAAjlE,EAAA,IAAAilE,EAAAjlE,EAAA,IAEA,SAAAqlE,EAAArlE,GACA,OAAAilE,EAAAjlE,EAAA,GAAAilE,EAAAjlE,EAAA,IAAAilE,EAAAjlE,EAAA,IAEA,SAAAslE,EAAAtlE,GACA,OAAAilE,EAAAjlE,EAAA,GAAAilE,EAAAjlE,EAAA,IAAAA,IAAA,EAKA,IAAA+vB,GAAA,irBAuEA,OAtEA,SAAAh1B,EAAA5D,EAAA6B,GACA,IAUA1D,EAAAiH,EAAAlG,EAVAmtE,EAAA,WACAzrC,EAAA,WACAE,EAAA,WACAwrC,EAAA,WACA8B,EAAA,WACAC,EAAA,WACAC,EAAA,UACAC,EAAA,WACAhC,EAAA,GAAA5rE,KAAA4uB,MAAA1tB,EAAA,OACA2qE,EAAA,IAAAzqE,WAAAwqE,GAEA,IAAApuE,EAAA,EAAeA,EAAA0D,IAAY1D,EAC3BquE,EAAAruE,GAAAyF,EAAA5D,KAIA,IAFAwsE,EAAAruE,KAAA,IACAe,EAAAqtE,EAAA,EACApuE,EAAAe,GACAstE,EAAAruE,KAAA,EAEAquE,EAAAruE,KAAA,EACAquE,EAAAruE,KAAA,EACAquE,EAAAruE,KAAA,EACAquE,EAAAruE,KAAA0D,IAAA,OACA2qE,EAAAruE,KAAA0D,GAAA,OACA2qE,EAAAruE,KAAA0D,GAAA,OACA2qE,EAAAruE,KAAA0D,GAAA,MACA2qE,EAAAruE,KAAA0D,GAAA,MACA,IAhCAgH,EAgCAyqC,EAAA,IAAAhkB,YAAA,IACA,IAAAnxB,EAAA,EAAeA,EAAAouE,GAAkB,CACjC,IAAAnnE,EAAA,EAAiBA,EAAA,KAAQA,EACzBkuC,EAAAluC,GAAAonE,EAAAruE,IAAA,GAAAquE,EAAAruE,EAAA,OAAAquE,EAAAruE,EAAA,MAAAquE,EAAAruE,EAAA,GACAA,GAAA,EAEA,IAAAiH,EAAA,GAAkBA,EAAA,KAAQA,EAC1BkuC,EAAAluC,GAAA,GAtCA0oE,EADAjlE,EAuCAyqC,EAAAluC,EAAA,GAtCA,IAAA0oE,EAAAjlE,EAAA,IAAAA,IAAA,IAsCAyqC,EAAAluC,EAAA,GAAA+oE,EAAA76B,EAAAluC,EAAA,KAAAkuC,EAAAluC,EAAA,IAEA,IAQAopE,EACAC,EATA7lE,EAAAyjE,EACA/nE,EAAAs8B,EACApiC,EAAAsiC,EACAriC,EAAA6tE,EACAlsE,EAAAguE,EACA3vC,EAAA4vC,EACA3/D,EAAA4/D,EACAl4B,EAAAm4B,EAGA,IAAAnpE,EAAA,EAAiBA,EAAA,KAAQA,EACzBopE,EAAAp4B,EAAA83B,EAAA9tE,GAAAuuB,EAAAvuB,EAAAq+B,EAAA/vB,GAAAkqB,EAAAxzB,GAAAkuC,EAAAluC,GACAqpE,EAAAR,EAAArlE,GAAAolE,EAAAplE,EAAAtE,EAAA9F,GACA43C,EAAA1nC,EACAA,EAAA+vB,EACAA,EAAAr+B,EACAA,EAAA3B,EAAA+vE,EAAA,EACA/vE,EAAAD,EACAA,EAAA8F,EACAA,EAAAsE,EACAA,EAAA4lE,EAAAC,EAAA,EAEApC,IAAAzjE,EAAA,EACAg4B,IAAAt8B,EAAA,EACAw8B,IAAAtiC,EAAA,EACA8tE,IAAA7tE,EAAA,EACA2vE,IAAAhuE,EAAA,EACAiuE,IAAA5vC,EAAA,EACA6vC,IAAA5/D,EAAA,EACA6/D,IAAAn4B,EAAA,EAEA,WAAAr0C,YAAAsqE,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAAzrC,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAAE,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAAwrC,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAA8B,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAAC,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAAC,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAAC,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,KA3FA,GA+FA/D,EAAA,WACA,SAAA77C,EAAA/V,EAAA/P,EAAAC,EAAAilE,EAAAhC,GACAnzD,EAAAi1D,OAAAhlE,GACA+P,EAAAo0D,IAAAlkE,GACAijE,EAAA8B,OAAAhlE,GACAkjE,EAAAyB,MACAzB,EAAAiB,IAAAe,GACAn1D,EAAAs0D,IAAAnB,GAEA,SAAAiC,EAAAp1D,EAAA/P,EAAAC,EAAAilE,EAAAhC,GACAnzD,EAAAi1D,OAAAhlE,GACA+P,EAAAo0D,IAAAlkE,GACAijE,EAAA8B,OAAAhlE,GACAkjE,EAAAiB,IAAAe,GACAn1D,EAAAs0D,IAAAnB,GACAA,EAAA8B,OAAA/kE,GACAijE,EAAAiB,IAAAe,GACAn1D,EAAAs0D,IAAAnB,GAEA,SAAAkC,EAAAr1D,EAAA/P,EAAAkjE,GACAnzD,EAAAi1D,OAAAhlE,GACA+P,EAAA20D,YAAA,IACAxB,EAAA8B,OAAAhlE,GACAkjE,EAAAwB,YAAA,IACA30D,EAAAs0D,IAAAnB,GACAA,EAAA8B,OAAAhlE,GACAkjE,EAAAwB,YAAA,IACA30D,EAAAs0D,IAAAnB,GAEA,SAAAmC,EAAAt1D,EAAA/P,EAAAkjE,GACAnzD,EAAAi1D,OAAAhlE,GACA+P,EAAA20D,YAAA,IACAxB,EAAA8B,OAAAhlE,GACAkjE,EAAAwB,YAAA,IACA30D,EAAAs0D,IAAAnB,GACAA,EAAA8B,OAAAhlE,GACAkjE,EAAAwB,YAAA,IACA30D,EAAAs0D,IAAAnB,GAEA,SAAAoC,EAAAv1D,EAAA/P,EAAAkjE,GACAnzD,EAAAi1D,OAAAhlE,GACA+P,EAAA20D,YAAA,GACAxB,EAAA8B,OAAAhlE,GACAkjE,EAAAwB,YAAA,GACA30D,EAAAs0D,IAAAnB,GACAA,EAAA8B,OAAAhlE,GACAkjE,EAAAqB,WAAA,GACAx0D,EAAAs0D,IAAAnB,GAEA,SAAA2C,EAAA91D,EAAA/P,EAAAkjE,GACAnzD,EAAAi1D,OAAAhlE,GACA+P,EAAA20D,YAAA,IACAxB,EAAA8B,OAAAhlE,GACAkjE,EAAAwB,YAAA,IACA30D,EAAAs0D,IAAAnB,GACAA,EAAA8B,OAAAhlE,GACAkjE,EAAAqB,WAAA,GACAx0D,EAAAs0D,IAAAnB,GAEA,IAAAnzC,GAAA,IAAA+zC,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,yBAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,yBAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,yBAAAA,EAAA,yBAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,wBAgJA,OA/IA,SAAA/oE,EAAA5D,EAAA6B,EAAA8sE,GAEA,IAAAtC,EAAAzrC,EAAAE,EAAAwrC,EAAA8B,EAAAC,EAAAC,EAAAC,GADAI,QAYAtC,EAAA,IAAAM,EAAA,uBACA/rC,EAAA,IAAA+rC,EAAA,sBACA7rC,EAAA,IAAA6rC,EAAA,sBACAL,EAAA,IAAAK,EAAA,sBACAyB,EAAA,IAAAzB,EAAA,uBACA0B,EAAA,IAAA1B,EAAA,uBACA2B,EAAA,IAAA3B,EAAA,uBACA4B,EAAA,IAAA5B,EAAA,yBAhBAN,EAAA,IAAAM,EAAA,uBACA/rC,EAAA,IAAA+rC,EAAA,uBACA7rC,EAAA,IAAA6rC,EAAA,uBACAL,EAAA,IAAAK,EAAA,uBACAyB,EAAA,IAAAzB,EAAA,uBACA0B,EAAA,IAAA1B,EAAA,sBACA2B,EAAA,IAAA3B,EAAA,sBACA4B,EAAA,IAAA5B,EAAA,uBAWA,IAEAxuE,EAAAiH,EAAAlG,EAFAqtE,EAAA,IAAA5rE,KAAA4uB,MAAA1tB,EAAA,SACA2qE,EAAA,IAAAzqE,WAAAwqE,GAEA,IAAApuE,EAAA,EAAeA,EAAA0D,IAAY1D,EAC3BquE,EAAAruE,GAAAyF,EAAA5D,KAIA,IAFAwsE,EAAAruE,KAAA,IACAe,EAAAqtE,EAAA,GACApuE,EAAAe,GACAstE,EAAAruE,KAAA,EAEAquE,EAAAruE,KAAA,EACAquE,EAAAruE,KAAA,EACAquE,EAAAruE,KAAA,EACAquE,EAAAruE,KAAA,EACAquE,EAAAruE,KAAA,EACAquE,EAAAruE,KAAA,EACAquE,EAAAruE,KAAA,EACAquE,EAAAruE,KAAA,EACAquE,EAAAruE,KAAA,EACAquE,EAAAruE,KAAA,EACAquE,EAAAruE,KAAA,EACAquE,EAAAruE,KAAA0D,IAAA,OACA2qE,EAAAruE,KAAA0D,GAAA,OACA2qE,EAAAruE,KAAA0D,GAAA,OACA2qE,EAAAruE,KAAA0D,GAAA,MACA2qE,EAAAruE,KAAA0D,GAAA,MACA,IAAAyxC,EAAA,IAAA3zC,MAAA,IACA,IAAAxB,EAAA,EAAeA,EAAA,GAAQA,IACvBm1C,EAAAn1C,GAAA,IAAAwuE,EAAA,KAEA,IAYAiC,EAwDAh2D,EApEAhQ,EAAA,IAAA+jE,EAAA,KACAroE,EAAA,IAAAqoE,EAAA,KACAnuE,EAAA,IAAAmuE,EAAA,KACAluE,EAAA,IAAAkuE,EAAA,KACAvsE,EAAA,IAAAusE,EAAA,KACAluC,EAAA,IAAAkuC,EAAA,KACAj+D,EAAA,IAAAi+D,EAAA,KACAv2B,EAAA,IAAAu2B,EAAA,KACA6B,EAAA,IAAA7B,EAAA,KACA8B,EAAA,IAAA9B,EAAA,KACAkC,EAAA,IAAAlC,EAAA,KACAT,EAAA,IAAAS,EAAA,KAEA,IAAAxuE,EAAA,EAAeA,EAAAouE,GAAkB,CACjC,IAAAnnE,EAAA,EAAiBA,EAAA,KAAQA,EACzBkuC,EAAAluC,GAAA0nE,KAAAN,EAAAruE,IAAA,GAAAquE,EAAAruE,EAAA,OAAAquE,EAAAruE,EAAA,MAAAquE,EAAAruE,EAAA,GACAm1C,EAAAluC,GAAA2nE,IAAAP,EAAAruE,EAAA,OAAAquE,EAAAruE,EAAA,OAAAquE,EAAAruE,EAAA,MAAAquE,EAAAruE,EAAA,GACAA,GAAA,EAEA,IAAAiH,EAAA,GAAkBA,EAAA,KAAQA,EAE1BspE,EADAE,EAAAt7B,EAAAluC,GACAkuC,EAAAluC,EAAA,GAAA8mE,GACA0C,EAAAnB,IAAAn6B,EAAAluC,EAAA,IACA+oE,EAAAU,EAAAv7B,EAAAluC,EAAA,IAAA8mE,GACA0C,EAAAnB,IAAAoB,GACAD,EAAAnB,IAAAn6B,EAAAluC,EAAA,KAUA,IARAwD,EAAAilE,OAAAxB,GACA/nE,EAAAupE,OAAAjtC,GACApiC,EAAAqvE,OAAA/sC,GACAriC,EAAAovE,OAAAvB,GACAlsE,EAAAytE,OAAAO,GACA3vC,EAAAovC,OAAAQ,GACA3/D,EAAAm/D,OAAAS,GACAl4B,EAAAy3B,OAAAU,GACAnpE,EAAA,EAAiBA,EAAA,KAAQA,EACzBopE,EAAAX,OAAAz3B,GACA83B,EAAAW,EAAAzuE,EAAA8rE,GACAsC,EAAAf,IAAAoB,GACAlgD,EAAAkgD,EAAAzuE,EAAAq+B,EAAA/vB,EAAAw9D,GACAsC,EAAAf,IAAAoB,GACAL,EAAAf,IAAA70C,EAAAxzB,IACAopE,EAAAf,IAAAn6B,EAAAluC,IACA6oE,EAAAQ,EAAA7lE,EAAAsjE,GACA8B,EAAAa,EAAAjmE,EAAAtE,EAAA9F,EAAA0tE,GACAuC,EAAAhB,IAAAoB,GACAD,EAAAx4B,EACAA,EAAA1nC,EACAA,EAAA+vB,EACAA,EAAAr+B,EACA3B,EAAAgvE,IAAAe,GACApuE,EAAA3B,EACAA,EAAAD,EACAA,EAAA8F,EACAA,EAAAsE,EACAgmE,EAAAf,OAAAW,GACAI,EAAAnB,IAAAgB,GACA7lE,EAAAgmE,EAEAvC,EAAAoB,IAAA7kE,GACAg4B,EAAA6sC,IAAAnpE,GACAw8B,EAAA2sC,IAAAjvE,GACA8tE,EAAAmB,IAAAhvE,GACA2vE,EAAAX,IAAArtE,GACAiuE,EAAAZ,IAAAhvC,GACA6vC,EAAAb,IAAA/+D,GACA6/D,EAAAd,IAAAr3B,GAsBA,OAnBAu4B,GAWA/1D,EAAA,IAAA7W,WAAA,IACAsqE,EAAAuB,OAAAh1D,EAAA,GACAgoB,EAAAgtC,OAAAh1D,EAAA,GACAkoB,EAAA8sC,OAAAh1D,EAAA,IACA0zD,EAAAsB,OAAAh1D,EAAA,IACAw1D,EAAAR,OAAAh1D,EAAA,IACAy1D,EAAAT,OAAAh1D,EAAA,MAhBAA,EAAA,IAAA7W,WAAA,IACAsqE,EAAAuB,OAAAh1D,EAAA,GACAgoB,EAAAgtC,OAAAh1D,EAAA,GACAkoB,EAAA8sC,OAAAh1D,EAAA,IACA0zD,EAAAsB,OAAAh1D,EAAA,IACAw1D,EAAAR,OAAAh1D,EAAA,IACAy1D,EAAAT,OAAAh1D,EAAA,IACA01D,EAAAV,OAAAh1D,EAAA,IACA21D,EAAAX,OAAAh1D,EAAA,KAUAA,GAzMA,GA6MA6xD,EAAA,WAIA,OAHA,SAAA7mE,EAAA5D,EAAA6B,GACA,OAAA2oE,EAAA5mE,EAAA5D,EAAA6B,GAAA,IAFA,GAMAitE,EAAA,WACA,SAAAA,KAMA,OALAA,EAAAxvE,WACA8sE,aAAA,SAAAxoE,GACA,OAAAA,IAGAkrE,EAPA,GAUAC,EAAA,WACA,SAAAA,IACAlD,EAAA1pE,KAAA4sE,GAEA5sE,KAAA4T,cAAAg5D,IACA,EAAAx6C,EAAA3iB,aAAA,oCAEAzP,KAAAujD,GAAA,IAAA3jD,YAAA,o5BACAI,KAAA6sE,OAAA,IAAAjtE,YAAA,o5BACAI,KAAA8sE,KAAA,IAAA3/C,aAAA,0rFACAntB,KAAA+sE,QAAA,IAAAntE,WAAA,KACA,QAAA5D,EAAA,EAAmBA,EAAA,IAASA,IAE5BgE,KAAA+sE,QAAA/wE,GADAA,EAAA,IACAA,GAAA,EAEAA,GAAA,KAGAgE,KAAApC,OAAA,IAAAgC,WAAA,IACAI,KAAAgtE,eAAA,EA+QA,OA5QAlE,EAAA8D,IACAn1D,IAAA,aACA9Y,MAAA,SAAAsuE,IACA,EAAA76C,EAAA3iB,aAAA,iDAGAgI,IAAA,WACA9Y,MAAA,SAAA85B,EAAAhhB,GACA,IAAAge,OAAA,EACAgyC,OAAA,EACAhyD,OAAA,EACA21B,EAAA,IAAAxrC,WAAA,IACAwrC,EAAAx/B,IAAA6sB,GACA,QAAAx1B,EAAA,EAAAwzB,EAAAz2B,KAAAktE,SAAwCjqE,EAAA,KAAQA,IAAAwzB,EAChD2U,EAAAnoC,IAAAwU,EAAAgf,GAEA,QAAAz6B,EAAAgE,KAAAmtE,oBAAA,EAAgDnxE,GAAA,IAAQA,EAAA,CACxDy5B,EAAA2V,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA3V,EACAA,EAAA2V,EAAA,IACAq8B,EAAAr8B,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAA3V,EACA2V,EAAA,GAAAq8B,EACAhyC,EAAA2V,EAAA,IACAq8B,EAAAr8B,EAAA,IACA31B,EAAA21B,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAA3V,EACA2V,EAAA,GAAAq8B,EACAr8B,EAAA,GAAA31B,EACA,QAAA23D,EAAA,EAAwBA,EAAA,KAASA,EACjChiC,EAAAgiC,GAAAptE,KAAA6sE,OAAAzhC,EAAAgiC,IAEA,QAAAC,EAAA,EAAAC,EAAA,GAAAtxE,EAAsCqxE,EAAA,KAAUA,IAAAC,EAChDliC,EAAAiiC,IAAA51D,EAAA61D,GAEA,QAAAC,EAAA,EAAyBA,EAAA,GAAUA,GAAA,GACnC,IAAAC,EAAAxtE,KAAA8sE,KAAA1hC,EAAAmiC,IACAE,EAAAztE,KAAA8sE,KAAA1hC,EAAAmiC,EAAA,IACAG,EAAA1tE,KAAA8sE,KAAA1hC,EAAAmiC,EAAA,IACAI,EAAA3tE,KAAA8sE,KAAA1hC,EAAAmiC,EAAA,IACA93C,EAAA+3C,EAAAC,IAAA,EAAAA,GAAA,GAAAC,IAAA,GAAAA,GAAA,GAAAC,IAAA,GAAAA,GAAA,EACAviC,EAAAmiC,GAAA93C,IAAA,OACA2V,EAAAmiC,EAAA,GAAA93C,GAAA,OACA2V,EAAAmiC,EAAA,GAAA93C,GAAA,MACA2V,EAAAmiC,EAAA,OAAA93C,GAGAA,EAAA2V,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA3V,EACAA,EAAA2V,EAAA,IACAq8B,EAAAr8B,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAA3V,EACA2V,EAAA,GAAAq8B,EACAhyC,EAAA2V,EAAA,IACAq8B,EAAAr8B,EAAA,IACA31B,EAAA21B,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAA3V,EACA2V,EAAA,GAAAq8B,EACAr8B,EAAA,GAAA31B,EACA,QAAAm4D,EAAA,EAAuBA,EAAA,KAAUA,EACjCxiC,EAAAwiC,GAAA5tE,KAAA6sE,OAAAzhC,EAAAwiC,IACAxiC,EAAAwiC,IAAAn2D,EAAAm2D,GAEA,OAAAxiC,KAGA3zB,IAAA,WACA9Y,MAAA,SAAA85B,EAAAhhB,GACA,IAAAna,EAAA0C,KAAAujD,GACA9tB,OAAA,EACAgyC,OAAA,EACAhyD,OAAA,EACA21B,EAAA,IAAAxrC,WAAA,IACAwrC,EAAAx/B,IAAA6sB,GACA,QAAAx1B,EAAA,EAAqBA,EAAA,KAAQA,EAC7BmoC,EAAAnoC,IAAAwU,EAAAxU,GAEA,QAAAjH,EAAA,EAAqBA,EAAAgE,KAAAmtE,oBAA8BnxE,IAAA,CACnD,QAAA6xE,EAAA,EAAyBA,EAAA,KAAUA,EACnCziC,EAAAyiC,GAAAvwE,EAAA8tC,EAAAyiC,IAEAp4D,EAAA21B,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAA31B,EACAA,EAAA21B,EAAA,GACAq8B,EAAAr8B,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAA31B,EACA21B,EAAA,IAAAq8B,EACAhyD,EAAA21B,EAAA,GACAq8B,EAAAr8B,EAAA,GACA3V,EAAA2V,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAA31B,EACA21B,EAAA,IAAAq8B,EACAr8B,EAAA,IAAA3V,EACA,QAAAq4C,EAAA,EAAyBA,EAAA,GAAUA,GAAA,GACnC,IAAAN,EAAApiC,EAAA0iC,EAAA,GACAL,EAAAriC,EAAA0iC,EAAA,GACAJ,EAAAtiC,EAAA0iC,EAAA,GACAH,EAAAviC,EAAA0iC,EAAA,GACAr4C,EAAA+3C,EAAAC,EAAAC,EAAAC,EACAviC,EAAA0iC,EAAA,IAAAr4C,EAAAz1B,KAAA+sE,QAAAS,EAAAC,GACAriC,EAAA0iC,EAAA,IAAAr4C,EAAAz1B,KAAA+sE,QAAAU,EAAAC,GACAtiC,EAAA0iC,EAAA,IAAAr4C,EAAAz1B,KAAA+sE,QAAAW,EAAAC,GACAviC,EAAA0iC,EAAA,IAAAr4C,EAAAz1B,KAAA+sE,QAAAY,EAAAH,GAEA,QAAAO,EAAA,EAAAt3C,EAAA,GAAAz6B,EAAqC+xE,EAAA,KAAUA,IAAAt3C,EAC/C2U,EAAA2iC,IAAAt2D,EAAAgf,GAGA,QAAAu3C,EAAA,EAAuBA,EAAA,KAAUA,EACjC5iC,EAAA4iC,GAAA1wE,EAAA8tC,EAAA4iC,IAEAv4D,EAAA21B,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAA31B,EACAA,EAAA21B,EAAA,GACAq8B,EAAAr8B,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAA31B,EACA21B,EAAA,IAAAq8B,EACAhyD,EAAA21B,EAAA,GACAq8B,EAAAr8B,EAAA,GACA3V,EAAA2V,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAA31B,EACA21B,EAAA,IAAAq8B,EACAr8B,EAAA,IAAA3V,EACA,QAAAw4C,EAAA,EAAAC,EAAAluE,KAAAktE,SAA4Ce,EAAA,KAAUA,IAAAC,EACtD9iC,EAAA6iC,IAAAx2D,EAAAy2D,GAEA,OAAA9iC,KAGA3zB,IAAA,iBACA9Y,MAAA,SAAA8C,EAAA0sE,GAMA,IALA,IAAAC,EAAA3sE,EAAA/B,OACA9B,EAAAoC,KAAApC,OACA01B,EAAAtzB,KAAAgtE,eACAv2D,KACA43D,EAAAruE,KAAAquE,GACAryE,EAAA,EAAqBA,EAAAoyE,IAAkBpyE,EAGvC,GAFA4B,EAAA01B,GAAA7xB,EAAAzF,OACAs3B,EACA,KAIA,IADA,IAAAg7C,EAAAtuE,KAAAuuE,SAAA3wE,EAAAoC,KAAAwuE,MACAvrE,EAAA,EAAuBA,EAAA,KAAQA,EAC/BqrE,EAAArrE,IAAAorE,EAAAprE,GAEAorE,EAAAzwE,EACA6Y,EAAA3S,KAAAwqE,GACA1wE,EAAA,IAAAgC,WAAA,IACA0zB,EAAA,EAKA,GAHAtzB,KAAApC,SACAoC,KAAAszB,eACAtzB,KAAAquE,KACA,IAAA53D,EAAA/W,OACA,WAAAE,WAAA,GAEA,IAAA6uE,EAAA,GAAAh4D,EAAA/W,OACA,GAAAyuE,EAAA,CACA,IAAAO,EAAAj4D,IAAA/W,OAAA,GACAivE,EAAAD,EAAA,IACA,GAAAC,GAAA,IACA,QAAAnrB,EAAA,GAAA9oC,EAAA,GAAAi0D,EAA4CnrB,GAAA9oC,IAAU8oC,EACtD,GAAAkrB,EAAAlrB,KAAAmrB,EAAA,CACAA,EAAA,EACA,MAGAF,GAAAE,EACAl4D,IAAA/W,OAAA,GAAAgvE,EAAA3oE,SAAA,KAAA4oE,IAIA,IADA,IAAA3E,EAAA,IAAApqE,WAAA6uE,GACAze,EAAA,EAAA4e,EAAA,EAAAnf,EAAAh5C,EAAA/W,OAAsDswD,EAAAP,IAAWO,EAAA4e,GAAA,GACjE5E,EAAAp+D,IAAA6K,EAAAu5C,GAAA4e,GAEA,OAAA5E,KAGAvyD,IAAA,eACA9Y,MAAA,SAAA8C,EAAA0sE,GACA,IAAAE,EAAAnnE,UAAAxH,OAAA,QAAAe,IAAAyG,UAAA,GAAAA,UAAA,QAEAknE,EAAA3sE,EAAA/B,OACA9B,EAAAoC,KAAApC,OACA01B,EAAAtzB,KAAAgtE,eACA,GAAAqB,EACAruE,KAAAquE,SACO,CACP,QAAAryE,EAAA,EAAuBs3B,EAAA,IAAAt3B,EAAAoyE,IAAuCpyE,IAAAs3B,EAC9D11B,EAAA01B,GAAA7xB,EAAAzF,GAEA,GAAAs3B,EAAA,GAEA,OADAtzB,KAAAszB,eACA,IAAA1zB,WAAA,GAEAI,KAAAquE,GAAAzwE,EACA6D,IAAAsE,SAAA,IAKA,OAHA/F,KAAApC,OAAA,IAAAgC,WAAA,IACAI,KAAAszB,aAAA,EACAtzB,KAAAiqE,aAAAjqE,KAAA6uE,eACA7uE,KAAAiqE,aAAAxoE,EAAA0sE,MAGA12D,IAAA,UACA9Y,MAAA,SAAA8C,EAAA4sE,GACA,IAAAD,EAAA3sE,EAAA/B,OACA9B,EAAAoC,KAAApC,OACA01B,EAAAtzB,KAAAgtE,eACAv2D,KACA43D,IACAA,EAAA,IAAAzuE,WAAA,KAEA,QAAA5D,EAAA,EAAqBA,EAAAoyE,IAAkBpyE,EAGvC,GAFA4B,EAAA01B,GAAA7xB,EAAAzF,OACAs3B,EACA,KAGA,QAAArwB,EAAA,EAAuBA,EAAA,KAAQA,EAC/BrF,EAAAqF,IAAAorE,EAAAprE,GAEA,IAAA6rE,EAAA9uE,KAAA+uE,SAAAnxE,EAAAoC,KAAAwuE,MACAH,EAAAS,EACAr4D,EAAA3S,KAAAgrE,GACAlxE,EAAA,IAAAgC,WAAA,IACA0zB,EAAA,EAKA,GAHAtzB,KAAApC,SACAoC,KAAAszB,eACAtzB,KAAAquE,KACA,IAAA53D,EAAA/W,OACA,WAAAE,WAAA,GAIA,IAFA,IAAA6uE,EAAA,GAAAh4D,EAAA/W,OACAsqE,EAAA,IAAApqE,WAAA6uE,GACAO,EAAA,EAAAC,EAAA,EAAAv0D,EAAAjE,EAAA/W,OAAqDsvE,EAAAt0D,IAAUs0D,EAAAC,GAAA,GAC/DjF,EAAAp+D,IAAA6K,EAAAu4D,GAAAC,GAEA,OAAAjF,MAIA4C,EAlSA,GAqSA/D,EAAA,SAAAqG,GAGA,SAAArG,EAAApxD,GACAiyD,EAAA1pE,KAAA6oE,GAEA,IAAArtD,EAAA4tD,EAAAppE,MAAA6oE,EAAAhpE,WAAAnD,OAAA67C,eAAAswB,IAAA1sE,KAAA6D,OAMA,OAJAwb,EAAA2xD,oBAAA,GACA3xD,EAAA0xD,SAAA,IACA1xD,EAAA2zD,MAAA,IAAAvvE,YAAA,q4BACA4b,EAAAgzD,KAAAhzD,EAAA4zD,WAAA33D,GACA+D,EAoCA,OA/CA8tD,EAAAT,EAgDC+D,GAlCD9D,EAAAD,IACApxD,IAAA,aACA9Y,MAAA,SAAAsuE,GACA,IACA3vE,EAAA0C,KAAAujD,GACA8rB,EAAArvE,KAAAmvE,MACA14D,EAAA,IAAA7W,WAHA,KAIA6W,EAAA7K,IAAAqhE,GACA,QAAAhqE,EAAA,GAAAjH,EAAA,EAA6BiH,EAL7B,MAKoCjH,EAAA,CACpC,IAAAqwE,EAAA51D,EAAAxT,EAAA,GACAqpE,EAAA71D,EAAAxT,EAAA,GACAqsE,EAAA74D,EAAAxT,EAAA,GACAssE,EAAA94D,EAAAxT,EAAA,GACAopE,EAAA/uE,EAAA+uE,GACAC,EAAAhvE,EAAAgvE,GACAgD,EAAAhyE,EAAAgyE,GACAC,EAAAjyE,EAAAiyE,GACAlD,GAAAgD,EAAArzE,GACA,QAAAe,EAAA,EAAuBA,EAAA,IAAOA,EAC9B0Z,EAAAxT,GAAAopE,GAAA51D,EAAAxT,EAAA,IAEAwT,IADAxT,GACAqpE,GAAA71D,EAAAxT,EAAA,IAEAwT,IADAxT,GACAqsE,GAAA74D,EAAAxT,EAAA,IAEAwT,IADAxT,GACAssE,GAAA94D,EAAAxT,EAAA,IACAA,IAGA,OAAAwT,MAIAoyD,EAhDA,GAmDAD,EAAA,SAAA4G,GAGA,SAAA5G,EAAAnxD,GACAiyD,EAAA1pE,KAAA4oE,GAEA,IAAArrD,EAAA6rD,EAAAppE,MAAA4oE,EAAA/oE,WAAAnD,OAAA67C,eAAAqwB,IAAAzsE,KAAA6D,OAKA,OAHAud,EAAA4vD,oBAAA,GACA5vD,EAAA2vD,SAAA,IACA3vD,EAAAixD,KAAAjxD,EAAA6xD,WAAA33D,GACA8F,EAkDA,OA5DA+rD,EAAAV,EA6DCgE,GAhDD9D,EAAAF,IACAnxD,IAAA,aACA9Y,MAAA,SAAAsuE,GACA,IACA3vE,EAAA0C,KAAAujD,GACA9sC,EAAA,IAAA7W,WAFA,KAGA6W,EAAA7K,IAAAqhE,GAMA,IALA,IAAAr4D,EAAA,EACAy3D,OAAA,EACAC,OAAA,EACAgD,OAAA,EACAC,OAAA,EACAtsE,EAAA,GAAAjH,EAAA,EAA6BiH,EAT7B,MASoCjH,EAAA,CACpCiH,EAAA,QACAopE,EAAA/uE,EAAA+uE,GACAC,EAAAhvE,EAAAgvE,GACAgD,EAAAhyE,EAAAgyE,GACAC,EAAAjyE,EAAAiyE,IACStsE,EAAA,QACTopE,EAAA51D,EAAAxT,EAAA,GACAqpE,EAAA71D,EAAAxT,EAAA,GACAqsE,EAAA74D,EAAAxT,EAAA,GACAssE,EAAA94D,EAAAxT,EAAA,GACAopE,EAAA/uE,EAAA+uE,GACAC,EAAAhvE,EAAAgvE,GACAgD,EAAAhyE,EAAAgyE,GACAC,EAAAjyE,EAAAiyE,GACAlD,GAAAz3D,GACAA,IAAA,UACAA,EAAA,QAAAA,KAGA,QAAA7X,EAAA,EAAuBA,EAAA,IAAOA,EAC9B0Z,EAAAxT,GAAAopE,GAAA51D,EAAAxT,EAAA,IAEAwT,IADAxT,GACAqpE,GAAA71D,EAAAxT,EAAA,IAEAwT,IADAxT,GACAqsE,GAAA74D,EAAAxT,EAAA,IAEAwT,IADAxT,GACAssE,GAAA94D,EAAAxT,EAAA,IACAA,IAGA,OAAAwT,MAIAmyD,EA7DA,GAgEAF,EAAA,WACA,SAAA+G,EAAAC,EAAAC,GACA,GAAAD,EAAAhwE,SAAAiwE,EAAAjwE,OACA,SAEA,QAAA1D,EAAA,EAAmBA,EAAA0zE,EAAAhwE,OAAmB1D,IACtC,GAAA0zE,EAAA1zE,KAAA2zE,EAAA3zE,GACA,SAGA,SAEA,SAAA0sE,KAmCA,OAlCAA,EAAAvrE,WACAyyE,mBAAA,SAAA5kB,EAAA6kB,EAAAC,EAAAC,GACA,IAAAC,EAAA,IAAApwE,WAAAorD,EAAAtrD,OAAA,IAKA,OAJAswE,EAAApkE,IAAAo/C,EAAA,GACAglB,EAAApkE,IAAAikE,EAAA7kB,EAAAtrD,QACAswE,EAAApkE,IAAAkkE,EAAA9kB,EAAAtrD,OAAAmwE,EAAAnwE,QAEA+vE,EADAlH,EAAAyH,EAAA,EAAAA,EAAAtwE,QACAqwE,IAEAE,kBAAA,SAAAjlB,EAAAklB,EAAAC,GACA,IAAAH,EAAA,IAAApwE,WAAAorD,EAAAtrD,OAAA,GAIA,OAHAswE,EAAApkE,IAAAo/C,EAAA,GACAglB,EAAApkE,IAAAskE,EAAAllB,EAAAtrD,QAEA+vE,EADAlH,EAAAyH,EAAA,EAAAA,EAAAtwE,QACAywE,IAEAC,YAAA,SAAAplB,EAAAqlB,EAAAP,EAAAQ,GACA,IAAAN,EAAA,IAAApwE,WAAAorD,EAAAtrD,OAAA,IACAswE,EAAApkE,IAAAo/C,EAAA,GACAglB,EAAApkE,IAAAykE,EAAArlB,EAAAtrD,QACAswE,EAAApkE,IAAAkkE,EAAA9kB,EAAAtrD,OAAA2wE,EAAA3wE,QACA,IAAA+X,EAAA8wD,EAAAyH,EAAA,EAAAA,EAAAtwE,QAEA,OADA,IAAAkpE,EAAAnxD,GACAwyD,aAAAqG,GAAA,MAAA1wE,WAAA,MAEA2wE,WAAA,SAAAvlB,EAAAwlB,EAAAC,GACA,IAAAT,EAAA,IAAApwE,WAAAorD,EAAAtrD,OAAA,GACAswE,EAAApkE,IAAAo/C,EAAA,GACAglB,EAAApkE,IAAA4kE,EAAAxlB,EAAAtrD,QACA,IAAA+X,EAAA8wD,EAAAyH,EAAA,EAAAA,EAAAtwE,QAEA,OADA,IAAAkpE,EAAAnxD,GACAwyD,aAAAwG,GAAA,MAAA7wE,WAAA,OAGA8oE,EA/CA,GAiDAD,EAAA,WACA,SAAAiI,EAAAhB,EAAAC,GACA,IAAAl6C,EAAA,IAAA71B,WAAA8vE,EAAAhwE,OAAAiwE,EAAAjwE,QAGA,OAFA+1B,EAAA7pB,IAAA8jE,EAAA,GACAj6C,EAAA7pB,IAAA+jE,EAAAD,EAAAhwE,QACA+1B,EAEA,SAAAk7C,EAAA3lB,EAAAvyB,EAAAq3C,GAIA,IAHA,IAAAr5C,EAAA8xC,EAAA9vC,EAAA,EAAAA,EAAA/4B,QAAAqG,SAAA,MACA9H,GAAA,GACAjC,EAAA,EACAA,EAAA,IAAAiC,IAAAyB,OAAA,GAAA1D,EAAA,KACA,IAAA40E,EAAA5lB,EAAAtrD,OAAA+2B,EAAA/2B,OAAAowE,EAAApwE,OACAmxE,EAAA,IAAAjxE,WAAA,GAAAgxE,GACAtwE,EAAAowE,EAAA1lB,EAAAv0B,GACAn2B,EAAAowE,EAAApwE,EAAAwvE,GACA,QAAA7sE,EAAA,EAAA6D,EAAA,EAA8B7D,EAAA,GAAQA,IAAA6D,GAAA8pE,EACtCC,EAAAjlE,IAAAtL,EAAAwG,GAGA7I,EADA,IAAA4qE,EAAApyC,EAAA1wB,SAAA,OACA0+C,QAAAosB,EAAAp6C,EAAA1wB,SAAA,QAEA,IADA,IAAA+qE,EAAA,EACAlF,EAAA,EAAqBA,EAAA,GAAQA,IAC7BkF,GAAA,EACAA,GAAA,EACAA,IAAA7yE,EAAA2tE,KAAA,KACAkF,GAAA,EAEA,IAAAA,EACAr6C,EAAA8xC,EAAAtqE,EAAA,EAAAA,EAAAyB,QACO,IAAAoxE,EACPr6C,EAAA6xC,EAAArqE,EAAA,EAAAA,EAAAyB,QACO,IAAAoxE,IACPr6C,EAAA4xC,EAAApqE,EAAA,EAAAA,EAAAyB,SAEA1D,IAEA,OAAAy6B,EAAA1wB,SAAA,MAEA,SAAA0iE,KACA,SAAAgH,EAAAC,EAAAC,GACA,GAAAD,EAAAhwE,SAAAiwE,EAAAjwE,OACA,SAEA,QAAA1D,EAAA,EAAmBA,EAAA0zE,EAAAhwE,OAAmB1D,IACtC,GAAA0zE,EAAA1zE,KAAA2zE,EAAA3zE,GACA,SAGA,SAuCA,OArCAysE,EAAAtrE,WACA4zE,KAAA,SAAA/lB,EAAAgmB,EAAAlB,GACA,OAAAa,EAAA3lB,EAAAgmB,EAAAlB,IAEAF,mBAAA,SAAA5kB,EAAA6kB,EAAAC,EAAAC,GACA,IAAAC,EAAA,IAAApwE,WAAAorD,EAAAtrD,OAAA,IAKA,OAJAswE,EAAApkE,IAAAo/C,EAAA,GACAglB,EAAApkE,IAAAikE,EAAA7kB,EAAAtrD,QACAswE,EAAApkE,IAAAkkE,EAAA9kB,EAAAtrD,OAAAmwE,EAAAnwE,QAEA+vE,EADAkB,EAAA3lB,EAAAglB,EAAAF,GACAC,IAEAE,kBAAA,SAAAjlB,EAAAklB,EAAAC,GACA,IAAAH,EAAA,IAAApwE,WAAAorD,EAAAtrD,OAAA,GAIA,OAHAswE,EAAApkE,IAAAo/C,EAAA,GACAglB,EAAApkE,IAAAskE,EAAAllB,EAAAtrD,QAEA+vE,EADAkB,EAAA3lB,EAAAglB,MACAG,IAEAC,YAAA,SAAAplB,EAAAqlB,EAAAP,EAAAQ,GACA,IAAAN,EAAA,IAAApwE,WAAAorD,EAAAtrD,OAAA,IACAswE,EAAApkE,IAAAo/C,EAAA,GACAglB,EAAApkE,IAAAykE,EAAArlB,EAAAtrD,QACAswE,EAAApkE,IAAAkkE,EAAA9kB,EAAAtrD,OAAA2wE,EAAA3wE,QACA,IAAA+X,EAAAk5D,EAAA3lB,EAAAglB,EAAAF,GAEA,OADA,IAAAlH,EAAAnxD,GACAwyD,aAAAqG,GAAA,MAAA1wE,WAAA,MAEA2wE,WAAA,SAAAvlB,EAAAwlB,EAAAC,GACA,IAAAT,EAAA,IAAApwE,WAAAorD,EAAAtrD,OAAA,GACAswE,EAAApkE,IAAAo/C,EAAA,GACAglB,EAAApkE,IAAA4kE,EAAAxlB,EAAAtrD,QACA,IAAA+X,EAAAk5D,EAAA3lB,EAAAglB,MAEA,OADA,IAAApH,EAAAnxD,GACAwyD,aAAAwG,GAAA,MAAA7wE,WAAA,OAGA6oE,EAxFA,GA0FAwI,EAAA,WACA,SAAAA,EAAAC,EAAAC,GACAnxE,KAAAoxE,wBAAAF,EACAlxE,KAAAqxE,wBAAAF,EAgBA,OAdAF,EAAA9zE,WACAqvC,aAAA,SAAArwB,EAAAzc,GACA,IAAAovE,EAAA,IAAA9uE,KAAAqxE,wBACA,WAAAxnC,EAAA5X,cAAA9V,EAAAzc,EAAA,SAAA+B,EAAA0sE,GACA,OAAAW,EAAA7E,aAAAxoE,EAAA0sE,MAGAljC,cAAA,SAAA3tC,GACA,IAAAwxE,EAAA,IAAA9uE,KAAAoxE,wBACA3vE,GAAA,EAAA2wB,EAAAtiB,eAAAxS,GAEA,OADAmE,EAAAqtE,EAAA7E,aAAAxoE,GAAA,IACA,EAAA2wB,EAAA3gB,eAAAhQ,KAGAwvE,EAnBA,GAqBAlmB,EAAA,WACA,IAAAumB,EAAA,IAAA1xE,YAAA,6GAqBA,SAAA2xE,EAAAzmB,EAAAE,EAAA+kB,EAAAI,EAAA1qB,EAAA+rB,EAAA3H,EAAArlB,GACA,IAGAvhD,EACAlG,EAJA00E,EAAA,GAAA1B,EAAArwE,OAAAorD,EAAAprD,OACAswE,EAAA,IAAApwE,WAAA6xE,GACAz1E,EAAA,EAGA,GAAAgvD,EAEA,IADAjuD,EAAAyB,KAAAqG,IAAA,GAAAmmD,EAAAtrD,QACY1D,EAAAe,IAAOf,EACnBg0E,EAAAh0E,GAAAgvD,EAAAhvD,GAIA,IADAiH,EAAA,EACAjH,EAAA,IACAg0E,EAAAh0E,KAAAs1E,EAAAruE,KAEA,IAAAA,EAAA,EAAAlG,EAAAgzE,EAAArwE,OAAyCuD,EAAAlG,IAAOkG,EAChD+sE,EAAAh0E,KAAA+zE,EAAA9sE,GAMA,IAJA+sE,EAAAh0E,KAAA,IAAAypD,EACAuqB,EAAAh0E,KAAAypD,GAAA,MACAuqB,EAAAh0E,KAAAypD,GAAA,OACAuqB,EAAAh0E,KAAAypD,IAAA,OACAxiD,EAAA,EAAAlG,EAAA+tD,EAAAprD,OAAkCuD,EAAAlG,IAAOkG,EACzC+sE,EAAAh0E,KAAA8uD,EAAA7nD,GAEAuuE,GAAA,IAAAhtB,IACAwrB,EAAAh0E,KAAA,IACAg0E,EAAAh0E,KAAA,IACAg0E,EAAAh0E,KAAA,IACAg0E,EAAAh0E,KAAA,KAEA,IAAA+0E,EAAAvI,EAAAwH,EAAA,EAAAh0E,GACA01E,EAAA7H,GAAA,EACA,GAAA2H,GAAA,EACA,IAAAvuE,EAAA,EAAiBA,EAAA,KAAQA,EACzB8tE,EAAAvI,EAAAuI,EAAA,EAAAW,GAGA,IACAC,EADAC,EAAAb,EAAAhrE,SAAA,EAAA2rE,GAEA,GAAAF,GAAA,GACA,IAAAx1E,EAAA,EAAiBA,EAAA,KAAQA,EACzBg0E,EAAAh0E,GAAAs1E,EAAAt1E,GAEA,IAAAiH,EAAA,EAAAlG,EAAA+tD,EAAAprD,OAAoCuD,EAAAlG,IAAOkG,EAC3C+sE,EAAAh0E,KAAA8uD,EAAA7nD,GAGA0uE,EADA,IAAAhJ,EAAAiJ,GACA9H,aAAAtB,EAAAwH,EAAA,EAAAh0E,IACAe,EAAA60E,EAAAlyE,OACA,IACA+2B,EADAo7C,EAAA,IAAAjyE,WAAA7C,GAEA,IAAAkG,EAAA,EAAiBA,GAAA,KAASA,EAAA,CAC1B,IAAAwzB,EAAA,EAAmBA,EAAA15B,IAAO05B,EAC1Bo7C,EAAAp7C,GAAAm7C,EAAAn7C,GAAAxzB,EAGA0uE,EADA,IAAAhJ,EAAAkJ,GACA/H,aAAA6H,GAEA,IAAA1uE,EAAA,EAAAlG,EAAA40E,EAAAjyE,OAAuCuD,EAAAlG,IAAOkG,EAC9C,GAAAktE,EAAAltE,KAAA0uE,EAAA1uE,GACA,iBAMA,IAAAA,EAAA,EAAAlG,GADA40E,EADA,IAAAhJ,EAAAiJ,GACA9H,aAAAwH,IACA5xE,OAAuCuD,EAAAlG,IAAOkG,EAC9C,GAAAktE,EAAAltE,KAAA0uE,EAAA1uE,GACA,YAIA,OAAA2uE,EAwCA,IAAAE,EAAAz/C,EAAAxE,KAAA/wB,IAAA,YACA,SAAAiuD,EAAAh/B,EAAA++B,EAAAE,GACA,IAAAhf,EAAAjgB,EAAAjvB,IAAA,UACA,OAAAu1B,EAAA1B,QAAAqb,EAAA,YACA,UAAA5Z,EAAAvgB,YAAA,6BAEA7R,KAAA+rB,OACA,IAAAgmD,EAAAhmD,EAAAjvB,IAAA,KACA,IAAAqG,OAAA2T,UAAAi7D,IAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,EACA,UAAA3/C,EAAAvgB,YAAA,oCAEA7R,KAAA+xE,YACA,IAAAlI,EAAA99C,EAAAjvB,IAAA,UACA,IAAA+sE,EACA,GAAAkI,GAAA,EACAlI,EAAA,OACO,CACP,IAAAmI,EAAAjmD,EAAAjvB,IAAA,MACAm1E,EAAAlmD,EAAAjvB,IAAA,QACA,MAAAu1B,EAAAvC,QAAAkiD,KAAA,EAAA3/C,EAAA1B,QAAAshD,GAAA,CACAD,EAAAvjD,oBAAA,EACA,IAAAyjD,EAAAF,EAAAl1E,IAAAm1E,EAAA11E,OACAstE,EAAAqI,KAAAp1E,IAAA,gBACA,KACA+sE,IAAA,IAKA,IAAA1mE,OAAA2T,UAAA+yD,MAAA,IAAAA,EAAA,KACA,UAAAz3C,EAAAvgB,YAAA,sBAEA,IAAAk+D,GAAA,EAAA39C,EAAAtiB,eAAAic,EAAAjvB,IAAA,MAAAiJ,SAAA,MACAoqE,GAAA,EAAA/9C,EAAAtiB,eAAAic,EAAAjvB,IAAA,MAAAiJ,SAAA,MACA0/C,EAAA15B,EAAAjvB,IAAA,KACA00E,EAAAzlD,EAAAjvB,IAAA,KACA0nD,GAAA,IAAAutB,GAAA,IAAAA,KAAA,IAAAhmD,EAAAjvB,IAAA,mBACAkD,KAAAwkD,kBACA,IACA2tB,EAWAP,EAZAQ,GAAA,EAAAhgD,EAAAtiB,eAAAg7C,GAEA,GAAAE,EAAA,CACA,OAAAwmB,EACA,IACAxmB,GAAA,EAAA54B,EAAAziB,oBAAAq7C,GACS,MAAA/9B,IACT,EAAAmF,EAAA1iB,MAAA,oEAGAyiE,GAAA,EAAA//C,EAAAtiB,eAAAk7C,GAGA,OAAA+mB,EACAH,EAAAL,EAAAa,EAAAD,EAAApC,EAAAI,EAAA1qB,EAAA+rB,EAAA3H,EAAArlB,OACK,CACL,IAAAqrB,GAAA,EAAAz9C,EAAAtiB,eAAAic,EAAAjvB,IAAA,MAAAiJ,SAAA,OACAsqE,GAAA,EAAAj+C,EAAAtiB,eAAAic,EAAAjvB,IAAA,MAAAiJ,SAAA,OACAssE,GAAA,EAAAjgD,EAAAtiB,eAAAic,EAAAjvB,IAAA,MAAAiJ,SAAA,MACAmqE,GAAA,EAAA99C,EAAAtiB,eAAAic,EAAAjvB,IAAA,MAAAiJ,SAAA,OACAyqE,GAAA,EAAAp+C,EAAAtiB,eAAAic,EAAAjvB,IAAA,MAAAiJ,SAAA,OACAuqE,GAAA,EAAAl+C,EAAAtiB,eAAAic,EAAAjvB,IAAA,OACA2zE,GAAA,EAAAr+C,EAAAtiB,eAAAic,EAAAjvB,IAAA,QACA,EAAAs1B,EAAAtiB,eAAAic,EAAAjvB,IAAA,UACA80E,EApMA,SAAAJ,EAAAxmB,EAAA+kB,EAAAF,EAAAQ,EAAAgC,EAAAlC,EAAAD,EAAAM,EAAAF,EAAAG,EAAA6B,GACA,GAAAtnB,EAAA,CACA,IAAAunB,EAAA/zE,KAAAqG,IAAA,IAAAmmD,EAAAtrD,QACAsrD,IAAAjlD,SAAA,EAAAwsE,QAEAvnB,KAEA,IAAAwnB,EAMA,OAJAA,EADA,IAAAhB,EACA,IAAA/I,EAEA,IAAAC,GAEAuH,kBAAAjlB,EAAAklB,EAAAC,GACAqC,EAAAjC,WAAAvlB,EAAAwlB,EAAAC,GACKzlB,EAAAtrD,QAAA8yE,EAAA5C,mBAAA5kB,EAAA6kB,EAAAwC,EAAAtC,GACLyC,EAAApC,YAAAplB,EAAAqlB,EAAAgC,EAAA/B,GAEA,KAkLAmC,CAAAjB,EAAAW,EAAApC,EAAAF,EAAAQ,EAAAgC,EAAAlC,EAAAD,EAAAM,EAAAF,EAAAG,GAEA,IAAAmB,IAAA5mB,EACA,UAAA54B,EAAA/f,kBAAA,oBAAA+f,EAAAhgB,kBAAAiY,eAKA,IAJKunD,GAAA5mB,IAEL4mB,EAAAL,EAAAa,EA1GA,SAAApnB,EAAA+kB,EAAAyB,EAAA3H,GACA,IAEA5mE,EACAlG,EAHAizE,EAAA,IAAApwE,WAAA,IACA5D,EAAA,EAIA,IADAe,EAAAyB,KAAAqG,IAAA,GAAAmmD,EAAAtrD,QACU1D,EAAAe,IAAOf,EACjBg0E,EAAAh0E,GAAAgvD,EAAAhvD,GAGA,IADAiH,EAAA,EACAjH,EAAA,IACAg0E,EAAAh0E,KAAAs1E,EAAAruE,KAEA,IAOAktE,EAPAY,EAAAvI,EAAAwH,EAAA,EAAAh0E,GACA01E,EAAA7H,GAAA,EACA,GAAA2H,GAAA,EACA,IAAAvuE,EAAA,EAAiBA,EAAA,KAAQA,EACzB8tE,EAAAvI,EAAAuI,EAAA,EAAAA,EAAArxE,QAIA,GAAA8xE,GAAA,GACArB,EAAAJ,EACA,IACAt5C,EADAo7C,EAAA,IAAAjyE,WAAA8xE,GAEA,IAAAzuE,EAAA,GAAkBA,GAAA,EAAQA,IAAA,CAC1B,IAAAwzB,EAAA,EAAmBA,EAAAi7C,IAAsBj7C,EACzCo7C,EAAAp7C,GAAAs6C,EAAAt6C,GAAAxzB,EAGAktE,EADA,IAAAxH,EAAAkJ,GACA/H,aAAAqG,SAIAA,EADA,IAAAxH,EAAAoI,EAAAhrE,SAAA,EAAA2rE,IACA5H,aAAAiG,GAEA,OAAAI,EAqEAuC,CAAAP,EAAApC,EAAAyB,EAAA3H,GACAkG,EAAAI,EAAA1qB,EAAA+rB,EAAA3H,EAAArlB,KAEAotB,EACA,UAAAx/C,EAAA/f,kBAAA,qBAAA+f,EAAAhgB,kBAAAkY,oBAGA,GADAtqB,KAAA4xE,gBACAG,GAAA,GACA,IAAAY,EAAA5mD,EAAAjvB,IAAA,OACA,EAAAu1B,EAAAvC,QAAA6iD,KACAA,EAAAlkD,oBAAA,GAEAzuB,KAAA2yE,KACA3yE,KAAA4yE,KAAA7mD,EAAAjvB,IAAA,SAAAg1E,EACA9xE,KAAA6yE,KAAA9mD,EAAAjvB,IAAA,SAAAg1E,EACA9xE,KAAA8yE,IAAA/mD,EAAAjvB,IAAA,QAAAkD,KAAA4yE,MAGA,SAAAG,EAAA9iD,EAAAC,EAAA0hD,EAAAoB,GACA,IACAh3E,EACAe,EAFA0a,EAAA,IAAA7X,WAAAgyE,EAAAlyE,OAAA,GAGA,IAAA1D,EAAA,EAAAe,EAAA60E,EAAAlyE,OAAyC1D,EAAAe,IAAOf,EAChDyb,EAAAzb,GAAA41E,EAAA51E,GAcA,OAZAyb,EAAAzb,KAAA,IAAAi0B,EACAxY,EAAAzb,KAAAi0B,GAAA,MACAxY,EAAAzb,KAAAi0B,GAAA,OACAxY,EAAAzb,KAAA,IAAAk0B,EACAzY,EAAAzb,KAAAk0B,GAAA,MACA8iD,IACAv7D,EAAAzb,KAAA,IACAyb,EAAAzb,KAAA,GACAyb,EAAAzb,KAAA,IACAyb,EAAAzb,KAAA,IAEAwsE,EAAA/wD,EAAA,EAAAzb,GACA+J,SAAA,EAAAvH,KAAAqG,IAAA+sE,EAAAlyE,OAAA,OAEA,SAAAuzE,EAAAN,EAAAp2E,EAAA0zB,EAAAC,EAAAzY,GACA,OAAA4a,EAAA1B,QAAAp0B,GACA,UAAA61B,EAAAvgB,YAAA,8BAEA,IACAqhE,EADAC,EAAAR,EAAA71E,IAAAP,QAKA,GAHA,OAAA42E,QAAA1yE,IAAA0yE,IACAD,EAAAC,EAAAr2E,IAAA,SAEAo2E,GAAA,SAAAA,EAAA32E,KACA,kBACA,WAAAowE,GAGA,UAAAuG,EAAA32E,KACA,kBACA,WAAAosE,EAAAoK,EAAA9iD,EAAAC,EAAAzY,GAAA,KAGA,aAAAy7D,EAAA32E,KACA,kBACA,WAAAssE,EAAAkK,EAAA9iD,EAAAC,EAAAzY,GAAA,KAGA,aAAAy7D,EAAA32E,KACA,kBACA,WAAAqsE,EAAAnxD,IAGA,UAAA2a,EAAAvgB,YAAA,yBAcA,OAZAk5C,EAAA5tD,WACAkxD,sBAAA,SAAAp+B,EAAAC,GACA,OAAAlwB,KAAA+xE,WAAA,IAAA/xE,KAAA+xE,UACA,WAAAd,EAAAgC,EAAAjzE,KAAA2yE,GAAA3yE,KAAA4yE,KAAA3iD,EAAAC,EAAAlwB,KAAA4xE,eAAAqB,EAAAjzE,KAAA2yE,GAAA3yE,KAAA6yE,KAAA5iD,EAAAC,EAAAlwB,KAAA4xE,gBAEA,IAAAn6D,EAAAs7D,EAAA9iD,EAAAC,EAAAlwB,KAAA4xE,eAAA,GACAwB,EAAA,WACA,WAAAzK,EAAAlxD,IAEA,WAAAw5D,EAAAmC,OAGAroB,EA7RA,GA+RAjvD,EAAA+sE,eACA/sE,EAAA8sE,eACA9sE,EAAA6sE,gBACA7sE,EAAAivD,yBACAjvD,EAAA4sE,QACA5sE,EAAA2sE,QACA3sE,EAAA0sE,eACA1sE,EAAAysE,kBACAzsE,EAAAwsE,kBACAxsE,EAAAusE,mBAIA,SAAAtsE,EAAAD,EAAA0T,GAEA,aAGA9S,OAAAC,eAAAb,EAAA,cACA6C,OAAA,IAEA7C,EAAAu3E,YAAAv3E,EAAAw3E,eAAAx3E,EAAAy3E,WAAAz3E,EAAA03E,WAAA13E,EAAA23E,SAAA33E,EAAA43E,WAAA53E,EAAA63E,UAAA73E,EAAA83E,IAAA93E,EAAA+3E,UAAA/3E,EAAAg4E,wBAAArzE,EAEA,IAAA2xB,EAAA5iB,EAAA,GAEAukE,EAAAvkE,EAAA,KAEAwkE,EAAAxkE,EAAA,IAGAskE,GAAA,koIACAD,EAAA,WACA,IAAAI,GAAA,MACA9rC,GAAA,QACAtjC,IAAA,EACAqvE,eAAA,EACAC,MAAA,GACG,MACHhsC,GAAA,QACAtjC,IAAA,EACAqvE,eAAA,EACAC,MAAA,IAEAhsC,GAAA,UACAtjC,IAAA,EACAqvE,eAAA,IAEA/rC,GAAA,UACAtjC,IAAA,EACAuvE,YAAA,IAEAjsC,GAAA,UACAtjC,IAAA,EACAuvE,YAAA,IAEAjsC,GAAA,UACAtjC,IAAA,EACAuvE,YAAA,IAEAjsC,GAAA,YACAtjC,IAAA,EACAuvE,YAAA,GACG,MACHjsC,GAAA,WACAtjC,IAAA,EACAwvE,YAAA,IAEAlsC,GAAA,SACAtjC,IAAA,EACAwvE,YAAA,GACG,WACHlsC,GAAA,UACAtjC,IAAA,EACAqvE,eAAA,GACG,gBACH/rC,GAAA,UACAtjC,IAAA,EACAqvE,eAAA,EACAC,MAAA,IAEAhsC,GAAA,WACAtjC,IAAA,EACAqvE,eAAA,IAEA/rC,GAAA,WACAtjC,IAAA,EACAqvE,eAAA,IAEA/rC,GAAA,UACAtjC,IAAA,EACAqvE,eAAA,IAEA/rC,GAAA,UACAtjC,IAAA,EACAqvE,eAAA,IAEA/rC,GAAA,UACAtjC,IAAA,EACAqvE,eAAA,EACAC,MAAA,IAEAhsC,GAAA,aACAtjC,IAAA,EACAuvE,YAAA,IAEAjsC,GAAA,aACAtjC,IAAA,EACAuvE,YAAA,IAEAjsC,GAAA,YACAtjC,IAAA,EACAuvE,YAAA,IAEAjsC,GAAA,YACAtjC,IAAA,EACAuvE,YAAA,GACG,MACHjsC,GAAA,YACAtjC,IAAA,EACAwvE,YAAA,IAEAlsC,GAAA,YACAtjC,IAAA,EACAuvE,YAAA,IAEAjsC,GAAA,YACAtjC,IAAA,EACAuvE,YAAA,IAEAE,GAAA,gBACAnsC,GAAA,MACAtjC,IAAA,EACA0vE,YAAA,IAEApsC,GAAA,KACAtjC,IAAA,EACA0vE,YAAA,IAEApsC,GAAA,MACAtjC,IAAA,EACA0vE,WAAA,GACG,gBACHpsC,GAAA,MACAtjC,IAAA,EACA0vE,WAAA,IAEApsC,GAAA,MACAtjC,IAAA,EACA0vE,YAAA,EACAC,QAAA,SAAAC,EAAAlrC,GACAkrC,EAAAlrC,EAAA,GAAAkrC,EAAAlrC,EAAA,GAAAkrC,EAAAlrC,EAAA,MAGApB,GAAA,MACAtjC,IAAA,EACA0vE,YAAA,EACAC,QAAA,SAAAC,EAAAlrC,GACAkrC,EAAAlrC,EAAA,GAAAkrC,EAAAlrC,EAAA,GAAAkrC,EAAAlrC,EAAA,MAGApB,GAAA,MACAtjC,IAAA,EACA0vE,YAAA,EACAC,QAAA,SAAAC,EAAAlrC,GACAkrC,EAAAlrC,EAAA,GAAAkrC,EAAAlrC,EAAA,GAAAkrC,EAAAlrC,EAAA,KAEG,MACHpB,GAAA,MACAtjC,IAAA,EACA0vE,WAAA,EACAC,QAAA,SAAAC,EAAAlrC,GACAkrC,EAAAlrC,EAAA,IAAAkrC,EAAAlrC,EAAA,MAGApB,GAAA,KACAtjC,IAAA,EACA0vE,YAAA,GACG,WACHpsC,GAAA,OACAtjC,IAAA,EACA0vE,YAAA,GACG,MACHpsC,GAAA,MACAtjC,IAAA,EACA0vE,YAAA,IAEApsC,GAAA,MACAtjC,IAAA,EACA0vE,WAAA,IAEApsC,GAAA,SACAtjC,IAAA,EACA0vE,YAAA,IAEApsC,GAAA,SACAtjC,IAAA,EACA0vE,WAAA,IAEApsC,GAAA,MACAtjC,IAAA,EACA0vE,YAAA,EACAC,QAAA,SAAAC,EAAAlrC,GACAkrC,EAAAlrC,EAAA,GAAAkrC,EAAAlrC,EAAA,GAAAkrC,EAAAlrC,EAAA,KAEG,MACHpB,GAAA,OACAtjC,IAAA,EACA0vE,WAAA,IAEApsC,GAAA,MACAtjC,IAAA,EACA0vE,WAAA,IAEApsC,GAAA,OACAtjC,IAAA,EACA0vE,WAAA,IAEApsC,GAAA,QACAtjC,IAAA,EACA0vE,WAAA,IAEApsC,GAAA,OACAtjC,IAAA,EACA0vE,YAAA,GACG,gBACHpsC,GAAA,QACAtjC,IAAA,EACAuvE,YAAA,IAEAjsC,GAAA,OACAtjC,IAAA,GACAuvE,YAAA,IAEAjsC,GAAA,SACAtjC,IAAA,EACAuvE,YAAA,IAEAjsC,GAAA,QACAtjC,IAAA,GACAuvE,YAAA,IAEA,SAAAP,EAAAa,EAAAC,EAAAC,GACA50E,KAAAwI,MAAAksE,EAAAxjD,WACAlxB,KAAA20E,aACA30E,KAAA40E,wBAklBA,OAhlBAf,EAAA12E,WACAkiC,MAAA,WACA,IAAAs1C,EAAA30E,KAAA20E,WACAE,EAAA,IAAAjB,EACA5zE,KAAA60E,MACA,IAAAC,EAAA90E,KAAA+0E,cACAC,EAAAh1E,KAAAi1E,WAAAH,EAAAtnB,QACA0nB,EAAAl1E,KAAAi1E,WAAAD,EAAAxnB,QACA2nB,EAAAn1E,KAAAi1E,WAAAC,EAAA1nB,QACA4nB,EAAAp1E,KAAAi1E,WAAAE,EAAA3nB,QACA6nB,EAAAr1E,KAAAs1E,UAAAJ,EAAAh0E,IAAApE,IAAA,IACAixD,EAAA/tD,KAAAu1E,WAAAhC,EAAA8B,EAAAR,EAAAW,SACAX,EAAAC,SAAA5zE,IACA2zE,EAAAxuB,MAAArmD,KAAAy1E,eAAAT,EAAA9zE,KACA2zE,EAAAW,QAAAx1E,KAAA01E,iBAAAP,EAAAj0E,KACA2zE,EAAA9mB,UACA8mB,EAAAO,kBAAAl0E,IACAlB,KAAA21E,iBAAAd,EAAA9mB,SACA8mB,EAAAe,UAAA7nB,EAAA8nB,QAAA,OACA,IAAAC,EAAA/nB,EAAAgoB,UAAA,eACAC,EAAAh2E,KAAAi1E,WAAAa,GAAA50E,IACA+0E,EAAAloB,EAAAgoB,UAAA,cACAE,IACAtB,EAAAsB,cAEA,IAMAC,EAAAr1E,EANAs1E,EAAApoB,EAAAgoB,UAAA,YAOA,GANAI,IACAxB,EAAAyB,OAAA53E,KAAAiJ,IAAA0uE,EAAA,GAAAA,EAAA,IACAxB,EAAA0B,QAAA73E,KAAAqG,IAAAsxE,EAAA,GAAAA,EAAA,IACAxB,EAAA2B,cAAA,GAGAzB,EAAAe,UAAA,CAEA,IADA,IAAAW,EAAAv2E,KAAAi1E,WAAAlnB,EAAAgoB,UAAA,YAAA70E,IACAlF,EAAA,EAAA0e,EAAA67D,EAAAj5C,MAAgDthC,EAAA0e,IAAQ1e,EAAA,CACxD,IAAAw6E,EAAAD,EAAAz5E,IAAAd,GACAy6E,EAAAz2E,KAAAu1E,WAAAhC,EAAAvzE,KAAAs1E,UAAAkB,GAAA3B,EAAAW,SACAx1E,KAAA21E,iBAAAc,GACA5B,EAAA6B,QAAA5yE,KAAA2yE,GAEA51E,EAAA,KACAq1E,EAAAl2E,KAAA22E,cAAA5oB,EAAAgoB,UAAA,WAAAC,EAAA14C,MAAAu3C,EAAAW,SAAA,GACAX,EAAA+B,SAAA52E,KAAA62E,cAAA9oB,EAAAgoB,UAAA,YAAAC,EAAA14C,YAEA44C,EAAAl2E,KAAA22E,cAAA5oB,EAAAgoB,UAAA,WAAAC,EAAA14C,MAAAu3C,EAAAW,SAAA,GACA30E,EAAAb,KAAA82E,cAAA/oB,EAAAgoB,UAAA,YAAApB,EAAAE,EAAAW,QAAAU,WAEArB,EAAAqB,UACArB,EAAAh0E,WACA,IAAAk2E,EAAA/2E,KAAAg3E,kBACAC,YAAAjB,EACAkB,eAAAnpB,EAAAopB,YAAAC,WACAhC,kBAAAl0E,IACA01E,SAAA/B,EAAA+B,SACAF,QAAA7B,EAAA6B,QACAS,YAAAppB,EAAAopB,cAKA,OAHAtC,EAAAoC,YAAAF,EAAAE,YACApC,EAAAwC,MAAAN,EAAAM,MACAxC,EAAAyC,OAAAP,EAAAO,OACAzC,GAEAE,YAAA,WAIA,IAHA,IAAAvsE,EAAAxI,KAAAwI,MACA4hC,EAAA5hC,EAAA9I,OACA7B,EAAA,EACAA,EAAAusC,GAAA,IAAA5hC,EAAA3K,MACAA,EAEA,GAAAA,GAAAusC,EACA,UAAAhY,EAAAvgB,YAAA,sBAEA,IAAAhU,KACA,EAAAu0B,EAAAnhB,MAAA,uBACAzI,IAAAzC,SAAAlI,GACAmC,KAAAwI,SAEA,IAAA+uE,EAAA/uE,EAAA,GACAgvE,EAAAhvE,EAAA,GACAivE,EAAAjvE,EAAA,GACAkvE,EAAAlvE,EAAA,GAEA,OACAtH,IAFA,IAAAyyE,EAAA4D,EAAAC,EAAAC,EAAAC,GAGAlqB,OAAAiqB,IAGAnC,UAAA,SAAAvpD,GACA,IAAAjlB,EAAA,EACA,SAAA6wE,IACA,IAAAh5E,EAAAotB,EAAAjlB,KACA,YAAAnI,EAsBA,WACA,IAAAiF,EAAA,GAEA2oB,GAAA,+DACA7sB,EAAAqsB,EAAArsB,OACA,KAAAoH,EAAApH,GAAA,CACA,IAAAyC,EAAA4pB,EAAAjlB,KACA6T,EAAAxY,GAAA,EACAyY,EAAA,GAAAzY,EACA,GAPA,KAOAwY,EACA,MAGA,GADA/W,GAAA2oB,EAAA5R,GAVA,KAWAC,EACA,MAEAhX,GAAA2oB,EAAA3R,GAEA,OAAAg9D,WAAAh0E,GAvCAi0E,GACS,KAAAl5E,EAETA,IADAA,EAAAotB,EAAAjlB,OACA,GAAAilB,EAAAjlB,MAAA,QAES,KAAAnI,EAITA,GADAA,GADAA,GADAA,EAAAotB,EAAAjlB,OACA,EAAAilB,EAAAjlB,OACA,EAAAilB,EAAAjlB,OACA,EAAAilB,EAAAjlB,KAESnI,GAAA,IAAAA,GAAA,IACTA,EAAA,IACSA,GAAA,KAAAA,GAAA,IACT,KAAAA,EAAA,KAAAotB,EAAAjlB,KAAA,IACSnI,GAAA,KAAAA,GAAA,KACT,KAAAA,EAAA,KAAAotB,EAAAjlB,KAAA,MAEA,EAAAsrB,EAAA1iB,MAAA,yBAAA/Q,EAAA,4BACAL,KAsBA,IAAAw5E,KACA3uC,KACAriC,EAAA,EAEA,IADA,IAAApC,EAAAqnB,EAAArsB,OACAoH,EAAApC,GAAA,CACA,IAAAvC,EAAA4pB,EAAAjlB,GACA3E,GAAA,IACA,KAAAA,IACAA,KAAA,EAAA4pB,IAAAjlB,IAEAqiC,EAAArlC,MAAA3B,EAAA21E,IACAA,OACAhxE,GAEAgxE,EAAAh0E,KAAA6zE,KAGA,OAAAxuC,GAEA8rC,WAAA,SAAAnuE,GACA,IAKA9K,EAAA0e,EALAq9D,EAAA,IAAAtE,EACAjrE,EAAAxI,KAAAwI,MACA80B,EAAA90B,EAAA1B,MAAA,EAAA0B,EAAA1B,KACAkxE,KACAtzE,EAAAoC,EAEA,OAAAw2B,EAAA,CACA,IAAA26C,EAAAzvE,EAAA1B,KACAqkC,EAAArkC,GAAAw2B,EAAA,GAAA26C,EAAA,EACA,IAAAj8E,EAAA,EAAA0e,EAAA4iB,EAAA,EAAmCthC,EAAA0e,IAAQ1e,EAAA,CAE3C,IADA,IAAA6B,EAAA,EACAoF,EAAA,EAAyBA,EAAAg1E,IAAgBh1E,EACzCpF,IAAA,EACAA,GAAA2K,EAAA1B,KAEAkxE,EAAAl0E,KAAAqnC,EAAAttC,GAEA6G,EAAAszE,EAAA16C,GAEA,IAAAthC,EAAA,EAAA0e,EAAAs9D,EAAAt4E,OAAA,EAA0C1D,EAAA0e,IAAQ1e,EAAA,CAClD,IAAAk8E,EAAAF,EAAAh8E,GACAm8E,EAAAH,EAAAh8E,EAAA,GACA+7E,EAAAzM,IAAA9iE,EAAAzC,SAAAmyE,EAAAC,IAEA,OACAj3E,IAAA62E,EACAvqB,OAAA9oD,IAGA+wE,eAAA,SAAAlsC,GAEA,IADA,IAAA8c,KACArqD,EAAA,EAAA0e,EAAA6uB,EAAAjM,MAAuCthC,EAAA0e,IAAQ1e,EAAA,CAC/C,IAAAO,EAAAgtC,EAAAzsC,IAAAd,GACAqqD,EAAAviD,MAAA,EAAAsuB,EAAA3gB,eAAAlV,IAEA,OAAA8pD,GAEAqvB,iBAAA,SAAAnsC,GAEA,IADA,IAAAisC,EAAA,IAAA9B,EACA13E,EAAA,EAAA0e,EAAA6uB,EAAAjM,MAAuCthC,EAAA0e,IAAQ1e,EAAA,CAC/C,IAAAyF,EAAA8nC,EAAAzsC,IAAAd,GACAw5E,EAAAlK,KAAA,EAAAl5C,EAAA3gB,eAAAhQ,IAEA,OAAA+zE,GAEAD,WAAA,SAAA6C,EAAArsD,EAAAypD,GAEA,IADA,IAAA6C,EAAA,IAAAD,EAAA5C,GACAx5E,EAAA,EAAA0e,EAAAqR,EAAArsB,OAAuC1D,EAAA0e,IAAQ1e,EAAA,CAC/C,IAAAs8E,EAAAvsD,EAAA/vB,GACAyb,EAAA6gE,EAAA,GACA35E,EAAA25E,EAAA,GACAD,EAAAE,SAAA9gE,EAAA9Y,GAEA,OAAA05E,GAEAG,gBAAA,SAAAptC,EAAA3pC,EAAAy1E,EAAA9B,GACA,IAAA3zE,GAAA2pC,EAAAqtC,UA1aA,GA2aA,SAKA,IAHA,IAAAC,EAAAttC,EAAAstC,UACAjE,EAAArpC,EAAAqpC,MACA/0E,EAAA+B,EAAA/B,OACAuD,EAAA,EAAqBA,EAAAvD,GAAY,CACjC,IAAAf,EAAA8C,EAAAwB,KACA01E,EAAA,KACA,QAAAh6E,EAAA,CACA,IAAAk7B,EAAAp4B,EAAAwB,KACA,IAAA42B,GACAp4B,EAAAwB,EAAA,OACAxB,EAAAwB,EAAA,MACAy1E,EAAA,GAEAC,EAAArE,EAAAz6C,QAES,QAAAl7B,EACT81E,EAAAiE,IAAAj3E,EAAAwB,IAAA,GAAAxB,EAAAwB,EAAA,YACAA,GAAA,EACAy1E,SACS,QAAA/5E,EAAA,CACT,GAAA+5E,GAAA,IACAA,GAAA,EACA14E,KAAA40E,qBAEA,OADAxpC,EAAAwtC,KAAAnE,EAAAzzE,MAAA03E,IAAA,IACA,EAGAC,EAAA1E,EAAAt1E,QACS,GAAAA,GAAA,IAAAA,GAAA,IACT81E,EAAAiE,GAAA/5E,EAAA,IACA+5E,SACS,GAAA/5E,GAAA,KAAAA,GAAA,IACT81E,EAAAiE,GAAA/5E,EAAA,KAAAA,EAAA,QAAA8C,EAAAwB,GAAA,MAAAtE,EAAA,QAAA8C,EAAAwB,GAAA,IACAA,IACAy1E,SACS,SAAA/5E,EACT81E,EAAAiE,IAAAj3E,EAAAwB,IAAA,GAAAxB,EAAAwB,EAAA,OAAAxB,EAAAwB,EAAA,MAAAxB,EAAAwB,EAAA,UACAA,GAAA,EACAy1E,SACS,QAAA/5E,GAAA,KAAAA,EACTysC,EAAAmE,OAAAmpC,GAAA,EACAz1E,GAAAmoC,EAAAmE,MAAA,KACAmpC,GAAA,EACAC,EAAA1E,EAAAt1E,OACS,SAAAA,GAAA,KAAAA,EAAA,CACT,IAAAy4E,EAMA,KAJAA,EADA,KAAAz4E,EACAu4E,EAEA9B,GAKA,OAFAuD,EAAA1E,EAAAt1E,IACA,EAAAyzB,EAAA1iB,MAAA,0BAAAipE,EAAAxwC,KACA,EAEA,IAAA0wC,EAAA,MACAzB,EAAA95C,MAAA,KACAu7C,EAAA,IACWzB,EAAA95C,MAAA,QACXu7C,EAAA,MAEA,IAAAC,EAAArE,IAAAiE,GAAAG,EACA,GAAAC,EAAA,GAAAA,GAAA1B,EAAA95C,OAAAx+B,MAAAg6E,GAGA,OAFAH,EAAA1E,EAAAt1E,IACA,EAAAyzB,EAAA1iB,MAAA,+BAAAipE,EAAAxwC,KACA,EAKA,GAHAiD,EAAAstC,YACAttC,EAAAqtC,aACAz4E,KAAAw4E,gBAAAptC,EAAAgsC,EAAAt6E,IAAAg8E,GAAA5B,EAAA9B,GAEA,SAEAhqC,EAAAqtC,YACAC,EAAAttC,EAAAstC,UACA,SACS,QAAA/5E,EAET,OADAysC,EAAAstC,aACA,EAEAC,EAAA1E,EAAAt1E,GAEA,GAAAg6E,EAAA,CAIA,GAHAA,EAAAxE,OACA/oC,EAAAmE,OAAAmpC,GAAA,GAEA,QAAAC,IACAvtC,EAAAipC,YAAAqE,EAAAC,EAAA9zE,IAEA,OADA,EAAAutB,EAAA1iB,MAAA,6BAAAipE,EAAAxwC,GAAA,aAAsFuwC,EAAA,eAAAC,EAAA9zE,MACtF,EAGAumC,EAAA2tC,oBAAAJ,EAAAzE,gBACA9oC,EAAA2tC,oBAAA,GACAL,GAAAC,EAAA9zE,MACA,GAAA8zE,EAAAxE,KACAuE,GAAA,EACaA,EAAA,IACb,EAAAtmD,EAAA1iB,MAAA,wDAEAgpE,EAAA,GAAAjE,EAAAiE,EAAA,QACAttC,EAAAhyB,MAAAq7D,EAAAiE,EAAA,KAGA,eAAAC,GACA,YAAAA,GACAA,EAAAnE,QAAAC,EAAAiE,GAEAA,GAAAC,EAAApE,YACWoE,EAAAzE,cACXwE,EAAA,EACWC,EAAAvE,YACXsE,EAAA,EACAttC,EAAAipC,YAAA,GACWsE,EAAAtE,aACXqE,EAAA,EACAttC,EAAAipC,YAAA,EACAjpC,EAAA2tC,oBAAA,IAKA,OADA3tC,EAAAstC,aACA,GAEA1B,iBAAA,SAAAlrD,GAWA,IAVA,IAAAmrD,EAAAnrD,EAAAmrD,YACAC,EAAAprD,EAAAorD,eACA9B,EAAAtpD,EAAAspD,gBACAwB,EAAA9qD,EAAA8qD,SACAF,EAAA5qD,EAAA4qD,QACAS,EAAArrD,EAAAqrD,YAEAE,KACAC,KACAh6C,EAAA25C,EAAA35C,MACAthC,EAAA,EAAqBA,EAAAshC,EAAWthC,IAAA,CAChC,IAAAg9E,EAAA/B,EAAAn6E,IAAAd,GACAovC,GACAqtC,UAAA,EACAC,UAAA,EACAjE,SACAJ,YAAA,EACA9kC,MAAA,EACAwpC,oBAAA,EACAH,KAAA,KACAx/D,MAAA,MAEA6/D,GAAA,EACAC,EAAA,KACAC,EAAAhC,EACA,GAAAP,GAAAF,EAAAh3E,OAAA,CACA,IAAA05E,EAAAxC,EAAAyC,WAAAr9E,IACA,IAAAo9E,KACA,EAAAhnD,EAAA1iB,MAAA,oCACAupE,GAAA,GAEAG,GAAA1C,EAAAh3E,UACA,EAAA0yB,EAAA1iB,MAAA,qCACAupE,GAAA,GAEAA,IAEAC,GADAC,EAAAzC,EAAA0C,GAAAjC,aACAC,iBAESF,IACTgC,EAAAhC,GAKA,GAHA+B,IACAA,EAAAj5E,KAAAw4E,gBAAAptC,EAAA4tC,EAAAE,EAAA9D,IAEA,OAAAhqC,EAAAhyB,MAAA,CACA,IAAAkgE,EAAAH,EAAApD,UAAA,iBACAuB,EAAAt7E,GAAAs9E,EAAAluC,EAAAhyB,UACS,CACT,IAAAmgE,EAAAJ,EAAApD,UAAA,iBACAuB,EAAAt7E,GAAAu9E,EAEA,OAAAnuC,EAAAwtC,OACAvB,EAAAr7E,GAAAovC,EAAAwtC,MAEAK,GACAhC,EAAArrE,IAAA5P,EAAA,IAAA4D,YAAA,MAGA,OACAq3E,cACAI,QACAC,WAIAkC,uBAAA,SAAAC,GACA,IAAAtC,EAAAn3E,KAAAu1E,WAAAjC,KAAAmG,EAAAjE,SACAiE,EAAAlB,SAAA,UACAkB,EAAAtC,eAEAxB,iBAAA,SAAA8D,GACA,GAAAA,EAAA5D,QAAA,YAIA,IAAA6D,EAAAD,EAAA1D,UAAA,WACA,GAAAv4E,MAAAC,QAAAi8E,IAAA,IAAAA,EAAAh6E,OAAA,CAIA,IAAAkC,EAAA83E,EAAA,GACA77E,EAAA67E,EAAA,GACA,OAAA93E,GAAA/D,GAAAmC,KAAAwI,MAAA9I,OACAM,KAAAw5E,uBAAAC,OADA,CAIA,IAAAE,EAAA97E,EAAA+D,EACAg4E,EAAA55E,KAAAwI,MAAAzC,SAAAlI,EAAA87E,GACA5tD,EAAA/rB,KAAAs1E,UAAAsE,GACAzC,EAAAn3E,KAAAu1E,WAAAjC,EAAAvnD,EAAA0tD,EAAAjE,SAEA,GADAiE,EAAAtC,cACAA,EAAApB,UAAA,UAGA,IAAA8D,EAAA1C,EAAApB,UAAA,SACA+D,EAAAj8E,EAAAg8E,EACA,OAAAA,GAAAC,GAAA95E,KAAAwI,MAAA9I,OACAM,KAAAw5E,uBAAAC,OADA,CAIA,IAAArC,EAAAp3E,KAAAi1E,WAAA6E,GACA3C,EAAAC,aAAAl2E,YAxBAu4E,EAAAM,aAAA,gBALA/5E,KAAAw5E,uBAAAC,IA+BA9C,cAAA,SAAA7vE,EAAApH,EAAA81E,EAAAwE,GACA,OAAAlzE,EACA,WAAA0sE,GAAA,EAAAyG,EAAAC,UAAAnG,EAAAoG,iBACO,OAAArzE,EACP,WAAA0sE,GAAA,EAAAyG,EAAAG,OAAArG,EAAAsG,eACO,OAAAvzE,EACP,WAAA0sE,GAAA,EAAAyG,EAAAK,cAAAvG,EAAAwG,qBAEA,IAIApyC,EAAA7K,EAAAthC,EAJAwM,EAAAxI,KAAAwI,MACA/D,EAAAqC,EACA0zE,EAAAhyE,EAAA1B,KACAovE,GAAA,WAGA,OADAx2E,GAAA,EACA86E,GACA,OACA,IAAAx+E,EAAA,EAAqBA,EAAA0D,EAAY1D,IACjCmsC,EAAA3/B,EAAA1B,MAAA,EAAA0B,EAAA1B,KACAovE,EAAApyE,KAAAk2E,EAAA7xC,EAAAqtC,EAAA14E,IAAAqrC,IAEA,MACA,OACA,KAAA+tC,EAAAx2E,WAGA,IAFAyoC,EAAA3/B,EAAA1B,MAAA,EAAA0B,EAAA1B,KACAw2B,EAAA90B,EAAA1B,KACA9K,EAAA,EAAuBA,GAAAshC,EAAYthC,IACnCk6E,EAAApyE,KAAAk2E,EAAA7xC,IAAAqtC,EAAA14E,IAAAqrC,MAGA,MACA,OACA,KAAA+tC,EAAAx2E,WAGA,IAFAyoC,EAAA3/B,EAAA1B,MAAA,EAAA0B,EAAA1B,KACAw2B,EAAA90B,EAAA1B,MAAA,EAAA0B,EAAA1B,KACA9K,EAAA,EAAuBA,GAAAshC,EAAYthC,IACnCk6E,EAAApyE,KAAAk2E,EAAA7xC,IAAAqtC,EAAA14E,IAAAqrC,MAGA,MACA,QACA,UAAA/V,EAAAvgB,YAAA,0BAEA,IAAAnN,EAAAoC,EACA2zE,EAAAjyE,EAAAzC,SAAAtB,EAAAC,GACA,WAAA8uE,GAAA,EAAAgH,EAAAtE,EAAAuE,IAEA3D,cAAA,SAAAhwE,EAAA6tE,EAAAa,EAAAU,GACA,IAGAsE,EAAAx+E,EAAA0e,EAHA7Z,EAAAnE,OAAAmb,OAAA,MACArP,EAAAxI,KAAAwI,MACAkyE,GAAA,EAEAD,EAAA,KASA,OAAA3zE,GAAA,IAAAA,EAAA,CACA4zE,GAAA,EACAF,EAAA1zE,EACA,IAAA6zE,EAAA7zE,EAAAktE,EAAAtsC,eAAAssC,EAAAnsC,iBACA,IAAA7rC,EAAA,EAAA0e,EAAAw7D,EAAAx2E,OAAwC1D,EAAA0e,EAAQ1e,IAAA,CAChD,IAAAutC,EAAAoxC,EAAAp4E,QAAA2zE,EAAAl6E,KACA,IAAAutC,IACA1oC,EAAA0oC,GAAAvtC,QAGO,CACP,IAAA4+E,EAAA9zE,EAEA,YADA0zE,EAAAhyE,EAAA1B,OAEA,OACA,IAAA+zE,EAAAryE,EAAA1B,KACA,IAAA9K,EAAA,EAAuBA,GAAA6+E,EAAkB7+E,IACzC6E,EAAA2H,EAAA1B,MAAA9K,EAEA,MACA,OACA,IAAA8+E,EAAAtyE,EAAA1B,KACAi0E,EAAA,EACA,IAAA/+E,EAAA,EAAuBA,EAAA8+E,EAAiB9+E,IAGxC,IAFA,IAAAyI,EAAA+D,EAAA1B,KACAmxB,EAAAzvB,EAAA1B,KACA7D,EAAAwB,EAAiCxB,GAAAwB,EAAAwzB,EAAmBh1B,IACpDpC,EAAAoC,GAAA83E,IAGA,MACA,QACA,UAAA3oD,EAAAvgB,YAAA,4BAAA2oE,EAAA,WAEA,IAAA1nB,EAAAhsD,EACA,IAAA0zE,IACAhyE,EAAAoyE,IAAA,IA5CA,WACA,IAAAI,EAAAxyE,EAAA1B,KACA,IAAA9K,EAAA,EAAmBA,EAAAg/E,EAAsBh/E,IAAA,CACzC,IAAA6P,EAAArD,EAAA1B,KACAm0E,GAAAzyE,EAAA1B,MAAA,QAAA0B,EAAA1B,MACAjG,EAAAgL,GAAAqqE,EAAA3zE,QAAAizE,EAAA14E,IAAAm+E,KAwCAC,IAEAT,EAAAjyE,EAAAzC,SAAA60E,EAAA9nB,GAGA,WAAAqoB,EAAAT,EADAF,GAAA,IACA35E,EAAA45E,IAEA5D,cAAA,SAAA/vE,EAAApH,GACA,IAIA03B,EACAp7B,EALAyI,EAAAqC,EACA0B,EAAAxI,KAAAwI,MACAgyE,EAAAhyE,EAAA1B,KACA8vE,KAGAwE,GAAA,EACA,OAAAZ,GACA,OACA,IAAAx+E,EAAA,EAAqBA,EAAA0D,IAAY1D,EAAA,CACjC,IAAAmsC,EAAA3/B,EAAA1B,KACA8vE,EAAA9yE,KAAAqkC,GAEA/Q,EAAA5uB,EAAAzC,SAAAtB,EAAAqC,GACA,MACA,OACA,IAAAg0E,EAAAtyE,EAAA1B,MAAA,EAAA0B,EAAA1B,KACA,IAAA9K,EAAA,EAAqBA,EAAA8+E,IAAiB9+E,EAAA,CACtC,IAAA4Z,EAAApN,EAAA1B,MAAA,EAAA0B,EAAA1B,KACA,IAAA9K,GAAA,IAAA4Z,KACA,EAAAwc,EAAA1iB,MAAA,mFACA0rE,GAAA,EACAxlE,EAAA,GAIA,IAFA,IAAAwjE,EAAA5wE,EAAA1B,KACA0iC,EAAAhhC,EAAA1B,IAAA,EAAA0B,EAAA1B,EAAA,GACA7D,EAAA2S,EAA+B3S,EAAAumC,IAAUvmC,EACzC2zE,EAAA9yE,KAAAs1E,GAGAtyE,GAAA,EACAswB,EAAA5uB,EAAAzC,SAAAtB,EAAAqC,GACAs0E,IACAhkD,EAAA,GAAAA,EAAA,MAEA,MACA,QACA,UAAAhF,EAAAvgB,YAAA,kCAAA2oE,EAAA,MAEA,GAAA5D,EAAAl3E,WACA,UAAA0yB,EAAAvgB,YAAA,qCAEA,WAAAwpE,EAAAzE,EAAAx/C,KAGAy8C,EAvyBA,GAyyBAD,EAAA,WAcA,OAbA,WACA5zE,KAAA80E,OAAA,KACA90E,KAAAqmD,SACArmD,KAAA+tD,QAAA,KACA/tD,KAAAw1E,QAAA,IAAA9B,EACA1zE,KAAAo1E,gBAAA,KACAp1E,KAAAa,SAAA,KACAb,KAAAk2E,QAAA,KACAl2E,KAAAi3E,YAAA,KACAj3E,KAAA02E,WACA12E,KAAA42E,SAAA,KACA52E,KAAA41E,WAAA,GAZA,GAgBAjC,EAAA,WAOA,OANA,SAAA4D,EAAAC,EAAAC,EAAAC,GACA13E,KAAAu3E,QACAv3E,KAAAw3E,QACAx3E,KAAAy3E,UACAz3E,KAAA03E,WALA,GASAhE,EAAA,WACA,SAAAA,IACA1zE,KAAAw1E,WAmBA,OAjBA9B,EAAAv2E,WACAL,IAAA,SAAAysC,GACA,OAAAA,GAAA,GAAAA,GAAA,IACAuqC,EAAAvqC,GAEAA,EAAA,KAAAvpC,KAAAw1E,QAAA91E,OACAM,KAAAw1E,QAAAjsC,EAAA,KAEAuqC,EAAA,IAEAxI,IAAA,SAAA3sE,GACAqB,KAAAw1E,QAAA1xE,KAAAnF,IAEA2+B,YACA,OAAAt9B,KAAAw1E,QAAA91E,SAGAg0E,EArBA,GAuBAD,EAAA,WACA,SAAAA,IACAzzE,KAAAs7E,WACAt7E,KAAAN,OAAA,EAkBA,OAhBA+zE,EAAAt2E,WACAmuE,IAAA,SAAA7pE,GACAzB,KAAAN,QAAA+B,EAAA/B,OACAM,KAAAs7E,QAAAx3E,KAAArC,IAEAmK,IAAA,SAAA29B,EAAA9nC,GACAzB,KAAAN,QAAA+B,EAAA/B,OAAAM,KAAAs7E,QAAA/xC,GAAA7pC,OACAM,KAAAs7E,QAAA/xC,GAAA9nC,GAEA3E,IAAA,SAAAysC,GACA,OAAAvpC,KAAAs7E,QAAA/xC,IAEAjM,YACA,OAAAt9B,KAAAs7E,QAAA57E,SAGA+zE,EArBA,GAuBA8H,EAAA,WACA,SAAAA,EAAAC,EAAAhG,GACAx1E,KAAAy7E,aAAAD,EAAAC,aACAz7E,KAAA07E,aAAAF,EAAAE,aACA17E,KAAA27E,SAAAH,EAAAG,SACA37E,KAAA47E,MAAAJ,EAAAI,MACA57E,KAAA67E,QAAAL,EAAAK,QACA77E,KAAA87E,MAAAN,EAAAM,MACA97E,KAAAw1E,UACAx1E,KAAAqsB,OAAA3vB,OAAAmb,OAAA,MAoEA,OAlEA0jE,EAAAp+E,WACAo7E,SAAA,SAAA9gE,EAAA9Y,GACA,KAAA8Y,KAAAzX,KAAAy7E,cACA,SAEA,IAAAM,EAAAp9E,EAAAe,OACA,OAAAq8E,EACA,SAEA,QAAA//E,EAAA,EAAqBA,EAAA+/E,EAAiB//E,IACtC,GAAA8C,MAAAH,EAAA3C,IAEA,OADA,EAAAo2B,EAAA1iB,MAAA,2BAAA/Q,EAAA,cAAA8Y,EAAA,OACA,EAGA,IAAAjW,EAAAxB,KAAA47E,MAAAnkE,GAKA,MAJA,QAAAjW,GAAA,QAAAA,GAAA,WAAAA,IACA7C,IAAA,IAEAqB,KAAAqsB,OAAA5U,GAAA9Y,GACA,GAEAq9E,UAAA,SAAAz/E,EAAAoC,GACA,KAAApC,KAAAyD,KAAA07E,cACA,UAAAtpD,EAAAvgB,YAAA,4BAAAtV,EAAA,KAEAyD,KAAAqsB,OAAArsB,KAAA07E,aAAAn/E,IAAAoC,GAEAk3E,QAAA,SAAAt5E,GACA,OAAAyD,KAAA07E,aAAAn/E,KAAAyD,KAAAqsB,QAEA0pD,UAAA,SAAAx5E,GACA,KAAAA,KAAAyD,KAAA07E,cACA,UAAAtpD,EAAAvgB,YAAA,2BAAAtV,EAAA,KAEA,IAAAkb,EAAAzX,KAAA07E,aAAAn/E,GACA,OAAAkb,KAAAzX,KAAAqsB,OAGArsB,KAAAqsB,OAAA5U,GAFAzX,KAAA27E,SAAAlkE,IAIAsiE,aAAA,SAAAx9E,UACAyD,KAAAqsB,OAAArsB,KAAA07E,aAAAn/E,MAGAg/E,EAAAU,aAAA,SAAAC,GASA,IARA,IAAAV,GACAC,gBACAC,gBACAC,YACAC,SACAC,WACAC,UAEA9/E,EAAA,EAAA0e,EAAAwhE,EAAAx8E,OAAuC1D,EAAA0e,IAAQ1e,EAAA,CAC/C,IAAA0vD,EAAAwwB,EAAAlgF,GACAyb,EAAAja,MAAAC,QAAAiuD,EAAA,KAAAA,EAAA,UAAAA,EAAA,MAAAA,EAAA,GACA8vB,EAAAC,aAAAhkE,GAAAi0C,EAAA,GACA8vB,EAAAE,aAAAhwB,EAAA,IAAAj0C,EACA+jE,EAAAI,MAAAnkE,GAAAi0C,EAAA,GACA8vB,EAAAG,SAAAlkE,GAAAi0C,EAAA,GACA8vB,EAAAK,QAAApkE,GAAAja,MAAAC,QAAAiuD,EAAA,IAAAA,EAAA,IAAAA,EAAA,IACA8vB,EAAAM,MAAAh4E,KAAA2T,GAEA,OAAA+jE,GAEAD,EA7EA,GA+EAhI,EAAA,WACA,IAAA2I,KAAA,koCACAV,EAAA,KACA,SAAAjI,EAAAiC,GACA,OAAAgG,IACAA,EAAAD,EAAAU,aAAAC,IAEAX,EAAAp/E,KAAA6D,KAAAw7E,EAAAhG,GACAx1E,KAAAm3E,YAAA,KAGA,OADA5D,EAAAp2E,UAAAT,OAAAmb,OAAA0jE,EAAAp+E,WACAo2E,EAXA,GAaAD,EAAA,WACA,IAAA4I,IAAA,ojBACAV,EAAA,KACA,SAAAlI,EAAAkC,GACA,OAAAgG,IACAA,EAAAD,EAAAU,aAAAC,IAEAX,EAAAp/E,KAAA6D,KAAAw7E,EAAAhG,GACAx1E,KAAAo3E,WAAA,KAGA,OADA9D,EAAAn2E,UAAAT,OAAAmb,OAAA0jE,EAAAp+E,WACAm2E,EAXA,GAaA2G,GACAC,UAAA,EACAE,OAAA,EACAE,cAAA,GAEA9G,EAAA,WAOA,OANA,SAAAkH,EAAAF,EAAAtE,EAAAuE,GACAz6E,KAAA06E,aACA16E,KAAAw6E,SACAx6E,KAAAk2E,UACAl2E,KAAAy6E,OALA,GASAU,EAAA,WAOA,OANA,SAAAT,EAAAF,EAAA35E,EAAA45E,GACAz6E,KAAA06E,aACA16E,KAAAw6E,SACAx6E,KAAAa,WACAb,KAAAy6E,OALA,GASAY,EAAA,WACA,SAAAA,EAAAzE,EAAA6D,GACAz6E,KAAA42E,WACA52E,KAAAy6E,MAUA,OARAY,EAAAl+E,WACAk8E,WAAA,SAAA8C,GACA,OAAAA,EAAA,GAAAA,GAAAn8E,KAAA42E,SAAAl3E,QACA,EAEAM,KAAA42E,SAAAuF,KAGAd,EAbA,GAeAe,EAAA,WACA,SAAAA,IACAp8E,KAAAg4E,QAAAt7E,OAAAmb,OAAA,MA0CA,OAxCAukE,EAAAj/E,WACAk/E,WAAA,SAAA5kE,GACA,OAAAA,KAAAzX,KAAAg4E,SAEAsE,MAAA,SAAA7kE,EAAA8kE,GACA,GAAA9kE,KAAAzX,KAAAg4E,QACA,UAAA5lD,EAAAvgB,YAAA,gCAAA4F,GAEAzX,KAAAg4E,QAAAvgE,GAAA8kE,GAEA1+E,OAAA,SAAAc,GACA,QAAA8Y,KAAAzX,KAAAg4E,QACAh4E,KAAAg4E,QAAAvgE,IAAA9Y,GAGA69E,iBAAA,SAAA/kE,EAAA4U,EAAA29C,GACA,KAAAvyD,KAAAzX,KAAAg4E,SACA,UAAA5lD,EAAAvgB,YAAA,4BAAA4F,GAKA,IAHA,IAAAhW,EAAAuoE,EAAAvoE,KACA8yC,EAAAv0C,KAAAg4E,QAAAvgE,GAEAzb,EAAA,EAAA0e,EAAA2R,EAAA3sB,OAAyC1D,EAAA0e,IAAQ1e,EAAA,CACjD,IAAAygF,EAFA,EAEAzgF,EAAAu4C,EACAmoC,EAAAD,EAAA,EACAE,EAAAF,EAAA,EACAG,EAAAH,EAAA,EACAI,EAAAJ,EAAA,EACA,QAAAh7E,EAAAg7E,IAAA,IAAAh7E,EAAAi7E,IAAA,IAAAj7E,EAAAk7E,IAAA,IAAAl7E,EAAAm7E,IAAA,IAAAn7E,EAAAo7E,GACA,UAAAzqD,EAAAvgB,YAAA,0CAEA,IAAAlT,EAAA0tB,EAAArwB,GACAyF,EAAAg7E,GAAA,GACAh7E,EAAAi7E,GAAA/9E,GAAA,OACA8C,EAAAk7E,GAAAh+E,GAAA,OACA8C,EAAAm7E,GAAAj+E,GAAA,MACA8C,EAAAo7E,GAAA,IAAAl+E,KAIAy9E,EA5CA,GA8CA/I,EAAA,WACA,SAAAA,EAAAwB,GACA70E,KAAA60E,MAoUA,OAlUAxB,EAAAl2E,WACA2/E,QAAA,WACA,IAAAjI,EAAA70E,KAAA60E,IACA7K,GACAvoE,QACA/B,OAAA,EACA4rE,IAAA,SAAA7pE,GACAzB,KAAAyB,KAAAzB,KAAAyB,KAAAmF,OAAAnF,GACAzB,KAAAN,OAAAM,KAAAyB,KAAA/B,SAGAo1E,EAAA90E,KAAA+8E,cAAAlI,EAAAC,QACA9K,EAAAsB,IAAAwJ,GACA,IAAAE,EAAAh1E,KAAAg9E,iBAAAnI,EAAAxuB,OAEA,GADA2jB,EAAAsB,IAAA0J,GACAH,EAAAe,WACAf,EAAA9mB,QAAA8nB,QAAA,eACA,IAAAl+D,EAAAk9D,EAAA9mB,QAAAgoB,UAAA,cACAlB,EAAA9mB,QAAAgsB,aAAA,cACA,QAAA/9E,EAAA,EAAA0e,EAAAm6D,EAAA6B,QAAAh3E,OAAkD1D,EAAA0e,EAAQ1e,IAAA,CAC1D,IAAAihF,EAAApI,EAAA6B,QAAA16E,GACAkkC,EAAAvoB,EAAA3W,MAAA,GACAi8E,EAAApH,QAAA,gBACA31C,EAAA9N,EAAArgB,KAAA8C,UAAAqrB,EAAA+8C,EAAAlH,UAAA,gBAEAkH,EAAAjB,UAAA,aAAA97C,IAIA,IAAAg9C,EAAAl9E,KAAAm9E,iBAAAtI,EAAA9mB,SAAAic,EAAAtqE,OAAAm1E,EAAAe,WACA5L,EAAAsB,IAAA4R,EAAAlT,QACA,IAAAoT,EAAAF,EAAAG,SAAA,GACAlI,EAAAn1E,KAAAs9E,mBAAAzI,EAAAW,iBACAxL,EAAAsB,IAAA6J,GACA,IAAAC,EAAAp1E,KAAAu9E,aAAA1I,EAAAO,iBAEA,GADApL,EAAAsB,IAAA8J,GACAP,EAAAh0E,UAAAg0E,EAAA9mB,QAAA8nB,QAAA,YACA,GAAAhB,EAAAh0E,SAAA65E,WACA0C,EAAAZ,iBAAA,YAAA3H,EAAAh0E,SAAA25E,QAAAxQ,OACS,CACT,IAAAnpE,EAAAb,KAAAw9E,gBAAA3I,EAAAh0E,UACAu8E,EAAAZ,iBAAA,YAAAxS,EAAAtqE,QAAAsqE,GACAA,EAAAsB,IAAAzqE,GAGA,GAAAg0E,EAAAqB,SAAArB,EAAA9mB,QAAA8nB,QAAA,WACA,GAAAhB,EAAAqB,QAAAwE,WACA0C,EAAAZ,iBAAA,WAAA3H,EAAAqB,QAAAsE,QAAAxQ,OACS,CACT,IAAAkM,EAAAl2E,KAAAy9E,eAAA5I,EAAAqB,SACAkH,EAAAZ,iBAAA,WAAAxS,EAAAtqE,QAAAsqE,GACAA,EAAAsB,IAAA4K,GAGA,IAAAe,EAAAj3E,KAAA09E,mBAAA7I,EAAAoC,aAGA,GAFAmG,EAAAZ,iBAAA,eAAAxS,EAAAtqE,QAAAsqE,GACAA,EAAAsB,IAAA2L,GACApC,EAAAe,UAAA,CACAwH,EAAAZ,iBAAA,YAAAxS,EAAAtqE,QAAAsqE,GACA,IAAA4M,EAAA52E,KAAA29E,gBAAA9I,EAAA+B,SAAA6D,KACAzQ,EAAAsB,IAAAsL,GACAsG,EAAAl9E,KAAAm9E,gBAAAtI,EAAA6B,QAAA1M,EAAAtqE,QAAA,GACA09E,EAAAZ,iBAAA,WAAAxS,EAAAtqE,QAAAsqE,GACAA,EAAAsB,IAAA4R,EAAAlT,QACA,IAAA4T,EAAAV,EAAAG,SACAr9E,KAAA69E,oBAAAhJ,EAAA6B,QAAAkH,EAAA5T,GAIA,OAFAhqE,KAAA69E,qBAAAhJ,EAAA9mB,UAAAqvB,GAAApT,GACAA,EAAAsB,KAAA,IACAtB,EAAAvoE,MAEAq8E,aAAA,SAAAn/E,GACA,OAAAi5E,WAAAj5E,KAAA4E,SAAA5E,EAAA,KAAAG,MAAAH,GAGAqB,KAAA+9E,YAAAp/E,GAFAqB,KAAAg+E,cAAAr/E,IAIAo/E,YAAA,SAAA9tD,GACA,IAAAtxB,EAAAsxB,EAAA1yB,WACAnB,EAAA,gDAAiDmgC,KAAA59B,GACjD,GAAAvC,EAAA,CACA,IAAA8kE,EAAA0W,WAAA,OAAAx7E,EAAA,IAAAA,EAAA,MAAAA,EAAA,GAAAsD,SACAf,GAAAH,KAAAmoC,MAAA1W,EAAAixC,MAAA3jE,WAEA,IACAvB,EAAA0e,EADAujE,EAAA,GAEA,IAAAjiF,EAAA,EAAA0e,EAAA/b,EAAAe,OAAoC1D,EAAA0e,IAAQ1e,EAAA,CAC5C,IAAAyK,EAAA9H,EAAA3C,GAEAiiF,GADA,MAAAx3E,EACA,MAAA9H,IAAA3C,GAAA,QACS,MAAAyK,EACT,IACS,MAAAA,EACT,IAEAA,EAIA,IAAA6B,GAAA,IACA,IAAAtM,EAAA,EAAA0e,GAFAujE,GAAA,EAAAA,EAAAv+E,OAAA,UAEAA,OAAsC1D,EAAA0e,EAAQ1e,GAAA,EAC9CsM,EAAAxE,KAAAP,SAAA06E,EAAAz6E,OAAAxH,EAAA,QAEA,OAAAsM,GAEA01E,cAAA,SAAAr/E,GAeA,OAbAA,IAAA,KAAAA,GAAA,KACAA,EAAA,KACOA,GAAA,KAAAA,GAAA,MAEP,MADAA,GAAA,MACA,OAAAA,GACOA,IAAA,MAAAA,IAAA,KAEP,MADAA,KAAA,MACA,OAAAA,GACOA,IAAA,OAAAA,GAAA,OACP,GAAAA,GAAA,UAAAA,IAEA,GAAAA,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,IAIAo+E,cAAA,SAAAjI,GACA,OAAAA,EAAAyC,MAAAzC,EAAA0C,MAAA1C,EAAA2C,QAAA3C,EAAA4C,UAEAsF,iBAAA,SAAA32B,GAEA,IADA,IAAA2uB,EAAA,IAAAvB,EACAz3E,EAAA,EAAA0e,EAAA2rC,EAAA3mD,OAAwC1D,EAAA0e,IAAQ1e,EAAA,CAIhD,IAHA,IAAAO,EAAA8pD,EAAArqD,GACA0D,EAAAlB,KAAAqG,IAAAtI,EAAAmD,OAAA,KACAw+E,EAAA,IAAA1gF,MAAAkC,GACAuD,EAAA,EAAuBA,EAAAvD,EAAYuD,IAAA,CACnC,IAAAk7E,EAAA5hF,EAAA0G,IACAk7E,EAAA,KAAAA,EAAA,WAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAqH,MAAAA,GAAgB,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,KACrIA,EAAA,KAEAD,EAAAj7E,GAAAk7E,EAGA,MADAD,IAAAv2E,KAAA,OAEAu2E,EAAA,iBAEAlJ,EAAA1J,KAAA,EAAAl5C,EAAAtiB,eAAAouE,IAEA,OAAAl+E,KAAAu9E,aAAAvI,IAEAmI,gBAAA,SAAAiB,EAAA1+E,EAAA2+E,GAGA,IAFA,IAAAT,KACArH,EAAA,IAAA9C,EACAz3E,EAAA,EAAA0e,EAAA0jE,EAAA1+E,OAAwC1D,EAAA0e,IAAQ1e,EAAA,CAChD,IAAAy6E,EAAA2H,EAAApiF,GACAqiF,IACA5H,EAAAsD,aAAA,kBACAtD,EAAAsD,aAAA,mBACAtD,EAAAsD,aAAA,eACAtD,EAAAsD,aAAA,YACAtD,EAAAsD,aAAA,YAEA,IAAAuE,EAAA,IAAAlC,EACAmC,EAAAv+E,KAAAw+E,YAAA/H,EAAA6H,GACAV,EAAA95E,KAAAw6E,GACA/H,EAAAjL,IAAAiT,GACAD,EAAAzgF,OAAA6B,GAGA,OACA29E,SAAAO,EACA5T,OAHAuM,EAAAv2E,KAAAu9E,aAAAhH,EAAAqH,KAMAC,oBAAA,SAAAO,EAAAf,EAAArT,GACA,QAAAhuE,EAAA,EAAA0e,EAAA0jE,EAAA1+E,OAAwC1D,EAAA0e,IAAQ1e,EAAA,CAChD,IAAAy6E,EAAA2H,EAAApiF,GACAm7E,EAAAV,EAAAU,YACA,IAAAA,IAAAV,EAAAZ,QAAA,WACA,UAAAzjD,EAAAvgB,YAAA,uCAEA,IAAA4sE,EAAA,IAAArC,EACAsC,EAAA1+E,KAAAw+E,YAAArH,EAAAsH,GACAhQ,EAAAzE,EAAAtqE,OAOA,GANA++E,EAAA5gF,OAAA4wE,GACAiQ,EAAAh/E,SACA+uE,EAAA,GAEA4O,EAAArhF,GAAAwgF,iBAAA,WAAAkC,EAAAh/E,OAAA+uE,GAAAzE,GACAA,EAAAsB,IAAAoT,GACAvH,EAAAC,YAAAD,EAAAtB,QAAA,UACA,IAAA8I,EAAA3+E,KAAAu9E,aAAApG,EAAAC,YACAqH,EAAAjC,iBAAA,SAAAkC,EAAAh/E,QAAAsqE,GACAA,EAAAsB,IAAAqT,MAIAH,YAAA,SAAAzyD,EAAA6yD,GAGA,IAFA,IAAAt2E,KACAwzE,EAAA/vD,EAAA+vD,MACA9/E,EAAA,EAAqBA,EAAA8/E,EAAAp8E,SAAkB1D,EAAA,CACvC,IAAAyb,EAAAqkE,EAAA9/E,GACA,GAAAyb,KAAAsU,EAAAM,OAAA,CAGA,IAAAA,EAAAN,EAAAM,OAAA5U,GACAmkE,EAAA7vD,EAAA6vD,MAAAnkE,GAOA,GANAja,MAAAC,QAAAm+E,KACAA,OAEAp+E,MAAAC,QAAA4uB,KACAA,OAEA,IAAAA,EAAA3sB,OAAA,CAGA,QAAAuD,EAAA,EAAAukD,EAAAo0B,EAAAl8E,OAA0CuD,EAAAukD,IAAQvkD,EAAA,CAClD,IAAAzB,EAAAo6E,EAAA34E,GACAtE,EAAA0tB,EAAAppB,GACA,OAAAzB,GACA,UACA,UACA8G,IAAA1B,OAAA5G,KAAA89E,aAAAn/E,IACA,MACA,aACA,IAAApC,EAAAwvB,EAAA0vD,aAAAhkE,GACAmnE,EAAAvC,WAAA9/E,IACAqiF,EAAAtC,MAAA//E,EAAA+L,EAAA5I,QAEA4I,IAAA1B,QAAA,aACA,MACA,YACA,YACA0B,IAAA1B,OAAA5G,KAAA89E,aAAAn/E,IACA,QAAA83B,EAAA,EAAAoB,EAAAxL,EAAA3sB,OAAiD+2B,EAAAoB,IAAQpB,EACzDnuB,IAAA1B,OAAA5G,KAAA89E,aAAAzxD,EAAAoK,KAEA,MACA,QACA,UAAArE,EAAAvgB,YAAA,wBAAArQ,IAGA8G,IAAA1B,OAAAmlB,EAAA8vD,QAAApkE,MAEA,OAAAnP,GAEAg1E,mBAAA,SAAA9H,GAEA,IADA,IAAAL,EAAA,IAAA1B,EACAz3E,EAAA,EAAA0e,EAAA86D,EAAA91E,OAA0C1D,EAAA0e,IAAQ1e,EAClDm5E,EAAA7J,KAAA,EAAAl5C,EAAAtiB,eAAA0lE,EAAAx5E,KAEA,OAAAgE,KAAAu9E,aAAApI,IAEA0J,uBAAA,WACA,IAAAzJ,EAAAp1E,KAAA60E,IAAAO,gBACAp1E,KAAAsI,IAAAw2E,eAAA9+E,KAAAu9E,aAAAnI,KAEAsI,mBAAA,SAAAzG,GACA,OAAAj3E,KAAAu9E,aAAAtG,IAEAwG,eAAA,SAAAvH,GACA,OAAAl2E,KAAA++E,kBAAA7I,EAAAuE,MAEA+C,gBAAA,SAAA38E,GACA,OAAAb,KAAA++E,kBAAAl+E,EAAA45E,MAEAkD,gBAAA,SAAA/G,GACA,OAAA52E,KAAA++E,kBAAAnI,IAEAmI,kBAAA,SAAAt9E,GAEA,IADA,IAAA6G,KACAtM,EAAA,EAAA0e,EAAAjZ,EAAA/B,OAAuC1D,EAAA0e,IAAQ1e,EAC/CsM,EAAAtM,GAAAyF,EAAAzF,GAEA,OAAAsM,GAEAi1E,aAAA,SAAAh0C,EAAA8zC,GACAA,QACA,IAAA/B,EAAA/xC,EAAA+xC,QACAh+C,EAAAg+C,EAAA57E,OACA,OAAA49B,EACA,cAEA,IAEAthC,EAIAi8E,EANAx2E,GAAA67B,GAAA,UAAAA,GACA0hD,EAAA,EAEA,IAAAhjF,EAAA,EAAiBA,EAAAshC,IAAWthC,EAC5BgjF,GAAA1D,EAAAt/E,GAAA0D,OAIAu4E,EADA+G,EAAA,IACA,EACOA,EAAA,MACP,EACOA,EAAA,SACP,EAEA,EAEAv9E,EAAAqC,KAAAm0E,GACA,IAAA6B,EAAA,EACA,IAAA99E,EAAA,EAAiBA,EAAAshC,EAAA,EAAethC,IAChC,IAAAi8E,EACAx2E,EAAAqC,KAAA,IAAAg2E,GACS,IAAA7B,EACTx2E,EAAAqC,KAAAg2E,GAAA,UAAAA,GACS,IAAA7B,EACTx2E,EAAAqC,KAAAg2E,GAAA,OAAAA,GAAA,UAAAA,GAEAr4E,EAAAqC,KAAAg2E,IAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,GAEAwB,EAAAt/E,KACA89E,GAAAwB,EAAAt/E,GAAA0D,QAGA,IAAA1D,EAAA,EAAiBA,EAAAshC,EAAWthC,IAAA,CAC5BqhF,EAAArhF,IACAqhF,EAAArhF,GAAA6B,OAAA4D,EAAA/B,QAEA,QAAAuD,EAAA,EAAAukD,EAAA8zB,EAAAt/E,GAAA0D,OAA+CuD,EAAAukD,EAAQvkD,IACvDxB,EAAAqC,KAAAw3E,EAAAt/E,GAAAiH,IAGA,OAAAxB,IAGA4xE,EAtUA,GAwUAv3E,EAAAg4E,qBACAh4E,EAAA+3E,YACA/3E,EAAA83E,MACA93E,EAAA63E,YACA73E,EAAA43E,aACA53E,EAAA23E,WACA33E,EAAA03E,aACA13E,EAAAy3E,aACAz3E,EAAAw3E,iBACAx3E,EAAAu3E,eAIA,SAAAt3E,EAAAD,EAAA0T,GAEA,aAGA9S,OAAAC,eAAAb,EAAA,cACA6C,OAAA,IAEA7C,EAAAmjF,kCAAAnjF,EAAAojF,qCAAApjF,EAAAqjF,4BAAArjF,EAAAsjF,gBAAAtjF,EAAAujF,cAAAvjF,EAAAwjF,iBAAAxjF,EAAAyjF,mBAAA9+E,EAEA,IAAA2xB,EAAA5iB,EAAA,GAEA+vE,GAAA,EAAAntD,EAAAjhB,uBAAA,SAAAskB,GACAA,EAAA,wBACAA,EAAA,qCACAA,EAAA,kDACAA,EAAA,0CACAA,EAAA,uBACAA,EAAA,oCACAA,EAAA,iDACAA,EAAA,yCACAA,EAAA,2BACAA,EAAA,qCACAA,EAAA,kDACAA,EAAA,0CACAA,EAAA,kBACAA,EAAA,+BACAA,EAAA,4CACAA,EAAA,oCACAA,EAAA,8CACAA,EAAA,iCACAA,EAAA,sCACAA,EAAA,oBACAA,EAAA,+BACAA,EAAA,4CACAA,EAAA,oCACAA,EAAA,qBACAA,EAAA,kCACAA,EAAA,+CACAA,EAAA,uCACAA,EAAA,mDACAA,EAAA,sCACAA,EAAA,2CACAA,EAAA,yBACAA,EAAA,sBACAA,EAAA,mCACAA,EAAA,gDACAA,EAAA,iDACAA,EAAA,wCACAA,EAAA,yCACAA,EAAA,0BACAA,EAAA,wBACAA,EAAA,8BACAA,EAAA,0BACAA,EAAA,4BACAA,EAAA,mCACAA,EAAA,+CACAA,EAAA,uCACAA,EAAA,8BACAA,EAAA,qCACAA,EAAA,iDACAA,EAAA,mDACAA,EAAA,uCACAA,EAAA,yCACAA,EAAA,2CACAA,EAAA,gCACAA,EAAA,uCACAA,EAAA,mDACAA,EAAA,6CAEA6pD,GAAA,EAAAltD,EAAAjhB,uBAAA,SAAAskB,GACAA,EAAA,oBACAA,EAAA,iCACAA,EAAA,8CACAA,EAAA,sCACAA,EAAA,0BACAA,EAAA,uCACAA,EAAA,oDACAA,EAAA,4CACAA,EAAA,4BACAA,EAAA,yCACAA,EAAA,qDACAA,EAAA,6CACAA,EAAA,wBACAA,EAAA,qCACAA,EAAA,kDACAA,EAAA,0CACAA,EAAA,oCACAA,EAAA,yBACAA,EAAA,mCACAA,EAAA,+CACAA,EAAA,uCACAA,EAAA,yBACAA,EAAA,mCACAA,EAAA,+CACAA,EAAA,uCACAA,EAAA,2BACAA,EAAA,qCACAA,EAAA,iDACAA,EAAA,yCACAA,EAAA,2BACAA,EAAA,qCACAA,EAAA,iDACAA,EAAA,yCACAA,EAAA,6BACAA,EAAA,2BAEA4pD,GAAA,EAAAjtD,EAAAjhB,uBAAA,SAAAskB,GACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,SACAA,EAAA,cACAA,EAAA,YACAA,EAAA,0BACAA,EAAA,WACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,eACAA,EAAA,QACAA,EAAA,SACAA,EAAA,uBACAA,EAAA,YACAA,EAAA,yBACAA,EAAA,sBACAA,EAAA,oBACAA,EAAA,UACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,WACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,wBACAA,EAAA,yBACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,aACAA,EAAA,UACAA,EAAA,WACAA,EAAA,sBACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,UACAA,EAAA,WACAA,EAAA,cACAA,EAAA,YACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,aACAA,EAAA,oBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,sBACAA,EAAA,uBACAA,EAAA,qBACAA,EAAA,WACAA,EAAA,wBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,sBACAA,EAAA,aACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,uBACAA,EAAA,sBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,oBACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,mBACAA,EAAA,4BACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,yBACAA,EAAA,YACAA,EAAA,mBACAA,EAAA,wBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,SACAA,EAAA,kBACAA,EAAA,SACAA,EAAA,SACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,QACAA,EAAA,qBACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,sBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,qBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,UACAA,EAAA,SACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,UAEA2pD,GAAA,EAAAhtD,EAAAjhB,uBAAA,SAAAskB,GACAA,EAAA,YACAA,EAAA,UACAA,EAAA,kBAEA0pD,GAAA,EAAA/sD,EAAAjhB,uBAAA,SAAAskaAEAypD,GAAA,EAAA9sD,EAAAjhB,uBAAA,SAAAskB,GACAA,EAAA,SACAA,EAAA,SACAA,EAAA,WAEAwpD,GAAA,EAAA7sD,EAAAjhB,uBAAA,SAAAskB,GACAA,EAAA,MACAA,EAAA,MACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,WAEA35B,EAAAyjF,gBACAzjF,EAAAwjF,mBACAxjF,EAAAujF,gBACAvjF,EAAAsjF,kBACAtjF,EAAAqjF,8BACArjF,EAAAojF,uCACApjF,EAAAmjF,qCAIA,SAAAljF,EAAAD,EAAA0T,GAEA,aAGA,IAAA2B,EAAA3B,EAAA,GAAA2B,sBACAquE,EAAAruE,EAAA,SAAAskB,GACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,cAuCA,IAAAgqD,IACAjrE,MAAA,EACA9P,IAAA,MAEA8P,MAAA,IACA9P,IAAA,MAEA8P,MAAA,IACA9P,IAAA,MAEA8P,MAAA,IACA9P,IAAA,MAEA8P,MAAA,IACA9P,IAAA,MAEA8P,MAAA,IACA9P,IAAA,MAEA8P,MAAA,IACA9P,IAAA,MAEA8P,MAAA,IACA9P,IAAA,OAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,MACA9P,IAAA,QAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,OAEA8P,MAAA,KACA9P,IAAA,O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","file":"708046effab4f84ae18c.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"iFqw\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 708046effab4f84ae18c","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_isarray@1.0.0@isarray/index.js\n// module id = 5RIO\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_ieee754@1.1.11@ieee754/index.js\n// module id = 6KLd\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_buffer@4.9.1@buffer/index.js\n// module id = 7xR8\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 9AUj\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_process@0.11.10@process/browser.js\n// module id = V0EG\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf.worker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf.worker\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsWorker = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 73);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unreachable = exports.warn = exports.utf8StringToString = exports.stringToUTF8String = exports.stringToPDFString = exports.stringToBytes = exports.string32 = exports.shadow = exports.setVerbosityLevel = exports.ReadableStream = exports.removeNullCharacters = exports.readUint32 = exports.readUint16 = exports.readInt8 = exports.log2 = exports.isEvalSupported = exports.isLittleEndian = exports.createValidAbsoluteUrl = exports.isSameOrigin = exports.isSpace = exports.isString = exports.isNum = exports.isEmptyObj = exports.isBool = exports.isArrayBuffer = exports.info = exports.getVerbosityLevel = exports.getLookupTableFactory = exports.getInheritableProperty = exports.deprecated = exports.createObjectURL = exports.createPromiseCapability = exports.createBlob = exports.bytesToString = exports.assert = exports.arraysToBytes = exports.arrayByteLength = exports.FormatError = exports.XRefParseException = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PasswordResponses = exports.PasswordException = exports.PageViewport = exports.NotImplementedException = exports.NativeImageDecoding = exports.MissingPDFException = exports.MissingDataException = exports.MessageHandler = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VerbosityLevel = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n__w_pdfjs_require__(75);\n\nvar _streams_polyfill = __w_pdfjs_require__(130);\n\nvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\nvar NativeImageDecoding = {\n  NONE: 'none',\n  DECODE: 'decode',\n  DISPLAY: 'display'\n};\nvar TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\nvar ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\nvar AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26\n};\nvar AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200\n};\nvar AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000\n};\nvar AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5\n};\nvar StreamType = {\n  UNKNOWN: 0,\n  FLATE: 1,\n  LZW: 2,\n  DCT: 3,\n  JPX: 4,\n  JBIG: 5,\n  A85: 6,\n  AHX: 7,\n  CCF: 8,\n  RL: 9\n};\nvar FontType = {\n  UNKNOWN: 0,\n  TYPE1: 1,\n  TYPE1C: 2,\n  CIDFONTTYPE0: 3,\n  CIDFONTTYPE0C: 4,\n  TRUETYPE: 5,\n  CIDFONTTYPE2: 6,\n  TYPE3: 7,\n  OPENTYPE: 8,\n  TYPE0: 9,\n  MMTYPE1: 10\n};\nvar VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5\n};\nvar CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2\n};\nvar OPS = {\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\nvar verbosity = VerbosityLevel.WARNINGS;\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\nfunction getVerbosityLevel() {\n  return verbosity;\n}\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log('Info: ' + msg);\n  }\n}\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log('Warning: ' + msg);\n  }\n}\nfunction deprecated(details) {\n  console.log('Deprecated API usage: ' + details);\n}\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\nvar UNSUPPORTED_FEATURES = {\n  unknown: 'unknown',\n  forms: 'forms',\n  javaScript: 'javaScript',\n  smask: 'smask',\n  shadingPattern: 'shadingPattern',\n  font: 'font'\n};\nfunction isSameOrigin(baseUrl, otherUrl) {\n  try {\n    var base = new URL(baseUrl);\n    if (!base.origin || base.origin === 'null') {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  var other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\nfunction isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case 'http:':\n    case 'https:':\n    case 'ftp:':\n    case 'mailto:':\n    case 'tel:':\n      return true;\n    default:\n      return false;\n  }\n}\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {}\n  return null;\n}\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value: value,\n    enumerable: true,\n    configurable: true,\n    writable: false\n  });\n  return value;\n}\nfunction getLookupTableFactory(initializer) {\n  var lookup;\n  return function () {\n    if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n    }\n    return lookup;\n  };\n}\nvar PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\nvar PasswordException = function PasswordExceptionClosure() {\n  function PasswordException(msg, code) {\n    this.name = 'PasswordException';\n    this.message = msg;\n    this.code = code;\n  }\n  PasswordException.prototype = new Error();\n  PasswordException.constructor = PasswordException;\n  return PasswordException;\n}();\nvar UnknownErrorException = function UnknownErrorExceptionClosure() {\n  function UnknownErrorException(msg, details) {\n    this.name = 'UnknownErrorException';\n    this.message = msg;\n    this.details = details;\n  }\n  UnknownErrorException.prototype = new Error();\n  UnknownErrorException.constructor = UnknownErrorException;\n  return UnknownErrorException;\n}();\nvar InvalidPDFException = function InvalidPDFExceptionClosure() {\n  function InvalidPDFException(msg) {\n    this.name = 'InvalidPDFException';\n    this.message = msg;\n  }\n  InvalidPDFException.prototype = new Error();\n  InvalidPDFException.constructor = InvalidPDFException;\n  return InvalidPDFException;\n}();\nvar MissingPDFException = function MissingPDFExceptionClosure() {\n  function MissingPDFException(msg) {\n    this.name = 'MissingPDFException';\n    this.message = msg;\n  }\n  MissingPDFException.prototype = new Error();\n  MissingPDFException.constructor = MissingPDFException;\n  return MissingPDFException;\n}();\nvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n  function UnexpectedResponseException(msg, status) {\n    this.name = 'UnexpectedResponseException';\n    this.message = msg;\n    this.status = status;\n  }\n  UnexpectedResponseException.prototype = new Error();\n  UnexpectedResponseException.constructor = UnexpectedResponseException;\n  return UnexpectedResponseException;\n}();\nvar NotImplementedException = function NotImplementedExceptionClosure() {\n  function NotImplementedException(msg) {\n    this.message = msg;\n  }\n  NotImplementedException.prototype = new Error();\n  NotImplementedException.prototype.name = 'NotImplementedException';\n  NotImplementedException.constructor = NotImplementedException;\n  return NotImplementedException;\n}();\nvar MissingDataException = function MissingDataExceptionClosure() {\n  function MissingDataException(begin, end) {\n    this.begin = begin;\n    this.end = end;\n    this.message = 'Missing data [' + begin + ', ' + end + ')';\n  }\n  MissingDataException.prototype = new Error();\n  MissingDataException.prototype.name = 'MissingDataException';\n  MissingDataException.constructor = MissingDataException;\n  return MissingDataException;\n}();\nvar XRefParseException = function XRefParseExceptionClosure() {\n  function XRefParseException(msg) {\n    this.message = msg;\n  }\n  XRefParseException.prototype = new Error();\n  XRefParseException.prototype.name = 'XRefParseException';\n  XRefParseException.constructor = XRefParseException;\n  return XRefParseException;\n}();\nvar FormatError = function FormatErrorClosure() {\n  function FormatError(msg) {\n    this.message = msg;\n  }\n  FormatError.prototype = new Error();\n  FormatError.prototype.name = 'FormatError';\n  FormatError.constructor = FormatError;\n  return FormatError;\n}();\nvar AbortException = function AbortExceptionClosure() {\n  function AbortException(msg) {\n    this.name = 'AbortException';\n    this.message = msg;\n  }\n  AbortException.prototype = new Error();\n  AbortException.constructor = AbortException;\n  return AbortException;\n}();\nvar NullCharactersRegExp = /\\x00/g;\nfunction removeNullCharacters(str) {\n  if (typeof str !== 'string') {\n    warn('The argument for removeNullCharacters must be a string.');\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, '');\n}\nfunction bytesToString(bytes) {\n  assert(bytes !== null && (typeof bytes === 'undefined' ? 'undefined' : _typeof(bytes)) === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n  var length = bytes.length;\n  var MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  var strBuf = [];\n  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    var chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join('');\n}\nfunction stringToBytes(str) {\n  assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n  var length = str.length;\n  var bytes = new Uint8Array(length);\n  for (var i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xFF;\n  }\n  return bytes;\n}\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined);\n  return arr.byteLength;\n}\nfunction arraysToBytes(arr) {\n  if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  var resultLength = 0;\n  var i,\n      ii = arr.length;\n  var item, itemLength;\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    itemLength = arrayByteLength(item);\n    resultLength += itemLength;\n  }\n  var pos = 0;\n  var data = new Uint8Array(resultLength);\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === 'string') {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\nfunction string32(value) {\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\nfunction log2(x) {\n  if (x <= 0) {\n    return 0;\n  }\n  return Math.ceil(Math.log2(x));\n}\nfunction readInt8(data, start) {\n  return data[start] << 24 >> 24;\n}\nfunction readUint16(data, offset) {\n  return data[offset] << 8 | data[offset + 1];\n}\nfunction readUint32(data, offset) {\n  return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n}\nfunction isLittleEndian() {\n  var buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nfunction isEvalSupported() {\n  try {\n    new Function('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction getInheritableProperty(_ref) {\n  var dict = _ref.dict,\n      key = _ref.key,\n      _ref$getArray = _ref.getArray,\n      getArray = _ref$getArray === undefined ? false : _ref$getArray,\n      _ref$stopWhenFound = _ref.stopWhenFound,\n      stopWhenFound = _ref$stopWhenFound === undefined ? true : _ref$stopWhenFound;\n\n  var LOOP_LIMIT = 100;\n  var loopCount = 0;\n  var values = void 0;\n  while (dict) {\n    var value = getArray ? dict.getArray(key) : dict.get(key);\n    if (value !== undefined) {\n      if (stopWhenFound) {\n        return value;\n      }\n      if (!values) {\n        values = [];\n      }\n      values.push(value);\n    }\n    if (++loopCount > LOOP_LIMIT) {\n      warn('getInheritableProperty: maximum loop count exceeded for \"' + key + '\"');\n      break;\n    }\n    dict = dict.get('Parent');\n  }\n  return values;\n}\nvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nvar Util = function UtilClosure() {\n  function Util() {}\n  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\n  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join('');\n  };\n  Util.transform = function Util_transform(m1, m2) {\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n  };\n  Util.applyTransform = function Util_applyTransform(p, m) {\n    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  };\n  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  };\n  Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n    var p1 = Util.applyTransform(r, m);\n    var p2 = Util.applyTransform(r.slice(2, 4), m);\n    var p3 = Util.applyTransform([r[0], r[3]], m);\n    var p4 = Util.applyTransform([r[2], r[1]], m);\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n  };\n  Util.inverseTransform = function Util_inverseTransform(m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  };\n  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n  };\n  Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n    var transpose = [m[0], m[2], m[1], m[3]];\n    var a = m[0] * transpose[0] + m[1] * transpose[2];\n    var b = m[0] * transpose[1] + m[1] * transpose[3];\n    var c = m[2] * transpose[0] + m[3] * transpose[2];\n    var d = m[2] * transpose[1] + m[3] * transpose[3];\n    var first = (a + d) / 2;\n    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    var sx = first + second || 1;\n    var sy = first - second || 1;\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  };\n  Util.normalizeRect = function Util_normalizeRect(rect) {\n    var r = rect.slice(0);\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  };\n  Util.intersect = function Util_intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\n        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\n        result = [];\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return false;\n    }\n    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return false;\n    }\n    return result;\n  };\n  var ROMAN_NUMBER_MAP = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\n  Util.toRoman = function Util_toRoman(number, lowerCase) {\n    assert(Number.isInteger(number) && number > 0, 'The number should be a positive integer.');\n    var pos,\n        romanBuf = [];\n    while (number >= 1000) {\n      number -= 1000;\n      romanBuf.push('M');\n    }\n    pos = number / 100 | 0;\n    number %= 100;\n    romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n    pos = number / 10 | 0;\n    number %= 10;\n    romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n    romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n    var romanStr = romanBuf.join('');\n    return lowerCase ? romanStr.toLowerCase() : romanStr;\n  };\n  Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n    Array.prototype.push.apply(arr1, arr2);\n  };\n  Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n    Array.prototype.unshift.apply(arr1, arr2);\n  };\n  Util.extendObj = function extendObj(obj1, obj2) {\n    for (var key in obj2) {\n      obj1[key] = obj2[key];\n    }\n  };\n  Util.inherit = function Util_inherit(sub, base, prototype) {\n    sub.prototype = Object.create(base.prototype);\n    sub.prototype.constructor = sub;\n    for (var prop in prototype) {\n      sub.prototype[prop] = prototype[prop];\n    }\n  };\n  Util.loadScript = function Util_loadScript(src, callback) {\n    var script = document.createElement('script');\n    var loaded = false;\n    script.setAttribute('src', src);\n    if (callback) {\n      script.onload = function () {\n        if (!loaded) {\n          callback();\n        }\n        loaded = true;\n      };\n    }\n    document.getElementsByTagName('head')[0].appendChild(script);\n  };\n  return Util;\n}();\nvar PageViewport = function PageViewportClosure() {\n  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    var centerX = (viewBox[2] + viewBox[0]) / 2;\n    var centerY = (viewBox[3] + viewBox[1]) / 2;\n    var rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      default:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n    }\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n    var offsetCanvasX, offsetCanvasY;\n    var width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n    this.width = width;\n    this.height = height;\n    this.fontScale = scale;\n  }\n  PageViewport.prototype = {\n    clone: function PageViewPort_clone(args) {\n      args = args || {};\n      var scale = 'scale' in args ? args.scale : this.scale;\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n    },\n    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n      return Util.applyTransform([x, y], this.transform);\n    },\n    convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n      return [tl[0], tl[1], br[0], br[1]];\n    },\n    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n      return Util.applyInverseTransform([x, y], this.transform);\n    }\n  };\n  return PageViewport;\n}();\nvar PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\nfunction stringToPDFString(str) {\n  var i,\n      n = str.length,\n      strBuf = [];\n  if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n    for (i = 2; i < n; i += 2) {\n      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n    }\n  } else {\n    for (i = 0; i < n; ++i) {\n      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join('');\n}\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\nfunction isEmptyObj(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n}\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\nfunction isNum(v) {\n  return typeof v === 'number';\n}\nfunction isString(v) {\n  return typeof v === 'string';\n}\nfunction isArrayBuffer(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.byteLength !== undefined;\n}\nfunction isSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n}\nfunction createPromiseCapability() {\n  var capability = {};\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = resolve;\n    capability.reject = reject;\n  });\n  return capability;\n}\nvar createBlob = function createBlob(data, contentType) {\n  if (typeof Blob !== 'undefined') {\n    return new Blob([data], { type: contentType });\n  }\n  throw new Error('The \"Blob\" constructor is not supported.');\n};\nvar createObjectURL = function createObjectURLClosure() {\n  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  return function createObjectURL(data, contentType) {\n    var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!forceDataSchema && URL.createObjectURL) {\n      var blob = createBlob(data, contentType);\n      return URL.createObjectURL(blob);\n    }\n    var buffer = 'data:' + contentType + ';base64,';\n    for (var i = 0, ii = data.length; i < ii; i += 3) {\n      var b1 = data[i] & 0xFF;\n      var b2 = data[i + 1] & 0xFF;\n      var b3 = data[i + 2] & 0xFF;\n      var d1 = b1 >> 2,\n          d2 = (b1 & 3) << 4 | b2 >> 4;\n      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n      var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n}();\nfunction resolveCall(fn, args) {\n  var thisArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (!fn) {\n    return Promise.resolve(undefined);\n  }\n  return new Promise(function (resolve, reject) {\n    resolve(fn.apply(thisArg, args));\n  });\n}\nfunction wrapReason(reason) {\n  if ((typeof reason === 'undefined' ? 'undefined' : _typeof(reason)) !== 'object') {\n    return reason;\n  }\n  switch (reason.name) {\n    case 'AbortException':\n      return new AbortException(reason.message);\n    case 'MissingPDFException':\n      return new MissingPDFException(reason.message);\n    case 'UnexpectedResponseException':\n      return new UnexpectedResponseException(reason.message, reason.status);\n    default:\n      return new UnknownErrorException(reason.message, reason.details);\n  }\n}\nfunction makeReasonSerializable(reason) {\n  if (!(reason instanceof Error) || reason instanceof AbortException || reason instanceof MissingPDFException || reason instanceof UnexpectedResponseException || reason instanceof UnknownErrorException) {\n    return reason;\n  }\n  return new UnknownErrorException(reason.message, reason.toString());\n}\nfunction resolveOrReject(capability, success, reason) {\n  if (success) {\n    capability.resolve();\n  } else {\n    capability.reject(reason);\n  }\n}\nfunction finalize(promise) {\n  return Promise.resolve(promise).catch(function () {});\n}\nfunction MessageHandler(sourceName, targetName, comObj) {\n  var _this = this;\n\n  this.sourceName = sourceName;\n  this.targetName = targetName;\n  this.comObj = comObj;\n  this.callbackId = 1;\n  this.streamId = 1;\n  this.postMessageTransfers = true;\n  this.streamSinks = Object.create(null);\n  this.streamControllers = Object.create(null);\n  var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n  var ah = this.actionHandler = Object.create(null);\n  this._onComObjOnMessage = function (event) {\n    var data = event.data;\n    if (data.targetName !== _this.sourceName) {\n      return;\n    }\n    if (data.stream) {\n      _this._processStreamMessage(data);\n    } else if (data.isReply) {\n      var callbackId = data.callbackId;\n      if (data.callbackId in callbacksCapabilities) {\n        var callback = callbacksCapabilities[callbackId];\n        delete callbacksCapabilities[callbackId];\n        if ('error' in data) {\n          callback.reject(wrapReason(data.error));\n        } else {\n          callback.resolve(data.data);\n        }\n      } else {\n        throw new Error('Cannot resolve callback ' + callbackId);\n      }\n    } else if (data.action in ah) {\n      var action = ah[data.action];\n      if (data.callbackId) {\n        var _sourceName = _this.sourceName;\n        var _targetName = data.sourceName;\n        Promise.resolve().then(function () {\n          return action[0].call(action[1], data.data);\n        }).then(function (result) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            error: makeReasonSerializable(reason)\n          });\n        });\n      } else if (data.streamId) {\n        _this._createStreamSink(data);\n      } else {\n        action[0].call(action[1], data.data);\n      }\n    } else {\n      throw new Error('Unknown action from worker: ' + data.action);\n    }\n  };\n  comObj.addEventListener('message', this._onComObjOnMessage);\n}\nMessageHandler.prototype = {\n  on: function on(actionName, handler, scope) {\n    var ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error('There is already an actionName called \"' + actionName + '\"');\n    }\n    ah[actionName] = [handler, scope];\n  },\n  send: function send(actionName, data, transfers) {\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data\n    };\n    this.postMessage(message, transfers);\n  },\n  sendWithPromise: function sendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackId++;\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = createPromiseCapability();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  },\n  sendWithStream: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n    var _this2 = this;\n\n    var streamId = this.streamId++;\n    var sourceName = this.sourceName;\n    var targetName = this.targetName;\n    return new _streams_polyfill.ReadableStream({\n      start: function start(controller) {\n        var startCapability = createPromiseCapability();\n        _this2.streamControllers[streamId] = {\n          controller: controller,\n          startCall: startCapability,\n          isClosed: false\n        };\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          action: actionName,\n          streamId: streamId,\n          data: data,\n          desiredSize: controller.desiredSize\n        });\n        return startCapability.promise;\n      },\n      pull: function pull(controller) {\n        var pullCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].pullCall = pullCapability;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'pull',\n          streamId: streamId,\n          desiredSize: controller.desiredSize\n        });\n        return pullCapability.promise;\n      },\n      cancel: function cancel(reason) {\n        var cancelCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].cancelCall = cancelCapability;\n        _this2.streamControllers[streamId].isClosed = true;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'cancel',\n          reason: reason,\n          streamId: streamId\n        });\n        return cancelCapability.promise;\n      }\n    }, queueingStrategy);\n  },\n  _createStreamSink: function _createStreamSink(data) {\n    var _this3 = this;\n\n    var self = this;\n    var action = this.actionHandler[data.action];\n    var streamId = data.streamId;\n    var desiredSize = data.desiredSize;\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var capability = createPromiseCapability();\n    var sendStreamRequest = function sendStreamRequest(_ref2) {\n      var stream = _ref2.stream,\n          chunk = _ref2.chunk,\n          transfers = _ref2.transfers,\n          success = _ref2.success,\n          reason = _ref2.reason;\n\n      _this3.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        streamId: streamId,\n        chunk: chunk,\n        success: success,\n        reason: reason\n      }, transfers);\n    };\n    var streamSink = {\n      enqueue: function enqueue(chunk) {\n        var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        var transfers = arguments[2];\n\n        if (this.isCancelled) {\n          return;\n        }\n        var lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        sendStreamRequest({\n          stream: 'enqueue',\n          chunk: chunk,\n          transfers: transfers\n        });\n      },\n      close: function close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({ stream: 'close' });\n        delete self.streamSinks[streamId];\n      },\n      error: function error(reason) {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({\n          stream: 'error',\n          reason: reason\n        });\n      },\n\n      sinkCapability: capability,\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: desiredSize,\n      ready: null\n    };\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    resolveCall(action[0], [data.data, streamSink], action[1]).then(function () {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: true\n      });\n    }, function (reason) {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: false,\n        reason: reason\n      });\n    });\n  },\n  _processStreamMessage: function _processStreamMessage(data) {\n    var _this4 = this;\n\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var streamId = data.streamId;\n    var sendStreamResponse = function sendStreamResponse(_ref3) {\n      var stream = _ref3.stream,\n          success = _ref3.success,\n          reason = _ref3.reason;\n\n      _this4.comObj.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        success: success,\n        streamId: streamId,\n        reason: reason\n      });\n    };\n    var deleteStreamController = function deleteStreamController() {\n      Promise.all([_this4.streamControllers[data.streamId].startCall, _this4.streamControllers[data.streamId].pullCall, _this4.streamControllers[data.streamId].cancelCall].map(function (capability) {\n        return capability && finalize(capability.promise);\n      })).then(function () {\n        delete _this4.streamControllers[data.streamId];\n      });\n    };\n    switch (data.stream) {\n      case 'start_complete':\n        resolveOrReject(this.streamControllers[data.streamId].startCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull_complete':\n        resolveOrReject(this.streamControllers[data.streamId].pullCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull':\n        if (!this.streamSinks[data.streamId]) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n          break;\n        }\n        if (this.streamSinks[data.streamId].desiredSize <= 0 && data.desiredSize > 0) {\n          this.streamSinks[data.streamId].sinkCapability.resolve();\n        }\n        this.streamSinks[data.streamId].desiredSize = data.desiredSize;\n        resolveCall(this.streamSinks[data.streamId].onPull).then(function () {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        break;\n      case 'enqueue':\n        assert(this.streamControllers[data.streamId], 'enqueue should have stream controller');\n        if (!this.streamControllers[data.streamId].isClosed) {\n          this.streamControllers[data.streamId].controller.enqueue(data.chunk);\n        }\n        break;\n      case 'close':\n        assert(this.streamControllers[data.streamId], 'close should have stream controller');\n        if (this.streamControllers[data.streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[data.streamId].isClosed = true;\n        this.streamControllers[data.streamId].controller.close();\n        deleteStreamController();\n        break;\n      case 'error':\n        assert(this.streamControllers[data.streamId], 'error should have stream controller');\n        this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel_complete':\n        resolveOrReject(this.streamControllers[data.streamId].cancelCall, data.success, wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel':\n        if (!this.streamSinks[data.streamId]) {\n          break;\n        }\n        resolveCall(this.streamSinks[data.streamId].onCancel, [wrapReason(data.reason)]).then(function () {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));\n        this.streamSinks[data.streamId].isCancelled = true;\n        delete this.streamSinks[data.streamId];\n        break;\n      default:\n        throw new Error('Unexpected stream case');\n    }\n  },\n  postMessage: function postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  },\n  destroy: function destroy() {\n    this.comObj.removeEventListener('message', this._onComObjOnMessage);\n  }\n};\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nexports.OPS = OPS;\nexports.VerbosityLevel = VerbosityLevel;\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nexports.AnnotationFlag = AnnotationFlag;\nexports.AnnotationType = AnnotationType;\nexports.FontType = FontType;\nexports.ImageKind = ImageKind;\nexports.CMapCompressionType = CMapCompressionType;\nexports.AbortException = AbortException;\nexports.InvalidPDFException = InvalidPDFException;\nexports.MessageHandler = MessageHandler;\nexports.MissingDataException = MissingDataException;\nexports.MissingPDFException = MissingPDFException;\nexports.NativeImageDecoding = NativeImageDecoding;\nexports.NotImplementedException = NotImplementedException;\nexports.PageViewport = PageViewport;\nexports.PasswordException = PasswordException;\nexports.PasswordResponses = PasswordResponses;\nexports.StreamType = StreamType;\nexports.TextRenderingMode = TextRenderingMode;\nexports.UnexpectedResponseException = UnexpectedResponseException;\nexports.UnknownErrorException = UnknownErrorException;\nexports.Util = Util;\nexports.XRefParseException = XRefParseException;\nexports.FormatError = FormatError;\nexports.arrayByteLength = arrayByteLength;\nexports.arraysToBytes = arraysToBytes;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createBlob = createBlob;\nexports.createPromiseCapability = createPromiseCapability;\nexports.createObjectURL = createObjectURL;\nexports.deprecated = deprecated;\nexports.getInheritableProperty = getInheritableProperty;\nexports.getLookupTableFactory = getLookupTableFactory;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.info = info;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isBool = isBool;\nexports.isEmptyObj = isEmptyObj;\nexports.isNum = isNum;\nexports.isString = isString;\nexports.isSpace = isSpace;\nexports.isSameOrigin = isSameOrigin;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.isLittleEndian = isLittleEndian;\nexports.isEvalSupported = isEvalSupported;\nexports.log2 = log2;\nexports.readInt8 = readInt8;\nexports.readUint16 = readUint16;\nexports.readUint32 = readUint32;\nexports.removeNullCharacters = removeNullCharacters;\nexports.ReadableStream = _streams_polyfill.ReadableStream;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\nexports.unreachable = unreachable;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar store = __w_pdfjs_require__(47)('wks');\nvar uid = __w_pdfjs_require__(22);\nvar _Symbol = __w_pdfjs_require__(6).Symbol;\nvar USE_SYMBOL = typeof _Symbol == 'function';\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));\n};\n$exports.store = store;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function (it) {\n  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar core = __w_pdfjs_require__(7);\nvar hide = __w_pdfjs_require__(12);\nvar redefine = __w_pdfjs_require__(9);\nvar ctx = __w_pdfjs_require__(11);\nvar PROTOTYPE = 'prototype';\nvar $export = function $export(type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    own = !IS_FORCED && target && target[key] !== undefined;\n    out = (own ? target : source)[key];\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if (target) redefine(target, key, out, type & $export.U);\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n$export.F = 1;\n$export.G = 2;\n$export.S = 4;\n$export.P = 8;\n$export.B = 16;\n$export.W = 32;\n$export.U = 64;\n$export.R = 128;\nmodule.exports = $export;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif (typeof __g == 'number') __g = global;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar hide = __w_pdfjs_require__(12);\nvar has = __w_pdfjs_require__(10);\nvar SRC = __w_pdfjs_require__(22)('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n__w_pdfjs_require__(7).inspectSource = function (it) {\n  return $toString.call(it);\n};\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(17);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1:\n      return function (a) {\n        return fn.call(that, a);\n      };\n    case 2:\n      return function (a, b) {\n        return fn.call(that, a, b);\n      };\n    case 3:\n      return function (a, b, c) {\n        return fn.call(that, a, b, c);\n      };\n  }\n  return function () {\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(16);\nvar createDesc = __w_pdfjs_require__(29);\nmodule.exports = __w_pdfjs_require__(13) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(14)(function () {\n  return Object.defineProperty({}, 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toString = {}.toString;\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(45);\nvar toPrimitive = __w_pdfjs_require__(46);\nvar dP = Object.defineProperty;\nexports.f = __w_pdfjs_require__(13) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) {}\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar IObject = __w_pdfjs_require__(30);\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    (0, _util.unreachable)('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n  };\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref) {\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var pdfFunctionFactory = arguments[3];\n\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          if ((0, _primitives.isDict)(res)) {\n            var colorSpaces = res.get('ColorSpace');\n            if ((0, _primitives.isDict)(colorSpaces)) {\n              var resCS = colorSpaces.get(cs.name);\n              if (resCS) {\n                if ((0, _primitives.isName)(resCS)) {\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n                }\n                cs = resCS;\n                break;\n              }\n            }\n          }\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $keys = __w_pdfjs_require__(98);\nvar enumBugKeys = __w_pdfjs_require__(53);\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar def = __w_pdfjs_require__(16).f;\nvar has = __w_pdfjs_require__(10);\nvar TAG = __w_pdfjs_require__(2)('toStringTag');\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n    configurable: true,\n    value: tag\n  });\n};\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar call = __w_pdfjs_require__(103);\nvar isArrayIter = __w_pdfjs_require__(104);\nvar anObject = __w_pdfjs_require__(8);\nvar toLength = __w_pdfjs_require__(31);\nvar getIterFn = __w_pdfjs_require__(105);\nvar BREAK = {};\nvar RETURN = {};\nvar _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () {\n    return iterable;\n  } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\n_exports.BREAK = BREAK;\n_exports.RETURN = RETURN;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ccitt_stream = __w_pdfjs_require__(134);\n\nvar _jbig2_stream = __w_pdfjs_require__(135);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _jpx_stream = __w_pdfjs_require__(138);\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar MAX_ADLER32_LENGTH = 5552;\nfunction computeAdler32(bytes) {\n  var bytesLength = bytes.length;\n  if (bytesLength >= MAX_ADLER32_LENGTH) {\n    throw new Error('computeAdler32: The input is too large.');\n  }\n  var a = 1,\n      b = 0;\n  for (var i = 0; i < bytesLength; ++i) {\n    a += bytes[i] & 0xFF;\n    b += a;\n  }\n  return b % 65521 << 16 | a % 65521;\n}\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref),\n          dictLength = void 0;\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      if (lexer.beginInlineImagePos !== -1) {\n        dictLength = stream.pos - lexer.beginInlineImagePos;\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length = void 0;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var cacheKey = void 0;\n      if (length < MAX_LENGTH_TO_CACHE && dictLength < MAX_ADLER32_LENGTH) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var initialStreamPos = stream.pos;\n        stream.pos = lexer.beginInlineImagePos;\n        var dictBytes = stream.getBytes(dictLength);\n        stream.pos = initialStreamPos;\n        cacheKey = computeAdler32(imageBytes) + '_' + computeAdler32(dictBytes);\n        var cacheEntry = this.imageCache[cacheKey];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (cacheKey !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + cacheKey;\n        this.imageCache[cacheKey] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n    this.beginInlineImagePos = -1;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      if (str === 'BI') {\n        this.beginInlineImagePos = this.stream.pos;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar document = __w_pdfjs_require__(6).document;\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(15);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;\n};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(15);\nvar TAG = __w_pdfjs_require__(2)('toStringTag');\nvar ARG = cof(function () {\n  return arguments;\n}()) == 'Arguments';\nvar tryGet = function tryGet(it, key) {\n  try {\n    return it[key];\n  } catch (e) {}\n};\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar shared = __w_pdfjs_require__(47)('keys');\nvar uid = __w_pdfjs_require__(22);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\n    throw TypeError(name + ': incorrect invocation!');\n  }\n  return it;\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(17);\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefine = __w_pdfjs_require__(9);\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    redefine(target, key, src[key], safe);\n  }return target;\n};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar META = __w_pdfjs_require__(22)('meta');\nvar isObject = __w_pdfjs_require__(3);\nvar has = __w_pdfjs_require__(10);\nvar setDesc = __w_pdfjs_require__(16).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__w_pdfjs_require__(14)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function setMeta(it) {\n  setDesc(it, META, {\n    value: {\n      i: 'O' + ++id,\n      w: {}\n    }\n  });\n};\nvar fastKey = function fastKey(it, create) {\n  if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return 'F';\n    if (!create) return 'E';\n    setMeta(it);\n  }\n  return it[META].i;\n};\nvar getWeak = function getWeak(it, create) {\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return true;\n    if (!create) return false;\n    setMeta(it);\n  }\n  return it[META].w;\n};\nvar onFreeze = function onFreeze(it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = {}.propertyIsEnumerable;\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _jpg = __w_pdfjs_require__(137);\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function isNodeJS() {\n  return (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process + '' === '[object process]';\n};\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(13) && !__w_pdfjs_require__(14)(function () {\n  return Object.defineProperty(__w_pdfjs_require__(28)('div'), 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toIObject = __w_pdfjs_require__(18);\nvar toLength = __w_pdfjs_require__(31);\nvar toAbsoluteIndex = __w_pdfjs_require__(84);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      if (value != value) return true;\n    } else for (; length > index; index++) {\n      if (IS_INCLUDES || index in O) {\n        if (O[index] === el) return IS_INCLUDES || index || 0;\n      }\n    }return !IS_INCLUDES && -1;\n  };\n};\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar UNSCOPABLES = __w_pdfjs_require__(2)('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) __w_pdfjs_require__(12)(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(33);\nvar test = {};\ntest[__w_pdfjs_require__(2)('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  __w_pdfjs_require__(9)(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(52);\nvar $export = __w_pdfjs_require__(5);\nvar redefine = __w_pdfjs_require__(9);\nvar hide = __w_pdfjs_require__(12);\nvar Iterators = __w_pdfjs_require__(19);\nvar $iterCreate = __w_pdfjs_require__(95);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar getPrototypeOf = __w_pdfjs_require__(99);\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys());\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar returnThis = function returnThis() {\n  return this;\n};\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function getMethod(kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }\n    return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      setToStringTag(IteratorPrototype, TAG, true);\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() {\n      return $native.call(this);\n    };\n  }\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = false;\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar document = __w_pdfjs_require__(6).document;\nmodule.exports = document && document.documentElement;\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $iterators = __w_pdfjs_require__(100);\nvar getKeys = __w_pdfjs_require__(24);\nvar redefine = __w_pdfjs_require__(9);\nvar global = __w_pdfjs_require__(6);\nvar hide = __w_pdfjs_require__(12);\nvar Iterators = __w_pdfjs_require__(19);\nvar wks = __w_pdfjs_require__(2);\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\nvar DOMIterables = {\n  CSSRuleList: true,\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true,\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true,\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) {\n      if (!proto[key]) redefine(proto, key, $iterators[key], true);\n    }\n  }\n}\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar aFunction = __w_pdfjs_require__(17);\nvar SPECIES = __w_pdfjs_require__(2)('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar invoke = __w_pdfjs_require__(106);\nvar html = __w_pdfjs_require__(54);\nvar cel = __w_pdfjs_require__(28);\nvar global = __w_pdfjs_require__(6);\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function run() {\n  var id = +this;\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function listener(event) {\n  run.call(event.data);\n};\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) {\n      args.push(arguments[i++]);\n    }queue[++counter] = function () {\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  if (__w_pdfjs_require__(15)(process) == 'process') {\n    defer = function defer(id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  } else if (Dispatch && Dispatch.now) {\n    defer = function defer(id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function defer(id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function defer(id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  } else {\n    defer = function defer(id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return {\n      e: false,\n      v: exec()\n    };\n  } catch (e) {\n    return {\n      e: true,\n      v: e\n    };\n  }\n};\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(3);\nvar newPromiseCapability = __w_pdfjs_require__(37);\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar SAFE_CLOSING = false;\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () {\n    SAFE_CLOSING = true;\n  };\n  Array.from(riter, function () {\n    throw 2;\n  });\n} catch (e) {}\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () {\n      return { done: safe = true };\n    };\n    arr[ITERATOR] = function () {\n      return iter;\n    };\n    exec(arr);\n  } catch (e) {}\n  return safe;\n};\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar IObject = __w_pdfjs_require__(30);\nvar toObject = __w_pdfjs_require__(35);\nvar toLength = __w_pdfjs_require__(31);\nvar asc = __w_pdfjs_require__(113);\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (; length > index; index++) {\n      if (NO_HOLES || index in self) {\n        val = self[index];\n        res = f(val, index, O);\n        if (TYPE) {\n          if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {\n            case 3:\n              return true;\n            case 5:\n              return val;\n            case 6:\n              return index;\n            case 2:\n              result.push(val);\n          } else if (IS_EVERY) return false;\n        }\n      }\n    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!chunksToRequest.includes(chunk)) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _chunked_stream = __w_pdfjs_require__(63);\n\nvar _crypto = __w_pdfjs_require__(68);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          if (labelDict.has('Type') && !(0, _primitives.isName)(labelDict.get('Type'), 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          if (labelDict.has('S')) {\n            var s = labelDict.get('S');\n            if (!(0, _primitives.isName)(s)) {\n              throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n            }\n            style = s.name;\n          } else {\n            style = null;\n          }\n          if (labelDict.has('P')) {\n            var p = labelDict.get('P');\n            if (!(0, _util.isString)(p)) {\n              throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n            }\n            prefix = (0, _util.stringToPDFString)(p);\n          } else {\n            prefix = '';\n          }\n          if (labelDict.has('St')) {\n            var st = labelDict.get('St');\n            if (!(Number.isInteger(st) && st >= 1)) {\n              throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n            }\n            currentIndex = st;\n          } else {\n            currentIndex = 1;\n          }\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n            currentLabel = '';\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          if (Number.isInteger(count) && count >= 0) {\n            var objId = currentNode.objId;\n            if (objId && !pageKidsCountCache.has(objId)) {\n              pageKidsCountCache.put(objId, count);\n            }\n            if (currentPageIndex + count <= pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            if ((0, _primitives.isName)(currentNode.get('Type'), 'Page') || !currentNode.has('Type') && currentNode.has('Contents')) {\n              if (currentPageIndex === pageIndex) {\n                capability.resolve([currentNode, null]);\n                return;\n              }\n              currentPageIndex++;\n              continue;\n            }\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if ((0, _primitives.isRefsEqual)(kid, kidRef)) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (!(0, _primitives.isDict)(kid)) {\n                throw new _util.FormatError('kid node must be a Dict.');\n              }\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n      var CHECK_CONTENT_LENGTH = 25;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var objBytes = new Uint8Array([111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = void 0,\n              startPos = position + token.length;\n          while (startPos < buffer.length) {\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n            contentLength = endPos - position;\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n            if (endobjRegExp.test(tokenStr)) {\n              break;\n            } else {\n              var objToken = nestedObjRegExp.exec(tokenStr);\n              if (objToken && objToken[1]) {\n                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                contentLength -= objToken[1].length;\n                break;\n              }\n            }\n            startPos += contentLength;\n          }\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(66);\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2]\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticallyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticallyStripe) {\n                unsupported.push('verticallyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _stream = __w_pdfjs_require__(4);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\n\nvar AESBaseCipher = function () {\n  function AESBaseCipher() {\n    _classCallCheck(this, AESBaseCipher);\n\n    if (this.constructor === AESBaseCipher) {\n      (0, _util.unreachable)('Cannot initialize AESBaseCipher.');\n    }\n    this._s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n    this._inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n    this._mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n    this._mixCol = new Uint8Array(256);\n    for (var i = 0; i < 256; i++) {\n      if (i < 128) {\n        this._mixCol[i] = i << 1;\n      } else {\n        this._mixCol[i] = i << 1 ^ 0x1b;\n      }\n    }\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n\n  _createClass(AESBaseCipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      (0, _util.unreachable)('Cannot call `_expandKey` on the base class');\n    }\n  }, {\n    key: '_decrypt',\n    value: function _decrypt(input, key) {\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var _j = 0; _j < 16; ++_j) {\n          state[_j] = this._inv_s[state[_j]];\n        }\n        for (var _j2 = 0, _k = i * 16; _j2 < 16; ++_j2, ++_k) {\n          state[_j2] ^= key[_k];\n        }\n        for (var _j3 = 0; _j3 < 16; _j3 += 4) {\n          var s0 = this._mix[state[_j3]];\n          var s1 = this._mix[state[_j3 + 1]];\n          var s2 = this._mix[state[_j3 + 2]];\n          var s3 = this._mix[state[_j3 + 3]];\n          t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n          state[_j3] = t >>> 24 & 0xFF;\n          state[_j3 + 1] = t >> 16 & 0xFF;\n          state[_j3 + 2] = t >> 8 & 0xFF;\n          state[_j3 + 3] = t & 0xFF;\n        }\n      }\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (var _j4 = 0; _j4 < 16; ++_j4) {\n        state[_j4] = this._inv_s[state[_j4]];\n        state[_j4] ^= key[_j4];\n      }\n      return state;\n    }\n  }, {\n    key: '_encrypt',\n    value: function _encrypt(input, key) {\n      var s = this._s;\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0; j < 16; ++j) {\n        state[j] ^= key[j];\n      }\n      for (var i = 1; i < this._cyclesOfRepetition; i++) {\n        for (var _j5 = 0; _j5 < 16; ++_j5) {\n          state[_j5] = s[state[_j5]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var _j6 = 0; _j6 < 16; _j6 += 4) {\n          var s0 = state[_j6 + 0];\n          var s1 = state[_j6 + 1];\n          var s2 = state[_j6 + 2];\n          var s3 = state[_j6 + 3];\n          t = s0 ^ s1 ^ s2 ^ s3;\n          state[_j6 + 0] ^= t ^ this._mixCol[s0 ^ s1];\n          state[_j6 + 1] ^= t ^ this._mixCol[s1 ^ s2];\n          state[_j6 + 2] ^= t ^ this._mixCol[s2 ^ s3];\n          state[_j6 + 3] ^= t ^ this._mixCol[s3 ^ s0];\n        }\n        for (var _j7 = 0, k = i * 16; _j7 < 16; ++_j7, ++k) {\n          state[_j7] ^= key[k];\n        }\n      }\n      for (var _j8 = 0; _j8 < 16; ++_j8) {\n        state[_j8] = s[state[_j8]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var _j9 = 0, _k2 = this._keySize; _j9 < 16; ++_j9, ++_k2) {\n        state[_j9] ^= key[_k2];\n      }\n      return state;\n    }\n  }, {\n    key: '_decryptBlock2',\n    value: function _decryptBlock2(data, finalize) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [],\n          iv = this.iv;\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        var plain = this._decrypt(buffer, this._key);\n        for (var j = 0; j < 16; ++j) {\n          plain[j] ^= iv[j];\n        }\n        iv = buffer;\n        result.push(plain);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      if (finalize) {\n        var lastBlock = result[result.length - 1];\n        var psLen = lastBlock[15];\n        if (psLen <= 16) {\n          for (var _i = 15, ii = 16 - psLen; _i >= ii; --_i) {\n            if (lastBlock[_i] !== psLen) {\n              psLen = 0;\n              break;\n            }\n          }\n          outputLength -= psLen;\n          result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n        }\n      }\n      var output = new Uint8Array(outputLength);\n      for (var _i2 = 0, _j10 = 0, _ii = result.length; _i2 < _ii; ++_i2, _j10 += 16) {\n        output.set(result[_i2], _j10);\n      }\n      return output;\n    }\n  }, {\n    key: 'decryptBlock',\n    value: function decryptBlock(data, finalize) {\n      var iv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array(0);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = this._decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    }\n  }, {\n    key: 'encrypt',\n    value: function encrypt(data, iv) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (var j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = this._encrypt(buffer, this._key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (var _i3 = 0, _j11 = 0, ii = result.length; _i3 < ii; ++_i3, _j11 += 16) {\n        output.set(result[_i3], _j11);\n      }\n      return output;\n    }\n  }]);\n\n  return AESBaseCipher;\n}();\n\nvar AES128Cipher = function (_AESBaseCipher) {\n  _inherits(AES128Cipher, _AESBaseCipher);\n\n  function AES128Cipher(key) {\n    _classCallCheck(this, AES128Cipher);\n\n    var _this = _possibleConstructorReturn(this, (AES128Cipher.__proto__ || Object.getPrototypeOf(AES128Cipher)).call(this));\n\n    _this._cyclesOfRepetition = 10;\n    _this._keySize = 160;\n    _this._rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n    _this._key = _this._expandKey(key);\n    return _this;\n  }\n\n  _createClass(AES128Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 176;\n      var s = this._s;\n      var rcon = this._rcon;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      for (var j = 16, i = 1; j < b; ++i) {\n        var t1 = result[j - 3];\n        var t2 = result[j - 2];\n        var t3 = result[j - 1];\n        var t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ rcon[i];\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 16];\n          j++;\n          result[j] = t2 ^= result[j - 16];\n          j++;\n          result[j] = t3 ^= result[j - 16];\n          j++;\n          result[j] = t4 ^= result[j - 16];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES128Cipher;\n}(AESBaseCipher);\n\nvar AES256Cipher = function (_AESBaseCipher2) {\n  _inherits(AES256Cipher, _AESBaseCipher2);\n\n  function AES256Cipher(key) {\n    _classCallCheck(this, AES256Cipher);\n\n    var _this2 = _possibleConstructorReturn(this, (AES256Cipher.__proto__ || Object.getPrototypeOf(AES256Cipher)).call(this));\n\n    _this2._cyclesOfRepetition = 14;\n    _this2._keySize = 224;\n    _this2._key = _this2._expandKey(key);\n    return _this2;\n  }\n\n  _createClass(AES256Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 240;\n      var s = this._s;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      var r = 1;\n      var t1 = void 0,\n          t2 = void 0,\n          t3 = void 0,\n          t4 = void 0;\n      for (var j = 32, i = 1; j < b; ++i) {\n        if (j % 32 === 16) {\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n        } else if (j % 32 === 0) {\n          t1 = result[j - 3];\n          t2 = result[j - 2];\n          t3 = result[j - 1];\n          t4 = result[j - 4];\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n          t1 = t1 ^ r;\n          if ((r <<= 1) >= 256) {\n            r = (r ^ 0x1b) & 0xFF;\n          }\n        }\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 32];\n          j++;\n          result[j] = t2 ^= result[j - 32];\n          j++;\n          result[j] = t3 ^= result[j - 32];\n          j++;\n          result[j] = t4 ^= result[j - 32];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES256Cipher;\n}(AESBaseCipher);\n\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _charsets = __w_pdfjs_require__(143);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['Calibri'] = 'Helvetica';\n  t['Calibri-Bold'] = 'Helvetica-Bold';\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n  t[1] = 32;\n  t[4] = 65;\n  t[17] = 66;\n  t[18] = 67;\n  t[24] = 68;\n  t[28] = 69;\n  t[38] = 70;\n  t[39] = 71;\n  t[44] = 72;\n  t[47] = 73;\n  t[58] = 74;\n  t[60] = 75;\n  t[62] = 76;\n  t[68] = 77;\n  t[69] = 78;\n  t[75] = 79;\n  t[87] = 80;\n  t[89] = 81;\n  t[90] = 82;\n  t[94] = 83;\n  t[100] = 84;\n  t[104] = 85;\n  t[115] = 86;\n  t[116] = 87;\n  t[121] = 88;\n  t[122] = 89;\n  t[127] = 90;\n  t[258] = 97;\n  t[268] = 261;\n  t[271] = 98;\n  t[272] = 99;\n  t[273] = 263;\n  t[282] = 100;\n  t[286] = 101;\n  t[295] = 281;\n  t[296] = 102;\n  t[336] = 103;\n  t[346] = 104;\n  t[349] = 105;\n  t[361] = 106;\n  t[364] = 107;\n  t[367] = 108;\n  t[371] = 322;\n  t[373] = 109;\n  t[374] = 110;\n  t[381] = 111;\n  t[383] = 243;\n  t[393] = 112;\n  t[395] = 113;\n  t[396] = 114;\n  t[400] = 115;\n  t[401] = 347;\n  t[410] = 116;\n  t[437] = 117;\n  t[448] = 118;\n  t[449] = 119;\n  t[454] = 120;\n  t[455] = 121;\n  t[460] = 122;\n  t[463] = 380;\n  t[853] = 44;\n  t[855] = 58;\n  t[856] = 46;\n  t[876] = 47;\n  t[878] = 45;\n  t[882] = 45;\n  t[894] = 40;\n  t[895] = 41;\n  t[896] = 91;\n  t[897] = 93;\n  t[923] = 64;\n  t[1004] = 48;\n  t[1005] = 49;\n  t[1006] = 50;\n  t[1007] = 51;\n  t[1008] = 52;\n  t[1009] = 53;\n  t[1010] = 54;\n  t[1011] = 55;\n  t[1012] = 56;\n  t[1013] = 57;\n  t[1081] = 37;\n  t[1085] = 43;\n  t[1086] = 45;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\xA8'] = ' \\u0308';\n  t['\\xAF'] = ' \\u0304';\n  t['\\xB4'] = ' \\u0301';\n  t['\\xB5'] = '\\u03BC';\n  t['\\xB8'] = ' \\u0327';\n  t['\\u0132'] = 'IJ';\n  t['\\u0133'] = 'ij';\n  t['\\u013F'] = 'L\\xB7';\n  t['\\u0140'] = 'l\\xB7';\n  t['\\u0149'] = '\\u02BCn';\n  t['\\u017F'] = 's';\n  t['\\u01C4'] = 'D\\u017D';\n  t['\\u01C5'] = 'D\\u017E';\n  t['\\u01C6'] = 'd\\u017E';\n  t['\\u01C7'] = 'LJ';\n  t['\\u01C8'] = 'Lj';\n  t['\\u01C9'] = 'lj';\n  t['\\u01CA'] = 'NJ';\n  t['\\u01CB'] = 'Nj';\n  t['\\u01CC'] = 'nj';\n  t['\\u01F1'] = 'DZ';\n  t['\\u01F2'] = 'Dz';\n  t['\\u01F3'] = 'dz';\n  t['\\u02D8'] = ' \\u0306';\n  t['\\u02D9'] = ' \\u0307';\n  t['\\u02DA'] = ' \\u030A';\n  t['\\u02DB'] = ' \\u0328';\n  t['\\u02DC'] = ' \\u0303';\n  t['\\u02DD'] = ' \\u030B';\n  t['\\u037A'] = ' \\u0345';\n  t['\\u0384'] = ' \\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = 'a\\u02BE';\n  t['\\u1FBD'] = ' \\u0313';\n  t['\\u1FBF'] = ' \\u0313';\n  t['\\u1FC0'] = ' \\u0342';\n  t['\\u1FFE'] = ' \\u0314';\n  t['\\u2002'] = ' ';\n  t['\\u2003'] = ' ';\n  t['\\u2004'] = ' ';\n  t['\\u2005'] = ' ';\n  t['\\u2006'] = ' ';\n  t['\\u2008'] = ' ';\n  t['\\u2009'] = ' ';\n  t['\\u200A'] = ' ';\n  t['\\u2017'] = ' \\u0333';\n  t['\\u2024'] = '.';\n  t['\\u2025'] = '..';\n  t['\\u2026'] = '...';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '!!';\n  t['\\u203E'] = ' \\u0305';\n  t['\\u2047'] = '??';\n  t['\\u2048'] = '?!';\n  t['\\u2049'] = '!?';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = ' ';\n  t['\\u20A8'] = 'Rs';\n  t['\\u2100'] = 'a/c';\n  t['\\u2101'] = 'a/s';\n  t['\\u2103'] = '\\xB0C';\n  t['\\u2105'] = 'c/o';\n  t['\\u2106'] = 'c/u';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\xB0F';\n  t['\\u2116'] = 'No';\n  t['\\u2121'] = 'TEL';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = 'FAX';\n  t['\\u2160'] = 'I';\n  t['\\u2161'] = 'II';\n  t['\\u2162'] = 'III';\n  t['\\u2163'] = 'IV';\n  t['\\u2164'] = 'V';\n  t['\\u2165'] = 'VI';\n  t['\\u2166'] = 'VII';\n  t['\\u2167'] = 'VIII';\n  t['\\u2168'] = 'IX';\n  t['\\u2169'] = 'X';\n  t['\\u216A'] = 'XI';\n  t['\\u216B'] = 'XII';\n  t['\\u216C'] = 'L';\n  t['\\u216D'] = 'C';\n  t['\\u216E'] = 'D';\n  t['\\u216F'] = 'M';\n  t['\\u2170'] = 'i';\n  t['\\u2171'] = 'ii';\n  t['\\u2172'] = 'iii';\n  t['\\u2173'] = 'iv';\n  t['\\u2174'] = 'v';\n  t['\\u2175'] = 'vi';\n  t['\\u2176'] = 'vii';\n  t['\\u2177'] = 'viii';\n  t['\\u2178'] = 'ix';\n  t['\\u2179'] = 'x';\n  t['\\u217A'] = 'xi';\n  t['\\u217B'] = 'xii';\n  t['\\u217C'] = 'l';\n  t['\\u217D'] = 'c';\n  t['\\u217E'] = 'd';\n  t['\\u217F'] = 'm';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '(1)';\n  t['\\u2475'] = '(2)';\n  t['\\u2476'] = '(3)';\n  t['\\u2477'] = '(4)';\n  t['\\u2478'] = '(5)';\n  t['\\u2479'] = '(6)';\n  t['\\u247A'] = '(7)';\n  t['\\u247B'] = '(8)';\n  t['\\u247C'] = '(9)';\n  t['\\u247D'] = '(10)';\n  t['\\u247E'] = '(11)';\n  t['\\u247F'] = '(12)';\n  t['\\u2480'] = '(13)';\n  t['\\u2481'] = '(14)';\n  t['\\u2482'] = '(15)';\n  t['\\u2483'] = '(16)';\n  t['\\u2484'] = '(17)';\n  t['\\u2485'] = '(18)';\n  t['\\u2486'] = '(19)';\n  t['\\u2487'] = '(20)';\n  t['\\u2488'] = '1.';\n  t['\\u2489'] = '2.';\n  t['\\u248A'] = '3.';\n  t['\\u248B'] = '4.';\n  t['\\u248C'] = '5.';\n  t['\\u248D'] = '6.';\n  t['\\u248E'] = '7.';\n  t['\\u248F'] = '8.';\n  t['\\u2490'] = '9.';\n  t['\\u2491'] = '10.';\n  t['\\u2492'] = '11.';\n  t['\\u2493'] = '12.';\n  t['\\u2494'] = '13.';\n  t['\\u2495'] = '14.';\n  t['\\u2496'] = '15.';\n  t['\\u2497'] = '16.';\n  t['\\u2498'] = '17.';\n  t['\\u2499'] = '18.';\n  t['\\u249A'] = '19.';\n  t['\\u249B'] = '20.';\n  t['\\u249C'] = '(a)';\n  t['\\u249D'] = '(b)';\n  t['\\u249E'] = '(c)';\n  t['\\u249F'] = '(d)';\n  t['\\u24A0'] = '(e)';\n  t['\\u24A1'] = '(f)';\n  t['\\u24A2'] = '(g)';\n  t['\\u24A3'] = '(h)';\n  t['\\u24A4'] = '(i)';\n  t['\\u24A5'] = '(j)';\n  t['\\u24A6'] = '(k)';\n  t['\\u24A7'] = '(l)';\n  t['\\u24A8'] = '(m)';\n  t['\\u24A9'] = '(n)';\n  t['\\u24AA'] = '(o)';\n  t['\\u24AB'] = '(p)';\n  t['\\u24AC'] = '(q)';\n  t['\\u24AD'] = '(r)';\n  t['\\u24AE'] = '(s)';\n  t['\\u24AF'] = '(t)';\n  t['\\u24B0'] = '(u)';\n  t['\\u24B1'] = '(v)';\n  t['\\u24B2'] = '(w)';\n  t['\\u24B3'] = '(x)';\n  t['\\u24B4'] = '(y)';\n  t['\\u24B5'] = '(z)';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '::=';\n  t['\\u2A75'] = '==';\n  t['\\u2A76'] = '===';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = ' \\u3099';\n  t['\\u309C'] = ' \\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '(\\u1100)';\n  t['\\u3201'] = '(\\u1102)';\n  t['\\u3202'] = '(\\u1103)';\n  t['\\u3203'] = '(\\u1105)';\n  t['\\u3204'] = '(\\u1106)';\n  t['\\u3205'] = '(\\u1107)';\n  t['\\u3206'] = '(\\u1109)';\n  t['\\u3207'] = '(\\u110B)';\n  t['\\u3208'] = '(\\u110C)';\n  t['\\u3209'] = '(\\u110E)';\n  t['\\u320A'] = '(\\u110F)';\n  t['\\u320B'] = '(\\u1110)';\n  t['\\u320C'] = '(\\u1111)';\n  t['\\u320D'] = '(\\u1112)';\n  t['\\u320E'] = '(\\u1100\\u1161)';\n  t['\\u320F'] = '(\\u1102\\u1161)';\n  t['\\u3210'] = '(\\u1103\\u1161)';\n  t['\\u3211'] = '(\\u1105\\u1161)';\n  t['\\u3212'] = '(\\u1106\\u1161)';\n  t['\\u3213'] = '(\\u1107\\u1161)';\n  t['\\u3214'] = '(\\u1109\\u1161)';\n  t['\\u3215'] = '(\\u110B\\u1161)';\n  t['\\u3216'] = '(\\u110C\\u1161)';\n  t['\\u3217'] = '(\\u110E\\u1161)';\n  t['\\u3218'] = '(\\u110F\\u1161)';\n  t['\\u3219'] = '(\\u1110\\u1161)';\n  t['\\u321A'] = '(\\u1111\\u1161)';\n  t['\\u321B'] = '(\\u1112\\u1161)';\n  t['\\u321C'] = '(\\u110C\\u116E)';\n  t['\\u321D'] = '(\\u110B\\u1169\\u110C\\u1165\\u11AB)';\n  t['\\u321E'] = '(\\u110B\\u1169\\u1112\\u116E)';\n  t['\\u3220'] = '(\\u4E00)';\n  t['\\u3221'] = '(\\u4E8C)';\n  t['\\u3222'] = '(\\u4E09)';\n  t['\\u3223'] = '(\\u56DB)';\n  t['\\u3224'] = '(\\u4E94)';\n  t['\\u3225'] = '(\\u516D)';\n  t['\\u3226'] = '(\\u4E03)';\n  t['\\u3227'] = '(\\u516B)';\n  t['\\u3228'] = '(\\u4E5D)';\n  t['\\u3229'] = '(\\u5341)';\n  t['\\u322A'] = '(\\u6708)';\n  t['\\u322B'] = '(\\u706B)';\n  t['\\u322C'] = '(\\u6C34)';\n  t['\\u322D'] = '(\\u6728)';\n  t['\\u322E'] = '(\\u91D1)';\n  t['\\u322F'] = '(\\u571F)';\n  t['\\u3230'] = '(\\u65E5)';\n  t['\\u3231'] = '(\\u682A)';\n  t['\\u3232'] = '(\\u6709)';\n  t['\\u3233'] = '(\\u793E)';\n  t['\\u3234'] = '(\\u540D)';\n  t['\\u3235'] = '(\\u7279)';\n  t['\\u3236'] = '(\\u8CA1)';\n  t['\\u3237'] = '(\\u795D)';\n  t['\\u3238'] = '(\\u52B4)';\n  t['\\u3239'] = '(\\u4EE3)';\n  t['\\u323A'] = '(\\u547C)';\n  t['\\u323B'] = '(\\u5B66)';\n  t['\\u323C'] = '(\\u76E3)';\n  t['\\u323D'] = '(\\u4F01)';\n  t['\\u323E'] = '(\\u8CC7)';\n  t['\\u323F'] = '(\\u5354)';\n  t['\\u3240'] = '(\\u796D)';\n  t['\\u3241'] = '(\\u4F11)';\n  t['\\u3242'] = '(\\u81EA)';\n  t['\\u3243'] = '(\\u81F3)';\n  t['\\u32C0'] = '1\\u6708';\n  t['\\u32C1'] = '2\\u6708';\n  t['\\u32C2'] = '3\\u6708';\n  t['\\u32C3'] = '4\\u6708';\n  t['\\u32C4'] = '5\\u6708';\n  t['\\u32C5'] = '6\\u6708';\n  t['\\u32C6'] = '7\\u6708';\n  t['\\u32C7'] = '8\\u6708';\n  t['\\u32C8'] = '9\\u6708';\n  t['\\u32C9'] = '10\\u6708';\n  t['\\u32CA'] = '11\\u6708';\n  t['\\u32CB'] = '12\\u6708';\n  t['\\u3358'] = '0\\u70B9';\n  t['\\u3359'] = '1\\u70B9';\n  t['\\u335A'] = '2\\u70B9';\n  t['\\u335B'] = '3\\u70B9';\n  t['\\u335C'] = '4\\u70B9';\n  t['\\u335D'] = '5\\u70B9';\n  t['\\u335E'] = '6\\u70B9';\n  t['\\u335F'] = '7\\u70B9';\n  t['\\u3360'] = '8\\u70B9';\n  t['\\u3361'] = '9\\u70B9';\n  t['\\u3362'] = '10\\u70B9';\n  t['\\u3363'] = '11\\u70B9';\n  t['\\u3364'] = '12\\u70B9';\n  t['\\u3365'] = '13\\u70B9';\n  t['\\u3366'] = '14\\u70B9';\n  t['\\u3367'] = '15\\u70B9';\n  t['\\u3368'] = '16\\u70B9';\n  t['\\u3369'] = '17\\u70B9';\n  t['\\u336A'] = '18\\u70B9';\n  t['\\u336B'] = '19\\u70B9';\n  t['\\u336C'] = '20\\u70B9';\n  t['\\u336D'] = '21\\u70B9';\n  t['\\u336E'] = '22\\u70B9';\n  t['\\u336F'] = '23\\u70B9';\n  t['\\u3370'] = '24\\u70B9';\n  t['\\u33E0'] = '1\\u65E5';\n  t['\\u33E1'] = '2\\u65E5';\n  t['\\u33E2'] = '3\\u65E5';\n  t['\\u33E3'] = '4\\u65E5';\n  t['\\u33E4'] = '5\\u65E5';\n  t['\\u33E5'] = '6\\u65E5';\n  t['\\u33E6'] = '7\\u65E5';\n  t['\\u33E7'] = '8\\u65E5';\n  t['\\u33E8'] = '9\\u65E5';\n  t['\\u33E9'] = '10\\u65E5';\n  t['\\u33EA'] = '11\\u65E5';\n  t['\\u33EB'] = '12\\u65E5';\n  t['\\u33EC'] = '13\\u65E5';\n  t['\\u33ED'] = '14\\u65E5';\n  t['\\u33EE'] = '15\\u65E5';\n  t['\\u33EF'] = '16\\u65E5';\n  t['\\u33F0'] = '17\\u65E5';\n  t['\\u33F1'] = '18\\u65E5';\n  t['\\u33F2'] = '19\\u65E5';\n  t['\\u33F3'] = '20\\u65E5';\n  t['\\u33F4'] = '21\\u65E5';\n  t['\\u33F5'] = '22\\u65E5';\n  t['\\u33F6'] = '23\\u65E5';\n  t['\\u33F7'] = '24\\u65E5';\n  t['\\u33F8'] = '25\\u65E5';\n  t['\\u33F9'] = '26\\u65E5';\n  t['\\u33FA'] = '27\\u65E5';\n  t['\\u33FB'] = '28\\u65E5';\n  t['\\u33FC'] = '29\\u65E5';\n  t['\\u33FD'] = '30\\u65E5';\n  t['\\u33FE'] = '31\\u65E5';\n  t['\\uFB00'] = 'ff';\n  t['\\uFB01'] = 'fi';\n  t['\\uFB02'] = 'fl';\n  t['\\uFB03'] = 'ffi';\n  t['\\uFB04'] = 'ffl';\n  t['\\uFB05'] = '\\u017Ft';\n  t['\\uFB06'] = 'st';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = ' \\u064C\\u0651';\n  t['\\uFC5F'] = ' \\u064D\\u0651';\n  t['\\uFC60'] = ' \\u064E\\u0651';\n  t['\\uFC61'] = ' \\u064F\\u0651';\n  t['\\uFC62'] = ' \\u0650\\u0651';\n  t['\\uFC63'] = ' \\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '_';\n  t['\\uFE4E'] = '_';\n  t['\\uFE4F'] = '_';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ps_parser = __w_pdfjs_require__(149);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }, {\n    key: 'createFromIR',\n    value: function createFromIR(IR) {\n      return PDFFunction.fromIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        IR: IR\n      });\n    }\n  }, {\n    key: 'createIR',\n    value: function createIR(fn) {\n      return PDFFunction.getIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.getIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(this.fromIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          IR: fnsIR[i]\n        }));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    (0, _util.unreachable)('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pdfjsVersion = '2.0.489';\nvar pdfjsBuild = '7d7bc80e';\nvar pdfjsCoreWorker = __w_pdfjs_require__(74);\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _pdf_manager = __w_pdfjs_require__(132);\n\nvar _is_node = __w_pdfjs_require__(44);\n\nvar _is_node2 = _interopRequireDefault(_is_node);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.489';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              numPages = _ref4[0],\n              fingerprint = _ref4[1];\n\n          loadDocumentCapability.resolve({\n            numPages: numPages,\n            fingerprint: fingerprint\n          });\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar globalScope = __w_pdfjs_require__(76);\nif (!globalScope._pdfjsCompatibilityChecked) {\n  globalScope._pdfjsCompatibilityChecked = true;\n  var isNodeJS = __w_pdfjs_require__(44);\n  var hasDOM = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object';\n  (function checkNodeBtoa() {\n    if (globalScope.btoa || !isNodeJS()) {\n      return;\n    }\n    globalScope.btoa = function (chars) {\n      return Buffer.from(chars, 'binary').toString('base64');\n    };\n  })();\n  (function checkNodeAtob() {\n    if (globalScope.atob || !isNodeJS()) {\n      return;\n    }\n    globalScope.atob = function (input) {\n      return Buffer.from(input, 'base64').toString('binary');\n    };\n  })();\n  (function checkCurrentScript() {\n    if (!hasDOM) {\n      return;\n    }\n    if ('currentScript' in document) {\n      return;\n    }\n    Object.defineProperty(document, 'currentScript', {\n      get: function get() {\n        var scripts = document.getElementsByTagName('script');\n        return scripts[scripts.length - 1];\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n  })();\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== 'undefined') {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n  (function checkStringIncludes() {\n    if (String.prototype.includes) {\n      return;\n    }\n    __w_pdfjs_require__(77);\n  })();\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    __w_pdfjs_require__(82);\n  })();\n  (function checkMathLog2() {\n    if (Math.log2) {\n      return;\n    }\n    Math.log2 = __w_pdfjs_require__(85);\n  })();\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = __w_pdfjs_require__(87);\n  })();\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = __w_pdfjs_require__(89);\n  })();\n  (function checkPromise() {\n    if (globalScope.Promise) {\n      return;\n    }\n    globalScope.Promise = __w_pdfjs_require__(92);\n  })();\n  (function checkWeakMap() {\n    if (globalScope.WeakMap) {\n      return;\n    }\n    globalScope.WeakMap = __w_pdfjs_require__(111);\n  })();\n  (function checkURLConstructor() {\n    var hasWorkingUrl = false;\n    try {\n      if (typeof URL === 'function' && _typeof(URL.prototype) === 'object' && 'origin' in URL.prototype) {\n        var u = new URL('b', 'http://a');\n        u.pathname = 'c%20d';\n        hasWorkingUrl = u.href === 'http://a/c%20d';\n      }\n    } catch (e) {}\n    if (hasWorkingUrl) {\n      return;\n    }\n    var relative = Object.create(null);\n    relative['ftp'] = 21;\n    relative['file'] = 0;\n    relative['gopher'] = 70;\n    relative['http'] = 80;\n    relative['https'] = 443;\n    relative['ws'] = 80;\n    relative['wss'] = 443;\n    var relativePathDotMapping = Object.create(null);\n    relativePathDotMapping['%2e'] = '.';\n    relativePathDotMapping['.%2e'] = '..';\n    relativePathDotMapping['%2e.'] = '..';\n    relativePathDotMapping['%2e%2e'] = '..';\n    function isRelativeScheme(scheme) {\n      return relative[scheme] !== undefined;\n    }\n    function invalid() {\n      clear.call(this);\n      this._isInvalid = true;\n    }\n    function IDNAToASCII(h) {\n      if (h === '') {\n        invalid.call(this);\n      }\n      return h.toLowerCase();\n    }\n    function percentEscape(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    function percentEscapeQuery(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    var EOF,\n        ALPHA = /[a-zA-Z]/,\n        ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n    function parse(input, stateOverride, base) {\n      function err(message) {\n        errors.push(message);\n      }\n      var state = stateOverride || 'scheme start',\n          cursor = 0,\n          buffer = '',\n          seenAt = false,\n          seenBracket = false,\n          errors = [];\n      loop: while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n        var c = input[cursor];\n        switch (state) {\n          case 'scheme start':\n            if (c && ALPHA.test(c)) {\n              buffer += c.toLowerCase();\n              state = 'scheme';\n            } else if (!stateOverride) {\n              buffer = '';\n              state = 'no scheme';\n              continue;\n            } else {\n              err('Invalid scheme.');\n              break loop;\n            }\n            break;\n          case 'scheme':\n            if (c && ALPHANUMERIC.test(c)) {\n              buffer += c.toLowerCase();\n            } else if (c === ':') {\n              this._scheme = buffer;\n              buffer = '';\n              if (stateOverride) {\n                break loop;\n              }\n              if (isRelativeScheme(this._scheme)) {\n                this._isRelative = true;\n              }\n              if (this._scheme === 'file') {\n                state = 'relative';\n              } else if (this._isRelative && base && base._scheme === this._scheme) {\n                state = 'relative or authority';\n              } else if (this._isRelative) {\n                state = 'authority first slash';\n              } else {\n                state = 'scheme data';\n              }\n            } else if (!stateOverride) {\n              buffer = '';\n              cursor = 0;\n              state = 'no scheme';\n              continue;\n            } else if (c === EOF) {\n              break loop;\n            } else {\n              err('Code point not allowed in scheme: ' + c);\n              break loop;\n            }\n            break;\n          case 'scheme data':\n            if (c === '?') {\n              this._query = '?';\n              state = 'query';\n            } else if (c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else {\n              if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n                this._schemeData += percentEscape(c);\n              }\n            }\n            break;\n          case 'no scheme':\n            if (!base || !isRelativeScheme(base._scheme)) {\n              err('Missing scheme.');\n              invalid.call(this);\n            } else {\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative or authority':\n            if (c === '/' && input[cursor + 1] === '/') {\n              state = 'authority ignore slashes';\n            } else {\n              err('Expected /, got: ' + c);\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative':\n            this._isRelative = true;\n            if (this._scheme !== 'file') {\n              this._scheme = base._scheme;\n            }\n            if (c === EOF) {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._username = base._username;\n              this._password = base._password;\n              break loop;\n            } else if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              state = 'relative slash';\n            } else if (c === '?') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = '?';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'query';\n            } else if (c === '#') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._fragment = '#';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'fragment';\n            } else {\n              var nextC = input[cursor + 1];\n              var nextNextC = input[cursor + 2];\n              if (this._scheme !== 'file' || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || nextNextC !== EOF && nextNextC !== '/' && nextNextC !== '\\\\' && nextNextC !== '?' && nextNextC !== '#') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n                this._path = base._path.slice();\n                this._path.pop();\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'relative slash':\n            if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              if (this._scheme === 'file') {\n                state = 'file host';\n              } else {\n                state = 'authority ignore slashes';\n              }\n            } else {\n              if (this._scheme !== 'file') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'authority first slash':\n            if (c === '/') {\n              state = 'authority second slash';\n            } else {\n              err('Expected \\'/\\', got: ' + c);\n              state = 'authority ignore slashes';\n              continue;\n            }\n            break;\n          case 'authority second slash':\n            state = 'authority ignore slashes';\n            if (c !== '/') {\n              err('Expected \\'/\\', got: ' + c);\n              continue;\n            }\n            break;\n          case 'authority ignore slashes':\n            if (c !== '/' && c !== '\\\\') {\n              state = 'authority';\n              continue;\n            } else {\n              err('Expected authority, got: ' + c);\n            }\n            break;\n          case 'authority':\n            if (c === '@') {\n              if (seenAt) {\n                err('@ already seen.');\n                buffer += '%40';\n              }\n              seenAt = true;\n              for (var i = 0; i < buffer.length; i++) {\n                var cp = buffer[i];\n                if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n                  err('Invalid whitespace in authority.');\n                  continue;\n                }\n                if (cp === ':' && this._password === null) {\n                  this._password = '';\n                  continue;\n                }\n                var tempC = percentEscape(cp);\n                if (this._password !== null) {\n                  this._password += tempC;\n                } else {\n                  this._username += tempC;\n                }\n              }\n              buffer = '';\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              cursor -= buffer.length;\n              buffer = '';\n              state = 'host';\n              continue;\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'file host':\n            if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n                state = 'relative path';\n              } else if (buffer.length === 0) {\n                state = 'relative path start';\n              } else {\n                this._host = IDNAToASCII.call(this, buffer);\n                buffer = '';\n                state = 'relative path start';\n              }\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid whitespace in file host.');\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'host':\n          case 'hostname':\n            if (c === ':' && !seenBracket) {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'port';\n              if (stateOverride === 'hostname') {\n                break loop;\n              }\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'relative path start';\n              if (stateOverride) {\n                break loop;\n              }\n              continue;\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              if (c === '[') {\n                seenBracket = true;\n              } else if (c === ']') {\n                seenBracket = false;\n              }\n              buffer += c;\n            } else {\n              err('Invalid code point in host/hostname: ' + c);\n            }\n            break;\n          case 'port':\n            if (/[0-9]/.test(c)) {\n              buffer += c;\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n              if (buffer !== '') {\n                var temp = parseInt(buffer, 10);\n                if (temp !== relative[this._scheme]) {\n                  this._port = temp + '';\n                }\n                buffer = '';\n              }\n              if (stateOverride) {\n                break loop;\n              }\n              state = 'relative path start';\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid code point in port: ' + c);\n            } else {\n              invalid.call(this);\n            }\n            break;\n          case 'relative path start':\n            if (c === '\\\\') {\n              err('\\'\\\\\\' not allowed in path.');\n            }\n            state = 'relative path';\n            if (c !== '/' && c !== '\\\\') {\n              continue;\n            }\n            break;\n          case 'relative path':\n            if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n              if (c === '\\\\') {\n                err('\\\\ not allowed in relative path.');\n              }\n              var tmp;\n              if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n                buffer = tmp;\n              }\n              if (buffer === '..') {\n                this._path.pop();\n                if (c !== '/' && c !== '\\\\') {\n                  this._path.push('');\n                }\n              } else if (buffer === '.' && c !== '/' && c !== '\\\\') {\n                this._path.push('');\n              } else if (buffer !== '.') {\n                if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n                  buffer = buffer[0] + ':';\n                }\n                this._path.push(buffer);\n              }\n              buffer = '';\n              if (c === '?') {\n                this._query = '?';\n                state = 'query';\n              } else if (c === '#') {\n                this._fragment = '#';\n                state = 'fragment';\n              }\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              buffer += percentEscape(c);\n            }\n            break;\n          case 'query':\n            if (!stateOverride && c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._query += percentEscapeQuery(c);\n            }\n            break;\n          case 'fragment':\n            if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._fragment += c;\n            }\n            break;\n        }\n        cursor++;\n      }\n    }\n    function clear() {\n      this._scheme = '';\n      this._schemeData = '';\n      this._username = '';\n      this._password = null;\n      this._host = '';\n      this._port = '';\n      this._path = [];\n      this._query = '';\n      this._fragment = '';\n      this._isInvalid = false;\n      this._isRelative = false;\n    }\n    function JURL(url, base) {\n      if (base !== undefined && !(base instanceof JURL)) {\n        base = new JURL(String(base));\n      }\n      this._url = url;\n      clear.call(this);\n      var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n      parse.call(this, input, null, base);\n    }\n    JURL.prototype = {\n      toString: function toString() {\n        return this.href;\n      },\n\n      get href() {\n        if (this._isInvalid) {\n          return this._url;\n        }\n        var authority = '';\n        if (this._username !== '' || this._password !== null) {\n          authority = this._username + (this._password !== null ? ':' + this._password : '') + '@';\n        }\n        return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n      },\n      set href(value) {\n        clear.call(this);\n        parse.call(this, value);\n      },\n      get protocol() {\n        return this._scheme + ':';\n      },\n      set protocol(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        parse.call(this, value + ':', 'scheme start');\n      },\n      get host() {\n        return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n      },\n      set host(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'host');\n      },\n      get hostname() {\n        return this._host;\n      },\n      set hostname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'hostname');\n      },\n      get port() {\n        return this._port;\n      },\n      set port(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'port');\n      },\n      get pathname() {\n        return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n      },\n      set pathname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._path = [];\n        parse.call(this, value, 'relative path start');\n      },\n      get search() {\n        return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n      },\n      set search(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._query = '?';\n        if (value[0] === '?') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'query');\n      },\n      get hash() {\n        return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n      },\n      set hash(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        this._fragment = '#';\n        if (value[0] === '#') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'fragment');\n      },\n      get origin() {\n        var host;\n        if (this._isInvalid || !this._scheme) {\n          return '';\n        }\n        switch (this._scheme) {\n          case 'data':\n          case 'file':\n          case 'javascript':\n          case 'mailto':\n            return 'null';\n          case 'blob':\n            try {\n              return new JURL(this._schemeData).origin || 'null';\n            } catch (_) {}\n            return 'null';\n        }\n        host = this.host;\n        if (!host) {\n          return '';\n        }\n        return this._scheme + '://' + host;\n      }\n    };\n    var OriginalURL = globalScope.URL;\n    if (OriginalURL) {\n      JURL.createObjectURL = function (blob) {\n        return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n      };\n      JURL.revokeObjectURL = function (url) {\n        OriginalURL.revokeObjectURL(url);\n      };\n    }\n    globalScope.URL = JURL;\n  })();\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = __w_pdfjs_require__(127);\n  })();\n}\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : {};\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(78);\nmodule.exports = __w_pdfjs_require__(7).String.includes;\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar context = __w_pdfjs_require__(79);\nvar INCLUDES = 'includes';\n$export($export.P + $export.F * __w_pdfjs_require__(81)(INCLUDES), 'String', {\n  includes: function includes(searchString) {\n    return !!~context(this, searchString, INCLUDES).indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isRegExp = __w_pdfjs_require__(80);\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar cof = __w_pdfjs_require__(15);\nvar MATCH = __w_pdfjs_require__(2)('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar MATCH = __w_pdfjs_require__(2)('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) {}\n  }\n  return true;\n};\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(83);\nmodule.exports = __w_pdfjs_require__(7).Array.includes;\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar $includes = __w_pdfjs_require__(48)(true);\n$export($export.P, 'Array', {\n  includes: function includes(el) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n__w_pdfjs_require__(49)('includes');\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(86);\nmodule.exports = __w_pdfjs_require__(7).Math.log2;\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\n$export($export.S, 'Math', {\n  log2: function log2(x) {\n    return Math.log(x) / Math.LN2;\n  }\n});\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(88);\nmodule.exports = __w_pdfjs_require__(7).Number.isNaN;\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    return number != number;\n  }\n});\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(90);\nmodule.exports = __w_pdfjs_require__(7).Number.isInteger;\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\n$export($export.S, 'Number', { isInteger: __w_pdfjs_require__(91) });\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(50);\n__w_pdfjs_require__(93);\n__w_pdfjs_require__(55);\n__w_pdfjs_require__(102);\n__w_pdfjs_require__(109);\n__w_pdfjs_require__(110);\nmodule.exports = __w_pdfjs_require__(7).Promise;\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $at = __w_pdfjs_require__(94)(true);\n__w_pdfjs_require__(51)(String, 'String', function (iterated) {\n  this._t = String(iterated);\n  this._i = 0;\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return {\n    value: undefined,\n    done: true\n  };\n  point = $at(O, index);\n  this._i += point.length;\n  return {\n    value: point,\n    done: false\n  };\n});\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar defined = __w_pdfjs_require__(23);\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar create = __w_pdfjs_require__(96);\nvar descriptor = __w_pdfjs_require__(29);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar IteratorPrototype = {};\n__w_pdfjs_require__(12)(IteratorPrototype, __w_pdfjs_require__(2)('iterator'), function () {\n  return this;\n});\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar dPs = __w_pdfjs_require__(97);\nvar enumBugKeys = __w_pdfjs_require__(53);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nvar Empty = function Empty() {};\nvar PROTOTYPE = 'prototype';\nvar _createDict = function createDict() {\n  var iframe = __w_pdfjs_require__(28)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __w_pdfjs_require__(54).appendChild(iframe);\n  iframe.src = 'javascript:';\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  _createDict = iframeDocument.F;\n  while (i--) {\n    delete _createDict[PROTOTYPE][enumBugKeys[i]];\n  }return _createDict();\n};\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    result[IE_PROTO] = O;\n  } else result = _createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(16);\nvar anObject = __w_pdfjs_require__(8);\nvar getKeys = __w_pdfjs_require__(24);\nmodule.exports = __w_pdfjs_require__(13) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) {\n    dP.f(O, P = keys[i++], Properties[P]);\n  }return O;\n};\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(10);\nvar toIObject = __w_pdfjs_require__(18);\nvar arrayIndexOf = __w_pdfjs_require__(48)(false);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) {\n    if (key != IE_PROTO) has(O, key) && result.push(key);\n  }while (names.length > i) {\n    if (has(O, key = names[i++])) {\n      ~arrayIndexOf(result, key) || result.push(key);\n    }\n  }return result;\n};\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(10);\nvar toObject = __w_pdfjs_require__(35);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nvar ObjectProto = Object.prototype;\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  }\n  return O instanceof Object ? ObjectProto : null;\n};\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar addToUnscopables = __w_pdfjs_require__(49);\nvar step = __w_pdfjs_require__(101);\nvar Iterators = __w_pdfjs_require__(19);\nvar toIObject = __w_pdfjs_require__(18);\nmodule.exports = __w_pdfjs_require__(51)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated);\n  this._i = 0;\n  this._k = kind;\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\nIterators.Arguments = Iterators.Array;\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (done, value) {\n  return {\n    value: value,\n    done: !!done\n  };\n};\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(52);\nvar global = __w_pdfjs_require__(6);\nvar ctx = __w_pdfjs_require__(11);\nvar classof = __w_pdfjs_require__(33);\nvar $export = __w_pdfjs_require__(5);\nvar isObject = __w_pdfjs_require__(3);\nvar aFunction = __w_pdfjs_require__(17);\nvar anInstance = __w_pdfjs_require__(36);\nvar forOf = __w_pdfjs_require__(26);\nvar speciesConstructor = __w_pdfjs_require__(56);\nvar task = __w_pdfjs_require__(57).set;\nvar microtask = __w_pdfjs_require__(107)();\nvar newPromiseCapabilityModule = __w_pdfjs_require__(37);\nvar perform = __w_pdfjs_require__(58);\nvar promiseResolve = __w_pdfjs_require__(59);\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function empty() {};\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\nvar USE_NATIVE = !!function () {\n  try {\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[__w_pdfjs_require__(2)('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch (e) {}\n}();\nvar isThenable = function isThenable(it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function notify(promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function run(reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;else {\n            if (domain) domain.enter();\n            result = handler(value);\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) {\n      run(chain[i++]);\n    }promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function onUnhandled(promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({\n            promise: promise,\n            reason: value\n          });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    }\n    promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function isUnhandled(promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function onHandleUnhandled(promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({\n        promise: promise,\n        reason: promise._v\n      });\n    }\n  });\n};\nvar $reject = function $reject(value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function $resolve(value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = {\n          _w: promise,\n          _d: false\n        };\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({\n      _w: promise,\n      _d: false\n    }, e);\n  }\n};\nif (!USE_NATIVE) {\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor) {\n    this._c = [];\n    this._a = undefined;\n    this._s = 0;\n    this._d = false;\n    this._v = undefined;\n    this._h = 0;\n    this._n = false;\n  };\n  Internal.prototype = __w_pdfjs_require__(38)($Promise.prototype, {\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    'catch': function _catch(onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function OwnPromiseCapability() {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\n    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n  };\n}\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\n__w_pdfjs_require__(25)($Promise, PROMISE);\n__w_pdfjs_require__(108)(PROMISE);\nWrapper = __w_pdfjs_require__(7)[PROMISE];\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && __w_pdfjs_require__(60)(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar Iterators = __w_pdfjs_require__(19);\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar ArrayProto = Array.prototype;\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(33);\nvar ITERATOR = __w_pdfjs_require__(2)('iterator');\nvar Iterators = __w_pdfjs_require__(19);\nmodule.exports = __w_pdfjs_require__(7).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\n};\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0:\n      return un ? fn() : fn.call(that);\n    case 1:\n      return un ? fn(args[0]) : fn.call(that, args[0]);\n    case 2:\n      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\n    case 3:\n      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\n    case 4:\n      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\n  }\n  return fn.apply(that, args);\n};\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar macrotask = __w_pdfjs_require__(57).set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = __w_pdfjs_require__(15)(process) == 'process';\nmodule.exports = function () {\n  var head, last, notify;\n  var flush = function flush() {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();else last = undefined;\n        throw e;\n      }\n    }\n    last = undefined;\n    if (parent) parent.enter();\n  };\n  if (isNode) {\n    notify = function notify() {\n      process.nextTick(flush);\n    };\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true });\n    notify = function notify() {\n      node.data = toggle = !toggle;\n    };\n  } else if (Promise && Promise.resolve) {\n    var promise = Promise.resolve();\n    notify = function notify() {\n      promise.then(flush);\n    };\n  } else {\n    notify = function notify() {\n      macrotask.call(global, flush);\n    };\n  }\n  return function (fn) {\n    var task = {\n      fn: fn,\n      next: undefined\n    };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    }\n    last = task;\n  };\n};\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar dP = __w_pdfjs_require__(16);\nvar DESCRIPTORS = __w_pdfjs_require__(13);\nvar SPECIES = __w_pdfjs_require__(2)('species');\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function get() {\n      return this;\n    }\n  });\n};\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar core = __w_pdfjs_require__(7);\nvar global = __w_pdfjs_require__(6);\nvar speciesConstructor = __w_pdfjs_require__(56);\nvar promiseResolve = __w_pdfjs_require__(59);\n$export($export.P + $export.R, 'Promise', {\n  'finally': function _finally(onFinally) {\n    var C = speciesConstructor(this, core.Promise || global.Promise);\n    var isFunction = typeof onFinally == 'function';\n    return this.then(isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () {\n        return x;\n      });\n    } : onFinally, isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () {\n        throw e;\n      });\n    } : onFinally);\n  }\n});\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar newPromiseCapability = __w_pdfjs_require__(37);\nvar perform = __w_pdfjs_require__(58);\n$export($export.S, 'Promise', {\n  'try': function _try(callbackfn) {\n    var promiseCapability = newPromiseCapability.f(this);\n    var result = perform(callbackfn);\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n    return promiseCapability.promise;\n  }\n});\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(50);\n__w_pdfjs_require__(55);\n__w_pdfjs_require__(112);\n__w_pdfjs_require__(123);\n__w_pdfjs_require__(125);\nmodule.exports = __w_pdfjs_require__(7).WeakMap;\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar each = __w_pdfjs_require__(61)(0);\nvar redefine = __w_pdfjs_require__(9);\nvar meta = __w_pdfjs_require__(39);\nvar assign = __w_pdfjs_require__(116);\nvar weak = __w_pdfjs_require__(118);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(14);\nvar validate = __w_pdfjs_require__(62);\nvar WEAK_MAP = 'WeakMap';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar tmp = {};\nvar InternalMap;\nvar wrapper = function wrapper(get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\nvar methods = {\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\nvar $WeakMap = module.exports = __w_pdfjs_require__(119)(WEAK_MAP, wrapper, methods, weak, true, true);\nif (fails(function () {\n  return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;\n})) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      }\n      return method.call(this, a, b);\n    });\n  });\n}\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar speciesConstructor = __w_pdfjs_require__(114);\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar isArray = __w_pdfjs_require__(115);\nvar SPECIES = __w_pdfjs_require__(2)('species');\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  }\n  return C === undefined ? Array : C;\n};\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(15);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(24);\nvar gOPS = __w_pdfjs_require__(117);\nvar pIE = __w_pdfjs_require__(40);\nvar toObject = __w_pdfjs_require__(35);\nvar IObject = __w_pdfjs_require__(30);\nvar $assign = Object.assign;\nmodule.exports = !$assign || __w_pdfjs_require__(14)(function () {\n  var A = {};\n  var B = {};\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) {\n    B[k] = k;\n  });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) {\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n    }\n  }\n  return T;\n} : $assign;\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefineAll = __w_pdfjs_require__(38);\nvar getWeak = __w_pdfjs_require__(39).getWeak;\nvar anObject = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(3);\nvar anInstance = __w_pdfjs_require__(36);\nvar forOf = __w_pdfjs_require__(26);\nvar createArrayMethod = __w_pdfjs_require__(61);\nvar $has = __w_pdfjs_require__(10);\nvar validate = __w_pdfjs_require__(62);\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\nvar uncaughtFrozenStore = function uncaughtFrozenStore(that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function UncaughtFrozenStore() {\n  this.a = [];\n};\nvar findUncaughtFrozen = function findUncaughtFrozen(store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function get(key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function has(key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function set(key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;else this.a.push([key, value]);\n  },\n  'delete': function _delete(key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\nmodule.exports = {\n  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;\n      that._i = id++;\n      that._l = undefined;\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      'delete': function _delete(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function def(that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(6);\nvar $export = __w_pdfjs_require__(5);\nvar redefine = __w_pdfjs_require__(9);\nvar redefineAll = __w_pdfjs_require__(38);\nvar meta = __w_pdfjs_require__(39);\nvar forOf = __w_pdfjs_require__(26);\nvar anInstance = __w_pdfjs_require__(36);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(14);\nvar $iterDetect = __w_pdfjs_require__(60);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar inheritIfRequired = __w_pdfjs_require__(120);\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function fixMethod(KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY, KEY == 'delete' ? function (a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'has' ? function has(a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'get' ? function get(a) {\n      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'add' ? function add(a) {\n      fn.call(this, a === 0 ? 0 : a);\n      return this;\n    } : function set(a, b) {\n      fn.call(this, a === 0 ? 0 : a, b);\n      return this;\n    });\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    var THROWS_ON_PRIMITIVES = fails(function () {\n      instance.has(1);\n    });\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) {\n      new C(iter);\n    });\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      var $instance = new C();\n      var index = 5;\n      while (index--) {\n        $instance[ADDER](index, index);\n      }return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n  setToStringTag(C, NAME);\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n  return C;\n};\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar setPrototypeOf = __w_pdfjs_require__(121).set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  }\n  return that;\n};\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar anObject = __w_pdfjs_require__(8);\nvar check = function check(O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {\n    try {\n      set = __w_pdfjs_require__(11)(Function.call, __w_pdfjs_require__(122).f(Object.prototype, '__proto__').set, 2);\n      set(test, []);\n      buggy = !(test instanceof Array);\n    } catch (e) {\n      buggy = true;\n    }\n    return function setPrototypeOf(O, proto) {\n      check(O, proto);\n      if (buggy) O.__proto__ = proto;else set(O, proto);\n      return O;\n    };\n  }({}, false) : undefined),\n  check: check\n};\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pIE = __w_pdfjs_require__(40);\nvar createDesc = __w_pdfjs_require__(29);\nvar toIObject = __w_pdfjs_require__(18);\nvar toPrimitive = __w_pdfjs_require__(46);\nvar has = __w_pdfjs_require__(10);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(45);\nvar gOPD = Object.getOwnPropertyDescriptor;\nexports.f = __w_pdfjs_require__(13) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) {}\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(124)('WeakMap');\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    of: function of() {\n      var length = arguments.length;\n      var A = new Array(length);\n      while (length--) {\n        A[length] = arguments[length];\n      }return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(126)('WeakMap');\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar aFunction = __w_pdfjs_require__(17);\nvar ctx = __w_pdfjs_require__(11);\nvar forOf = __w_pdfjs_require__(26);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    from: function from(source) {\n      var mapFn = arguments[1];\n      var mapping, A, n, cb;\n      aFunction(this);\n      mapping = mapFn !== undefined;\n      if (mapping) aFunction(mapFn);\n      if (source == undefined) return new this();\n      A = [];\n      if (mapping) {\n        n = 0;\n        cb = ctx(mapFn, arguments[2], 2);\n        forOf(source, false, function (nextItem) {\n          A.push(cb(nextItem, n++));\n        });\n      } else {\n        forOf(source, false, A.push, A);\n      }\n      return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(128);\nmodule.exports = __w_pdfjs_require__(7).Object.values;\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(5);\nvar $values = __w_pdfjs_require__(129)(false);\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(24);\nvar toIObject = __w_pdfjs_require__(18);\nvar isEnum = __w_pdfjs_require__(40).f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      if (isEnum.call(O, key = keys[i++])) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }return result;\n  };\n};\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isReadableStreamSupported = false;\nif (typeof ReadableStream !== 'undefined') {\n  try {\n    new ReadableStream({\n      start: function start(controller) {\n        controller.close();\n      }\n    });\n    isReadableStreamSupported = true;\n  } catch (e) {}\n}\nif (isReadableStreamSupported) {\n  exports.ReadableStream = ReadableStream;\n} else {\n  exports.ReadableStream = __w_pdfjs_require__(131).ReadableStream;\n}\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (e, a) {\n  for (var i in a) {\n    e[i] = a[i];\n  }\n})(exports, function (modules) {\n  var installedModules = {};\n  function __w_pdfjs_require__(moduleId) {\n    if (installedModules[moduleId]) return installedModules[moduleId].exports;\n    var module = installedModules[moduleId] = {\n      i: moduleId,\n      l: false,\n      exports: {}\n    };\n    modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n    module.l = true;\n    return module.exports;\n  }\n  __w_pdfjs_require__.m = modules;\n  __w_pdfjs_require__.c = installedModules;\n  __w_pdfjs_require__.i = function (value) {\n    return value;\n  };\n  __w_pdfjs_require__.d = function (exports, name, getter) {\n    if (!__w_pdfjs_require__.o(exports, name)) {\n      Object.defineProperty(exports, name, {\n        configurable: false,\n        enumerable: true,\n        get: getter\n      });\n    }\n  };\n  __w_pdfjs_require__.n = function (module) {\n    var getter = module && module.__esModule ? function getDefault() {\n      return module['default'];\n    } : function getModuleExports() {\n      return module;\n    };\n    __w_pdfjs_require__.d(getter, 'a', getter);\n    return getter;\n  };\n  __w_pdfjs_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  __w_pdfjs_require__.p = \"\";\n  return __w_pdfjs_require__(__w_pdfjs_require__.s = 7);\n}([function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  };\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  function IsPropertyKey(argument) {\n    return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';\n  }\n  exports.typeIsObject = function (x) {\n    return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function';\n  };\n  exports.createDataProperty = function (o, p, v) {\n    assert(exports.typeIsObject(o));\n    Object.defineProperty(o, p, {\n      value: v,\n      writable: true,\n      enumerable: true,\n      configurable: true\n    });\n  };\n  exports.createArrayFromList = function (elements) {\n    return elements.slice();\n  };\n  exports.ArrayBufferCopy = function (dest, destOffset, src, srcOffset, n) {\n    new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n  };\n  exports.CreateIterResultObject = function (value, done) {\n    assert(typeof done === 'boolean');\n    var obj = {};\n    Object.defineProperty(obj, 'value', {\n      value: value,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(obj, 'done', {\n      value: done,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    return obj;\n  };\n  exports.IsFiniteNonNegativeNumber = function (v) {\n    if (Number.isNaN(v)) {\n      return false;\n    }\n    if (v === Infinity) {\n      return false;\n    }\n    if (v < 0) {\n      return false;\n    }\n    return true;\n  };\n  function Call(F, V, args) {\n    if (typeof F !== 'function') {\n      throw new TypeError('Argument is not a function');\n    }\n    return Function.prototype.apply.call(F, V, args);\n  }\n  exports.InvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    var method = O[P];\n    if (method === undefined) {\n      return undefined;\n    }\n    return Call(method, O, args);\n  };\n  exports.PromiseInvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    try {\n      return Promise.resolve(exports.InvokeOrNoop(O, P, args));\n    } catch (returnValueE) {\n      return Promise.reject(returnValueE);\n    }\n  };\n  exports.PromiseInvokeOrPerformFallback = function (O, P, args, F, argsF) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    assert(Array.isArray(argsF));\n    var method = void 0;\n    try {\n      method = O[P];\n    } catch (methodE) {\n      return Promise.reject(methodE);\n    }\n    if (method === undefined) {\n      return F.apply(null, argsF);\n    }\n    try {\n      return Promise.resolve(Call(method, O, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  exports.TransferArrayBuffer = function (O) {\n    return O.slice();\n  };\n  exports.ValidateAndNormalizeHighWaterMark = function (highWaterMark) {\n    highWaterMark = Number(highWaterMark);\n    if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\n      throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\n    }\n    return highWaterMark;\n  };\n  exports.ValidateAndNormalizeQueuingStrategy = function (size, highWaterMark) {\n    if (size !== undefined && typeof size !== 'function') {\n      throw new TypeError('size property of a queuing strategy must be a function');\n    }\n    highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);\n    return {\n      size: size,\n      highWaterMark: highWaterMark\n    };\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  function rethrowAssertionErrorRejection(e) {\n    if (e && e.constructor === AssertionError) {\n      setTimeout(function () {\n        throw e;\n      }, 0);\n    }\n  }\n  function AssertionError(message) {\n    this.name = 'AssertionError';\n    this.message = message || '';\n    this.stack = new Error().stack;\n  }\n  AssertionError.prototype = Object.create(Error.prototype);\n  AssertionError.prototype.constructor = AssertionError;\n  function assert(value, message) {\n    if (!value) {\n      throw new AssertionError(message);\n    }\n  }\n  module.exports = {\n    rethrowAssertionErrorRejection: rethrowAssertionErrorRejection,\n    AssertionError: AssertionError,\n    assert: assert\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      typeIsObject = _require.typeIsObject;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert,\n      rethrowAssertionErrorRejection = _require2.rethrowAssertionErrorRejection;\n  var _require3 = __w_pdfjs_require__(3),\n      DequeueValue = _require3.DequeueValue,\n      EnqueueValueWithSize = _require3.EnqueueValueWithSize,\n      PeekQueueValue = _require3.PeekQueueValue,\n      ResetQueue = _require3.ResetQueue;\n  var WritableStream = function () {\n    function WritableStream() {\n      var underlyingSink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          _ref$highWaterMark = _ref.highWaterMark,\n          highWaterMark = _ref$highWaterMark === undefined ? 1 : _ref$highWaterMark;\n      _classCallCheck(this, WritableStream);\n      this._state = 'writable';\n      this._storedError = undefined;\n      this._writer = undefined;\n      this._writableStreamController = undefined;\n      this._writeRequests = [];\n      this._inFlightWriteRequest = undefined;\n      this._closeRequest = undefined;\n      this._inFlightCloseRequest = undefined;\n      this._pendingAbortRequest = undefined;\n      this._backpressure = false;\n      var type = underlyingSink.type;\n      if (type !== undefined) {\n        throw new RangeError('Invalid type is specified');\n      }\n      this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);\n      this._writableStreamController.__startSteps();\n    }\n    _createClass(WritableStream, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('abort'));\n        }\n        if (IsWritableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\n        }\n        return WritableStreamAbort(this, reason);\n      }\n    }, {\n      key: 'getWriter',\n      value: function getWriter() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('getWriter');\n        }\n        return AcquireWritableStreamDefaultWriter(this);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsWritableStreamLocked(this);\n      }\n    }]);\n    return WritableStream;\n  }();\n  module.exports = {\n    AcquireWritableStreamDefaultWriter: AcquireWritableStreamDefaultWriter,\n    IsWritableStream: IsWritableStream,\n    IsWritableStreamLocked: IsWritableStreamLocked,\n    WritableStream: WritableStream,\n    WritableStreamAbort: WritableStreamAbort,\n    WritableStreamDefaultControllerError: WritableStreamDefaultControllerError,\n    WritableStreamDefaultWriterCloseWithErrorPropagation: WritableStreamDefaultWriterCloseWithErrorPropagation,\n    WritableStreamDefaultWriterRelease: WritableStreamDefaultWriterRelease,\n    WritableStreamDefaultWriterWrite: WritableStreamDefaultWriterWrite,\n    WritableStreamCloseQueuedOrInFlight: WritableStreamCloseQueuedOrInFlight\n  };\n  function AcquireWritableStreamDefaultWriter(stream) {\n    return new WritableStreamDefaultWriter(stream);\n  }\n  function IsWritableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsWritableStreamLocked(stream) {\n    assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');\n    if (stream._writer === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamAbort(stream, reason) {\n    var state = stream._state;\n    if (state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    var error = new TypeError('Requested to abort');\n    if (stream._pendingAbortRequest !== undefined) {\n      return Promise.reject(error);\n    }\n    assert(state === 'writable' || state === 'erroring', 'state must be writable or erroring');\n    var wasAlreadyErroring = false;\n    if (state === 'erroring') {\n      wasAlreadyErroring = true;\n      reason = undefined;\n    }\n    var promise = new Promise(function (resolve, reject) {\n      stream._pendingAbortRequest = {\n        _resolve: resolve,\n        _reject: reject,\n        _reason: reason,\n        _wasAlreadyErroring: wasAlreadyErroring\n      };\n    });\n    if (wasAlreadyErroring === false) {\n      WritableStreamStartErroring(stream, error);\n    }\n    return promise;\n  }\n  function WritableStreamAddWriteRequest(stream) {\n    assert(IsWritableStreamLocked(stream) === true);\n    assert(stream._state === 'writable');\n    var promise = new Promise(function (resolve, reject) {\n      var writeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._writeRequests.push(writeRequest);\n    });\n    return promise;\n  }\n  function WritableStreamDealWithRejection(stream, error) {\n    var state = stream._state;\n    if (state === 'writable') {\n      WritableStreamStartErroring(stream, error);\n      return;\n    }\n    assert(state === 'erroring');\n    WritableStreamFinishErroring(stream);\n  }\n  function WritableStreamStartErroring(stream, reason) {\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n    assert(stream._state === 'writable', 'state must be writable');\n    var controller = stream._writableStreamController;\n    assert(controller !== undefined, 'controller must not be undefined');\n    stream._state = 'erroring';\n    stream._storedError = reason;\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n    }\n    if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\n      WritableStreamFinishErroring(stream);\n    }\n  }\n  function WritableStreamFinishErroring(stream) {\n    assert(stream._state === 'erroring', 'stream._state === erroring');\n    assert(WritableStreamHasOperationMarkedInFlight(stream) === false, 'WritableStreamHasOperationMarkedInFlight(stream) === false');\n    stream._state = 'errored';\n    stream._writableStreamController.__errorSteps();\n    var storedError = stream._storedError;\n    for (var i = 0; i < stream._writeRequests.length; i++) {\n      var writeRequest = stream._writeRequests[i];\n      writeRequest._reject(storedError);\n    }\n    stream._writeRequests = [];\n    if (stream._pendingAbortRequest === undefined) {\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var abortRequest = stream._pendingAbortRequest;\n    stream._pendingAbortRequest = undefined;\n    if (abortRequest._wasAlreadyErroring === true) {\n      abortRequest._reject(storedError);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var promise = stream._writableStreamController.__abortSteps(abortRequest._reason);\n    promise.then(function () {\n      abortRequest._resolve();\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    }, function (reason) {\n      abortRequest._reject(reason);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n  }\n  function WritableStreamFinishInFlightWrite(stream) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._resolve(undefined);\n    stream._inFlightWriteRequest = undefined;\n  }\n  function WritableStreamFinishInFlightWriteWithError(stream, error) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._reject(error);\n    stream._inFlightWriteRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamFinishInFlightClose(stream) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._resolve(undefined);\n    stream._inFlightCloseRequest = undefined;\n    var state = stream._state;\n    assert(state === 'writable' || state === 'erroring');\n    if (state === 'erroring') {\n      stream._storedError = undefined;\n      if (stream._pendingAbortRequest !== undefined) {\n        stream._pendingAbortRequest._resolve();\n        stream._pendingAbortRequest = undefined;\n      }\n    }\n    stream._state = 'closed';\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseResolve(writer);\n    }\n    assert(stream._pendingAbortRequest === undefined, 'stream._pendingAbortRequest === undefined');\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n  }\n  function WritableStreamFinishInFlightCloseWithError(stream, error) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._reject(error);\n    stream._inFlightCloseRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._reject(error);\n      stream._pendingAbortRequest = undefined;\n    }\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamCloseQueuedOrInFlight(stream) {\n    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamHasOperationMarkedInFlight(stream) {\n    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamMarkCloseRequestInFlight(stream) {\n    assert(stream._inFlightCloseRequest === undefined);\n    assert(stream._closeRequest !== undefined);\n    stream._inFlightCloseRequest = stream._closeRequest;\n    stream._closeRequest = undefined;\n  }\n  function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n    assert(stream._inFlightWriteRequest === undefined, 'there must be no pending write request');\n    assert(stream._writeRequests.length !== 0, 'writeRequests must not be empty');\n    stream._inFlightWriteRequest = stream._writeRequests.shift();\n  }\n  function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n    assert(stream._state === 'errored', '_stream_.[[state]] is `\"errored\"`');\n    if (stream._closeRequest !== undefined) {\n      assert(stream._inFlightCloseRequest === undefined);\n      stream._closeRequest._reject(stream._storedError);\n      stream._closeRequest = undefined;\n    }\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseReject(writer, stream._storedError);\n      writer._closedPromise.catch(function () {});\n    }\n  }\n  function WritableStreamUpdateBackpressure(stream, backpressure) {\n    assert(stream._state === 'writable');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var writer = stream._writer;\n    if (writer !== undefined && backpressure !== stream._backpressure) {\n      if (backpressure === true) {\n        defaultWriterReadyPromiseReset(writer);\n      } else {\n        assert(backpressure === false);\n        defaultWriterReadyPromiseResolve(writer);\n      }\n    }\n    stream._backpressure = backpressure;\n  }\n  var WritableStreamDefaultWriter = function () {\n    function WritableStreamDefaultWriter(stream) {\n      _classCallCheck(this, WritableStreamDefaultWriter);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n      }\n      if (IsWritableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n      }\n      this._ownerWritableStream = stream;\n      stream._writer = this;\n      var state = stream._state;\n      if (state === 'writable') {\n        if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\n          defaultWriterReadyPromiseInitialize(this);\n        } else {\n          defaultWriterReadyPromiseInitializeAsResolved(this);\n        }\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'erroring') {\n        defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'closed') {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n        defaultWriterClosedPromiseInitializeAsResolved(this);\n      } else {\n        assert(state === 'errored', 'state must be errored');\n        var storedError = stream._storedError;\n        defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n        this._closedPromise.catch(function () {});\n      }\n    }\n    _createClass(WritableStreamDefaultWriter, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('abort'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('abort'));\n        }\n        return WritableStreamDefaultWriterAbort(this, reason);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('close'));\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return Promise.reject(defaultWriterLockException('close'));\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\n          return Promise.reject(new TypeError('cannot close an already-closing stream'));\n        }\n        return WritableStreamDefaultWriterClose(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('releaseLock');\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return;\n        }\n        assert(stream._writer !== undefined);\n        WritableStreamDefaultWriterRelease(this);\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('write'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('write to'));\n        }\n        return WritableStreamDefaultWriterWrite(this, chunk);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('desiredSize');\n        }\n        if (this._ownerWritableStream === undefined) {\n          throw defaultWriterLockException('desiredSize');\n        }\n        return WritableStreamDefaultWriterGetDesiredSize(this);\n      }\n    }, {\n      key: 'ready',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('ready'));\n        }\n        return this._readyPromise;\n      }\n    }]);\n    return WritableStreamDefaultWriter;\n  }();\n  function IsWritableStreamDefaultWriter(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultWriterAbort(writer, reason) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    return WritableStreamAbort(stream, reason);\n  }\n  function WritableStreamDefaultWriterClose(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return Promise.reject(new TypeError('The stream (in ' + state + ' state) is not in the writable state and cannot be closed'));\n    }\n    assert(state === 'writable' || state === 'erroring');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var promise = new Promise(function (resolve, reject) {\n      var closeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._closeRequest = closeRequest;\n    });\n    if (stream._backpressure === true && state === 'writable') {\n      defaultWriterReadyPromiseResolve(writer);\n    }\n    WritableStreamDefaultControllerClose(stream._writableStreamController);\n    return promise;\n  }\n  function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.resolve();\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable' || state === 'erroring');\n    return WritableStreamDefaultWriterClose(writer);\n  }\n  function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n    if (writer._closedPromiseState === 'pending') {\n      defaultWriterClosedPromiseReject(writer, error);\n    } else {\n      defaultWriterClosedPromiseResetToRejected(writer, error);\n    }\n    writer._closedPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n    if (writer._readyPromiseState === 'pending') {\n      defaultWriterReadyPromiseReject(writer, error);\n    } else {\n      defaultWriterReadyPromiseResetToRejected(writer, error);\n    }\n    writer._readyPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterGetDesiredSize(writer) {\n    var stream = writer._ownerWritableStream;\n    var state = stream._state;\n    if (state === 'errored' || state === 'erroring') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n  }\n  function WritableStreamDefaultWriterRelease(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    assert(stream._writer === writer);\n    var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\\'s closedness');\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n    stream._writer = undefined;\n    writer._ownerWritableStream = undefined;\n  }\n  function WritableStreamDefaultWriterWrite(writer, chunk) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var controller = stream._writableStreamController;\n    var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n    if (stream !== writer._ownerWritableStream) {\n      return Promise.reject(defaultWriterLockException('write to'));\n    }\n    var state = stream._state;\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\n    }\n    if (state === 'erroring') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable');\n    var promise = WritableStreamAddWriteRequest(stream);\n    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n    return promise;\n  }\n  var WritableStreamDefaultController = function () {\n    function WritableStreamDefaultController(stream, underlyingSink, size, highWaterMark) {\n      _classCallCheck(this, WritableStreamDefaultController);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');\n      }\n      if (stream._writableStreamController !== undefined) {\n        throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');\n      }\n      this._controlledWritableStream = stream;\n      this._underlyingSink = underlyingSink;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(this);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    _createClass(WritableStreamDefaultController, [{\n      key: 'error',\n      value: function error(e) {\n        if (IsWritableStreamDefaultController(this) === false) {\n          throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n        }\n        var state = this._controlledWritableStream._state;\n        if (state !== 'writable') {\n          return;\n        }\n        WritableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__abortSteps',\n      value: function __abortSteps(reason) {\n        return PromiseInvokeOrNoop(this._underlyingSink, 'abort', [reason]);\n      }\n    }, {\n      key: '__errorSteps',\n      value: function __errorSteps() {\n        ResetQueue(this);\n      }\n    }, {\n      key: '__startSteps',\n      value: function __startSteps() {\n        var _this = this;\n        var startResult = InvokeOrNoop(this._underlyingSink, 'start', [this]);\n        var stream = this._controlledWritableStream;\n        Promise.resolve(startResult).then(function () {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);\n        }, function (r) {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDealWithRejection(stream, r);\n        }).catch(rethrowAssertionErrorRejection);\n      }\n    }]);\n    return WritableStreamDefaultController;\n  }();\n  function WritableStreamDefaultControllerClose(controller) {\n    EnqueueValueWithSize(controller, 'close', 0);\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n    var strategySize = controller._strategySize;\n    if (strategySize === undefined) {\n      return 1;\n    }\n    try {\n      return strategySize(chunk);\n    } catch (chunkSizeE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n      return 1;\n    }\n  }\n  function WritableStreamDefaultControllerGetDesiredSize(controller) {\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n    var writeRecord = { chunk: chunk };\n    try {\n      EnqueueValueWithSize(controller, writeRecord, chunkSize);\n    } catch (enqueueE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n      return;\n    }\n    var stream = controller._controlledWritableStream;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function IsWritableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n    var stream = controller._controlledWritableStream;\n    if (controller._started === false) {\n      return;\n    }\n    if (stream._inFlightWriteRequest !== undefined) {\n      return;\n    }\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return;\n    }\n    if (state === 'erroring') {\n      WritableStreamFinishErroring(stream);\n      return;\n    }\n    if (controller._queue.length === 0) {\n      return;\n    }\n    var writeRecord = PeekQueueValue(controller);\n    if (writeRecord === 'close') {\n      WritableStreamDefaultControllerProcessClose(controller);\n    } else {\n      WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n    }\n  }\n  function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n    if (controller._controlledWritableStream._state === 'writable') {\n      WritableStreamDefaultControllerError(controller, error);\n    }\n  }\n  function WritableStreamDefaultControllerProcessClose(controller) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkCloseRequestInFlight(stream);\n    DequeueValue(controller);\n    assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');\n    var sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', []);\n    sinkClosePromise.then(function () {\n      WritableStreamFinishInFlightClose(stream);\n    }, function (reason) {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkFirstWriteRequestInFlight(stream);\n    var sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);\n    sinkWritePromise.then(function () {\n      WritableStreamFinishInFlightWrite(stream);\n      var state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n      DequeueValue(controller);\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\n        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }, function (reason) {\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerGetBackpressure(controller) {\n    var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n    return desiredSize <= 0;\n  }\n  function WritableStreamDefaultControllerError(controller, error) {\n    var stream = controller._controlledWritableStream;\n    assert(stream._state === 'writable');\n    WritableStreamStartErroring(stream, error);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('WritableStream.prototype.' + name + ' can only be used on a WritableStream');\n  }\n  function defaultWriterBrandCheckException(name) {\n    return new TypeError('WritableStreamDefaultWriter.prototype.' + name + ' can only be used on a WritableStreamDefaultWriter');\n  }\n  function defaultWriterLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released writer');\n  }\n  function defaultWriterClosedPromiseInitialize(writer) {\n    writer._closedPromise = new Promise(function (resolve, reject) {\n      writer._closedPromise_resolve = resolve;\n      writer._closedPromise_reject = reject;\n      writer._closedPromiseState = 'pending';\n    });\n  }\n  function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n    writer._closedPromise = Promise.resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterClosedPromiseReject(writer, reason) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n    assert(writer._closedPromise_resolve === undefined, 'writer._closedPromise_resolve === undefined');\n    assert(writer._closedPromise_reject === undefined, 'writer._closedPromise_reject === undefined');\n    assert(writer._closedPromiseState !== 'pending', 'writer._closedPromiseState is not pending');\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResolve(writer) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterReadyPromiseInitialize(writer) {\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n    writer._readyPromise = Promise.resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n  function defaultWriterReadyPromiseReject(writer, reason) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseReset(writer) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseResolve(writer) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _require = __w_pdfjs_require__(0),\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert;\n  exports.DequeueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');\n    var pair = container._queue.shift();\n    container._queueTotalSize -= pair.size;\n    if (container._queueTotalSize < 0) {\n      container._queueTotalSize = 0;\n    }\n    return pair.value;\n  };\n  exports.EnqueueValueWithSize = function (container, value, size) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and ' + '[[queueTotalSize]].');\n    size = Number(size);\n    if (!IsFiniteNonNegativeNumber(size)) {\n      throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n    }\n    container._queue.push({\n      value: value,\n      size: size\n    });\n    container._queueTotalSize += size;\n  };\n  exports.PeekQueueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');\n    var pair = container._queue[0];\n    return pair.value;\n  };\n  exports.ResetQueue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    container._queue = [];\n    container._queueTotalSize = 0;\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      ArrayBufferCopy = _require.ArrayBufferCopy,\n      CreateIterResultObject = _require.CreateIterResultObject,\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber,\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      TransferArrayBuffer = _require.TransferArrayBuffer,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      ValidateAndNormalizeHighWaterMark = _require.ValidateAndNormalizeHighWaterMark;\n  var _require2 = __w_pdfjs_require__(0),\n      createArrayFromList = _require2.createArrayFromList,\n      createDataProperty = _require2.createDataProperty,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(1),\n      assert = _require3.assert,\n      rethrowAssertionErrorRejection = _require3.rethrowAssertionErrorRejection;\n  var _require4 = __w_pdfjs_require__(3),\n      DequeueValue = _require4.DequeueValue,\n      EnqueueValueWithSize = _require4.EnqueueValueWithSize,\n      ResetQueue = _require4.ResetQueue;\n  var _require5 = __w_pdfjs_require__(2),\n      AcquireWritableStreamDefaultWriter = _require5.AcquireWritableStreamDefaultWriter,\n      IsWritableStream = _require5.IsWritableStream,\n      IsWritableStreamLocked = _require5.IsWritableStreamLocked,\n      WritableStreamAbort = _require5.WritableStreamAbort,\n      WritableStreamDefaultWriterCloseWithErrorPropagation = _require5.WritableStreamDefaultWriterCloseWithErrorPropagation,\n      WritableStreamDefaultWriterRelease = _require5.WritableStreamDefaultWriterRelease,\n      WritableStreamDefaultWriterWrite = _require5.WritableStreamDefaultWriterWrite,\n      WritableStreamCloseQueuedOrInFlight = _require5.WritableStreamCloseQueuedOrInFlight;\n  var ReadableStream = function () {\n    function ReadableStream() {\n      var underlyingSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          highWaterMark = _ref.highWaterMark;\n      _classCallCheck(this, ReadableStream);\n      this._state = 'readable';\n      this._reader = undefined;\n      this._storedError = undefined;\n      this._disturbed = false;\n      this._readableStreamController = undefined;\n      var type = underlyingSource.type;\n      var typeString = String(type);\n      if (typeString === 'bytes') {\n        if (highWaterMark === undefined) {\n          highWaterMark = 0;\n        }\n        this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);\n      } else if (type === undefined) {\n        if (highWaterMark === undefined) {\n          highWaterMark = 1;\n        }\n        this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);\n      } else {\n        throw new RangeError('Invalid type is specified');\n      }\n    }\n    _createClass(ReadableStream, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('cancel'));\n        }\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\n        }\n        return ReadableStreamCancel(this, reason);\n      }\n    }, {\n      key: 'getReader',\n      value: function getReader() {\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            mode = _ref2.mode;\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('getReader');\n        }\n        if (mode === undefined) {\n          return AcquireReadableStreamDefaultReader(this);\n        }\n        mode = String(mode);\n        if (mode === 'byob') {\n          return AcquireReadableStreamBYOBReader(this);\n        }\n        throw new RangeError('Invalid mode is specified');\n      }\n    }, {\n      key: 'pipeThrough',\n      value: function pipeThrough(_ref3, options) {\n        var writable = _ref3.writable,\n            readable = _ref3.readable;\n        var promise = this.pipeTo(writable, options);\n        ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);\n        return readable;\n      }\n    }, {\n      key: 'pipeTo',\n      value: function pipeTo(dest) {\n        var _this = this;\n        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n            preventClose = _ref4.preventClose,\n            preventAbort = _ref4.preventAbort,\n            preventCancel = _ref4.preventCancel;\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('pipeTo'));\n        }\n        if (IsWritableStream(dest) === false) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n        }\n        preventClose = Boolean(preventClose);\n        preventAbort = Boolean(preventAbort);\n        preventCancel = Boolean(preventCancel);\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n        }\n        if (IsWritableStreamLocked(dest) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n        }\n        var reader = AcquireReadableStreamDefaultReader(this);\n        var writer = AcquireWritableStreamDefaultWriter(dest);\n        var shuttingDown = false;\n        var currentWrite = Promise.resolve();\n        return new Promise(function (resolve, reject) {\n          function pipeLoop() {\n            currentWrite = Promise.resolve();\n            if (shuttingDown === true) {\n              return Promise.resolve();\n            }\n            return writer._readyPromise.then(function () {\n              return ReadableStreamDefaultReaderRead(reader).then(function (_ref5) {\n                var value = _ref5.value,\n                    done = _ref5.done;\n                if (done === true) {\n                  return;\n                }\n                currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(function () {});\n              });\n            }).then(pipeLoop);\n          }\n          isOrBecomesErrored(_this, reader._closedPromise, function (storedError) {\n            if (preventAbort === false) {\n              shutdownWithAction(function () {\n                return WritableStreamAbort(dest, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesClosed(_this, reader._closedPromise, function () {\n            if (preventClose === false) {\n              shutdownWithAction(function () {\n                return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);\n              });\n            } else {\n              shutdown();\n            }\n          });\n          if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\n            var destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, destClosed);\n              }, true, destClosed);\n            } else {\n              shutdown(true, destClosed);\n            }\n          }\n          pipeLoop().catch(function (err) {\n            currentWrite = Promise.resolve();\n            rethrowAssertionErrorRejection(err);\n          });\n          function waitForWritesToFinish() {\n            var oldCurrentWrite = currentWrite;\n            return currentWrite.then(function () {\n              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;\n            });\n          }\n          function isOrBecomesErrored(stream, promise, action) {\n            if (stream._state === 'errored') {\n              action(stream._storedError);\n            } else {\n              promise.catch(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function isOrBecomesClosed(stream, promise, action) {\n            if (stream._state === 'closed') {\n              action();\n            } else {\n              promise.then(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdownWithAction(action, originalIsError, originalError) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(doTheRest);\n            } else {\n              doTheRest();\n            }\n            function doTheRest() {\n              action().then(function () {\n                return finalize(originalIsError, originalError);\n              }, function (newError) {\n                return finalize(true, newError);\n              }).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdown(isError, error) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(function () {\n                return finalize(isError, error);\n              }).catch(rethrowAssertionErrorRejection);\n            } else {\n              finalize(isError, error);\n            }\n          }\n          function finalize(isError, error) {\n            WritableStreamDefaultWriterRelease(writer);\n            ReadableStreamReaderGenericRelease(reader);\n            if (isError) {\n              reject(error);\n            } else {\n              resolve(undefined);\n            }\n          }\n        });\n      }\n    }, {\n      key: 'tee',\n      value: function tee() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('tee');\n        }\n        var branches = ReadableStreamTee(this, false);\n        return createArrayFromList(branches);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsReadableStreamLocked(this);\n      }\n    }]);\n    return ReadableStream;\n  }();\n  module.exports = {\n    ReadableStream: ReadableStream,\n    IsReadableStreamDisturbed: IsReadableStreamDisturbed,\n    ReadableStreamDefaultControllerClose: ReadableStreamDefaultControllerClose,\n    ReadableStreamDefaultControllerEnqueue: ReadableStreamDefaultControllerEnqueue,\n    ReadableStreamDefaultControllerError: ReadableStreamDefaultControllerError,\n    ReadableStreamDefaultControllerGetDesiredSize: ReadableStreamDefaultControllerGetDesiredSize\n  };\n  function AcquireReadableStreamBYOBReader(stream) {\n    return new ReadableStreamBYOBReader(stream);\n  }\n  function AcquireReadableStreamDefaultReader(stream) {\n    return new ReadableStreamDefaultReader(stream);\n  }\n  function IsReadableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDisturbed(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');\n    return stream._disturbed;\n  }\n  function IsReadableStreamLocked(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');\n    if (stream._reader === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamTee(stream, cloneForBranch2) {\n    assert(IsReadableStream(stream) === true);\n    assert(typeof cloneForBranch2 === 'boolean');\n    var reader = AcquireReadableStreamDefaultReader(stream);\n    var teeState = {\n      closedOrErrored: false,\n      canceled1: false,\n      canceled2: false,\n      reason1: undefined,\n      reason2: undefined\n    };\n    teeState.promise = new Promise(function (resolve) {\n      teeState._resolve = resolve;\n    });\n    var pull = create_ReadableStreamTeePullFunction();\n    pull._reader = reader;\n    pull._teeState = teeState;\n    pull._cloneForBranch2 = cloneForBranch2;\n    var cancel1 = create_ReadableStreamTeeBranch1CancelFunction();\n    cancel1._stream = stream;\n    cancel1._teeState = teeState;\n    var cancel2 = create_ReadableStreamTeeBranch2CancelFunction();\n    cancel2._stream = stream;\n    cancel2._teeState = teeState;\n    var underlyingSource1 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource1, 'pull', pull);\n    createDataProperty(underlyingSource1, 'cancel', cancel1);\n    var branch1Stream = new ReadableStream(underlyingSource1);\n    var underlyingSource2 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource2, 'pull', pull);\n    createDataProperty(underlyingSource2, 'cancel', cancel2);\n    var branch2Stream = new ReadableStream(underlyingSource2);\n    pull._branch1 = branch1Stream._readableStreamController;\n    pull._branch2 = branch2Stream._readableStreamController;\n    reader._closedPromise.catch(function (r) {\n      if (teeState.closedOrErrored === true) {\n        return;\n      }\n      ReadableStreamDefaultControllerError(pull._branch1, r);\n      ReadableStreamDefaultControllerError(pull._branch2, r);\n      teeState.closedOrErrored = true;\n    });\n    return [branch1Stream, branch2Stream];\n  }\n  function create_ReadableStreamTeePullFunction() {\n    function f() {\n      var reader = f._reader,\n          branch1 = f._branch1,\n          branch2 = f._branch2,\n          teeState = f._teeState;\n      return ReadableStreamDefaultReaderRead(reader).then(function (result) {\n        assert(typeIsObject(result));\n        var value = result.value;\n        var done = result.done;\n        assert(typeof done === 'boolean');\n        if (done === true && teeState.closedOrErrored === false) {\n          if (teeState.canceled1 === false) {\n            ReadableStreamDefaultControllerClose(branch1);\n          }\n          if (teeState.canceled2 === false) {\n            ReadableStreamDefaultControllerClose(branch2);\n          }\n          teeState.closedOrErrored = true;\n        }\n        if (teeState.closedOrErrored === true) {\n          return;\n        }\n        var value1 = value;\n        var value2 = value;\n        if (teeState.canceled1 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch1, value1);\n        }\n        if (teeState.canceled2 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch2, value2);\n        }\n      });\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch1CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled1 = true;\n      teeState.reason1 = reason;\n      if (teeState.canceled2 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch2CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled2 = true;\n      teeState.reason2 = reason;\n      if (teeState.canceled1 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function ReadableStreamAddReadIntoRequest(stream) {\n    assert(IsReadableStreamBYOBReader(stream._reader) === true);\n    assert(stream._state === 'readable' || stream._state === 'closed');\n    var promise = new Promise(function (resolve, reject) {\n      var readIntoRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readIntoRequests.push(readIntoRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamAddReadRequest(stream) {\n    assert(IsReadableStreamDefaultReader(stream._reader) === true);\n    assert(stream._state === 'readable');\n    var promise = new Promise(function (resolve, reject) {\n      var readRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readRequests.push(readRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamCancel(stream, reason) {\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    ReadableStreamClose(stream);\n    var sourceCancelPromise = stream._readableStreamController.__cancelSteps(reason);\n    return sourceCancelPromise.then(function () {\n      return undefined;\n    });\n  }\n  function ReadableStreamClose(stream) {\n    assert(stream._state === 'readable');\n    stream._state = 'closed';\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var _resolve = reader._readRequests[i]._resolve;\n        _resolve(CreateIterResultObject(undefined, true));\n      }\n      reader._readRequests = [];\n    }\n    defaultReaderClosedPromiseResolve(reader);\n    return undefined;\n  }\n  function ReadableStreamError(stream, e) {\n    assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');\n    assert(stream._state === 'readable', 'state must be readable');\n    stream._state = 'errored';\n    stream._storedError = e;\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var readRequest = reader._readRequests[i];\n        readRequest._reject(e);\n      }\n      reader._readRequests = [];\n    } else {\n      assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');\n      for (var _i = 0; _i < reader._readIntoRequests.length; _i++) {\n        var readIntoRequest = reader._readIntoRequests[_i];\n        readIntoRequest._reject(e);\n      }\n      reader._readIntoRequests = [];\n    }\n    defaultReaderClosedPromiseReject(reader, e);\n    reader._closedPromise.catch(function () {});\n  }\n  function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readIntoRequests.length > 0);\n    var readIntoRequest = reader._readIntoRequests.shift();\n    readIntoRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readRequests.length > 0);\n    var readRequest = reader._readRequests.shift();\n    readRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamGetNumReadIntoRequests(stream) {\n    return stream._reader._readIntoRequests.length;\n  }\n  function ReadableStreamGetNumReadRequests(stream) {\n    return stream._reader._readRequests.length;\n  }\n  function ReadableStreamHasBYOBReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamBYOBReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamHasDefaultReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamDefaultReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  var ReadableStreamDefaultReader = function () {\n    function ReadableStreamDefaultReader(stream) {\n      _classCallCheck(this, ReadableStreamDefaultReader);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n      }\n      if (IsReadableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readRequests = [];\n    }\n    _createClass(ReadableStreamDefaultReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        return ReadableStreamDefaultReaderRead(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          throw defaultReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamDefaultReader;\n  }();\n  var ReadableStreamBYOBReader = function () {\n    function ReadableStreamBYOBReader(stream) {\n      _classCallCheck(this, ReadableStreamBYOBReader);\n      if (!IsReadableStream(stream)) {\n        throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');\n      }\n      if (IsReadableByteStreamController(stream._readableStreamController) === false) {\n        throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');\n      }\n      if (IsReadableStreamLocked(stream)) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readIntoRequests = [];\n    }\n    _createClass(ReadableStreamBYOBReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read(view) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        if (!ArrayBuffer.isView(view)) {\n          return Promise.reject(new TypeError('view must be an array buffer view'));\n        }\n        if (view.byteLength === 0) {\n          return Promise.reject(new TypeError('view must have non-zero byteLength'));\n        }\n        return ReadableStreamBYOBReaderRead(this, view);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          throw byobReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readIntoRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamBYOBReader;\n  }();\n  function IsReadableStreamBYOBReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDefaultReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamReaderGenericInitialize(reader, stream) {\n    reader._ownerReadableStream = stream;\n    stream._reader = reader;\n    if (stream._state === 'readable') {\n      defaultReaderClosedPromiseInitialize(reader);\n    } else if (stream._state === 'closed') {\n      defaultReaderClosedPromiseInitializeAsResolved(reader);\n    } else {\n      assert(stream._state === 'errored', 'state must be errored');\n      defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n      reader._closedPromise.catch(function () {});\n    }\n  }\n  function ReadableStreamReaderGenericCancel(reader, reason) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    return ReadableStreamCancel(stream, reason);\n  }\n  function ReadableStreamReaderGenericRelease(reader) {\n    assert(reader._ownerReadableStream !== undefined);\n    assert(reader._ownerReadableStream._reader === reader);\n    if (reader._ownerReadableStream._state === 'readable') {\n      defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    } else {\n      defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    }\n    reader._closedPromise.catch(function () {});\n    reader._ownerReadableStream._reader = undefined;\n    reader._ownerReadableStream = undefined;\n  }\n  function ReadableStreamBYOBReaderRead(reader, view) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\n  }\n  function ReadableStreamDefaultReaderRead(reader) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(CreateIterResultObject(undefined, true));\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(stream._state === 'readable');\n    return stream._readableStreamController.__pullSteps();\n  }\n  var ReadableStreamDefaultController = function () {\n    function ReadableStreamDefaultController(stream, underlyingSource, size, highWaterMark) {\n      _classCallCheck(this, ReadableStreamDefaultController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingSource = underlyingSource;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      this._closeRequested = false;\n      this._pullAgain = false;\n      this._pulling = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, r);\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableStreamDefaultController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableStreamDefaultControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        return ReadableStreamDefaultControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        if (this._queue.length > 0) {\n          var chunk = DequeueValue(this);\n          if (this._closeRequested === true && this._queue.length === 0) {\n            ReadableStreamClose(stream);\n          } else {\n            ReadableStreamDefaultControllerCallPullIfNeeded(this);\n          }\n          return Promise.resolve(CreateIterResultObject(chunk, false));\n        }\n        var pendingPromise = ReadableStreamAddReadRequest(stream);\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n        return pendingPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        return ReadableStreamDefaultControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableStreamDefaultController;\n  }();\n  function IsReadableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n      return undefined;\n    }, function (e) {\n      ReadableStreamDefaultControllerErrorIfNeeded(controller, e);\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed' || stream._state === 'errored') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    if (desiredSize > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableStreamDefaultControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    controller._closeRequested = true;\n    if (controller._queue.length === 0) {\n      ReadableStreamClose(stream);\n    }\n  }\n  function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      ReadableStreamFulfillReadRequest(stream, chunk, false);\n    } else {\n      var chunkSize = 1;\n      if (controller._strategySize !== undefined) {\n        var strategySize = controller._strategySize;\n        try {\n          chunkSize = strategySize(chunk);\n        } catch (chunkSizeE) {\n          ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n          throw chunkSizeE;\n        }\n      }\n      try {\n        EnqueueValueWithSize(controller, chunk, chunkSize);\n      } catch (enqueueE) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n        throw enqueueE;\n      }\n    }\n    ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {\n    if (controller._controlledReadableStream._state === 'readable') {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  }\n  function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  var ReadableStreamBYOBRequest = function () {\n    function ReadableStreamBYOBRequest(controller, view) {\n      _classCallCheck(this, ReadableStreamBYOBRequest);\n      this._associatedReadableByteStreamController = controller;\n      this._view = view;\n    }\n    _createClass(ReadableStreamBYOBRequest, [{\n      key: 'respond',\n      value: function respond(bytesWritten) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n      }\n    }, {\n      key: 'respondWithNewView',\n      value: function respondWithNewView(view) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        if (!ArrayBuffer.isView(view)) {\n          throw new TypeError('You can only respond with array buffer views');\n        }\n        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n      }\n    }, {\n      key: 'view',\n      get: function get() {\n        return this._view;\n      }\n    }]);\n    return ReadableStreamBYOBRequest;\n  }();\n  var ReadableByteStreamController = function () {\n    function ReadableByteStreamController(stream, underlyingByteSource, highWaterMark) {\n      _classCallCheck(this, ReadableByteStreamController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' + 'a byte source');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' + 'source');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingByteSource = underlyingByteSource;\n      this._pullAgain = false;\n      this._pulling = false;\n      ReadableByteStreamControllerClearPendingPullIntos(this);\n      this._queue = this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._closeRequested = false;\n      this._started = false;\n      this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n      var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n      if (autoAllocateChunkSize !== undefined) {\n        if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n          throw new RangeError('autoAllocateChunkSize must be a positive integer');\n        }\n      }\n      this._autoAllocateChunkSize = autoAllocateChunkSize;\n      this._pendingPullIntos = [];\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        if (stream._state === 'readable') {\n          ReadableByteStreamControllerError(controller, r);\n        }\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableByteStreamController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableByteStreamControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        if (!ArrayBuffer.isView(chunk)) {\n          throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n        }\n        ReadableByteStreamControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableByteStreamControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        if (this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          firstDescriptor.bytesFilled = 0;\n        }\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        assert(ReadableStreamHasDefaultReader(stream) === true);\n        if (this._queueTotalSize > 0) {\n          assert(ReadableStreamGetNumReadRequests(stream) === 0);\n          var entry = this._queue.shift();\n          this._queueTotalSize -= entry.byteLength;\n          ReadableByteStreamControllerHandleQueueDrain(this);\n          var view = void 0;\n          try {\n            view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n          } catch (viewE) {\n            return Promise.reject(viewE);\n          }\n          return Promise.resolve(CreateIterResultObject(view, false));\n        }\n        var autoAllocateChunkSize = this._autoAllocateChunkSize;\n        if (autoAllocateChunkSize !== undefined) {\n          var buffer = void 0;\n          try {\n            buffer = new ArrayBuffer(autoAllocateChunkSize);\n          } catch (bufferE) {\n            return Promise.reject(bufferE);\n          }\n          var pullIntoDescriptor = {\n            buffer: buffer,\n            byteOffset: 0,\n            byteLength: autoAllocateChunkSize,\n            bytesFilled: 0,\n            elementSize: 1,\n            ctor: Uint8Array,\n            readerType: 'default'\n          };\n          this._pendingPullIntos.push(pullIntoDescriptor);\n        }\n        var promise = ReadableStreamAddReadRequest(stream);\n        ReadableByteStreamControllerCallPullIfNeeded(this);\n        return promise;\n      }\n    }, {\n      key: 'byobRequest',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('byobRequest');\n        }\n        if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n          this._byobRequest = new ReadableStreamBYOBRequest(this, view);\n        }\n        return this._byobRequest;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('desiredSize');\n        }\n        return ReadableByteStreamControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableByteStreamController;\n  }();\n  function IsReadableByteStreamController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamBYOBRequest(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    }, function (e) {\n      if (controller._controlledReadableStream._state === 'readable') {\n        ReadableByteStreamControllerError(controller, e);\n      }\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    controller._pendingPullIntos = [];\n  }\n  function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n    assert(stream._state !== 'errored', 'state must not be errored');\n    var done = false;\n    if (stream._state === 'closed') {\n      assert(pullIntoDescriptor.bytesFilled === 0);\n      done = true;\n    }\n    var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n    if (pullIntoDescriptor.readerType === 'default') {\n      ReadableStreamFulfillReadRequest(stream, filledView, done);\n    } else {\n      assert(pullIntoDescriptor.readerType === 'byob');\n      ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n    }\n  }\n  function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n    var bytesFilled = pullIntoDescriptor.bytesFilled;\n    var elementSize = pullIntoDescriptor.elementSize;\n    assert(bytesFilled <= pullIntoDescriptor.byteLength);\n    assert(bytesFilled % elementSize === 0);\n    return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n  }\n  function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n    controller._queue.push({\n      buffer: buffer,\n      byteOffset: byteOffset,\n      byteLength: byteLength\n    });\n    controller._queueTotalSize += byteLength;\n  }\n  function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n    var elementSize = pullIntoDescriptor.elementSize;\n    var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n    var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n    var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n    var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n    var totalBytesToCopyRemaining = maxBytesToCopy;\n    var ready = false;\n    if (maxAlignedBytes > currentAlignedBytes) {\n      totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n      ready = true;\n    }\n    var queue = controller._queue;\n    while (totalBytesToCopyRemaining > 0) {\n      var headOfQueue = queue[0];\n      var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n      var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n      if (headOfQueue.byteLength === bytesToCopy) {\n        queue.shift();\n      } else {\n        headOfQueue.byteOffset += bytesToCopy;\n        headOfQueue.byteLength -= bytesToCopy;\n      }\n      controller._queueTotalSize -= bytesToCopy;\n      ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n      totalBytesToCopyRemaining -= bytesToCopy;\n    }\n    if (ready === false) {\n      assert(controller._queueTotalSize === 0, 'queue must be empty');\n      assert(pullIntoDescriptor.bytesFilled > 0);\n      assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n    }\n    return ready;\n  }\n  function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n    assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    pullIntoDescriptor.bytesFilled += size;\n  }\n  function ReadableByteStreamControllerHandleQueueDrain(controller) {\n    assert(controller._controlledReadableStream._state === 'readable');\n    if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\n      ReadableStreamClose(controller._controlledReadableStream);\n    } else {\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n  }\n  function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n    if (controller._byobRequest === undefined) {\n      return;\n    }\n    controller._byobRequest._associatedReadableByteStreamController = undefined;\n    controller._byobRequest._view = undefined;\n    controller._byobRequest = undefined;\n  }\n  function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n    assert(controller._closeRequested === false);\n    while (controller._pendingPullIntos.length > 0) {\n      if (controller._queueTotalSize === 0) {\n        return;\n      }\n      var pullIntoDescriptor = controller._pendingPullIntos[0];\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerPullInto(controller, view) {\n    var stream = controller._controlledReadableStream;\n    var elementSize = 1;\n    if (view.constructor !== DataView) {\n      elementSize = view.constructor.BYTES_PER_ELEMENT;\n    }\n    var ctor = view.constructor;\n    var pullIntoDescriptor = {\n      buffer: view.buffer,\n      byteOffset: view.byteOffset,\n      byteLength: view.byteLength,\n      bytesFilled: 0,\n      elementSize: elementSize,\n      ctor: ctor,\n      readerType: 'byob'\n    };\n    if (controller._pendingPullIntos.length > 0) {\n      pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n      controller._pendingPullIntos.push(pullIntoDescriptor);\n      return ReadableStreamAddReadIntoRequest(stream);\n    }\n    if (stream._state === 'closed') {\n      var emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n      return Promise.resolve(CreateIterResultObject(emptyView, true));\n    }\n    if (controller._queueTotalSize > 0) {\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        ReadableByteStreamControllerHandleQueueDrain(controller);\n        return Promise.resolve(CreateIterResultObject(filledView, false));\n      }\n      if (controller._closeRequested === true) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        return Promise.reject(e);\n      }\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n    var promise = ReadableStreamAddReadIntoRequest(stream);\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n    return promise;\n  }\n  function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n    assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');\n    var stream = controller._controlledReadableStream;\n    if (ReadableStreamHasBYOBReader(stream) === true) {\n      while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n        var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n    if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n      throw new RangeError('bytesWritten out of range');\n    }\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n      return;\n    }\n    ReadableByteStreamControllerShiftPendingPullInto(controller);\n    var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n    if (remainderSize > 0) {\n      var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    pullIntoDescriptor.bytesFilled -= remainderSize;\n    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  }\n  function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n    var firstDescriptor = controller._pendingPullIntos[0];\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed') {\n      if (bytesWritten !== 0) {\n        throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n      }\n      ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n    } else {\n      assert(stream._state === 'readable');\n      ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n    }\n  }\n  function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n    var descriptor = controller._pendingPullIntos.shift();\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    return descriptor;\n  }\n  function ReadableByteStreamControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state !== 'readable') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableByteStreamControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (controller._queueTotalSize > 0) {\n      controller._closeRequested = true;\n      return;\n    }\n    if (controller._pendingPullIntos.length > 0) {\n      var firstPendingPullInto = controller._pendingPullIntos[0];\n      if (firstPendingPullInto.bytesFilled > 0) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        throw e;\n      }\n    }\n    ReadableStreamClose(stream);\n  }\n  function ReadableByteStreamControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    var buffer = chunk.buffer;\n    var byteOffset = chunk.byteOffset;\n    var byteLength = chunk.byteLength;\n    var transferredBuffer = TransferArrayBuffer(buffer);\n    if (ReadableStreamHasDefaultReader(stream) === true) {\n      if (ReadableStreamGetNumReadRequests(stream) === 0) {\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      } else {\n        assert(controller._queue.length === 0);\n        var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n        ReadableStreamFulfillReadRequest(stream, transferredView, false);\n      }\n    } else if (ReadableStreamHasBYOBReader(stream) === true) {\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    } else {\n      assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    }\n  }\n  function ReadableByteStreamControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ReadableByteStreamControllerClearPendingPullIntos(controller);\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableByteStreamControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n    bytesWritten = Number(bytesWritten);\n    if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n      throw new RangeError('bytesWritten must be a finite');\n    }\n    assert(controller._pendingPullIntos.length > 0);\n    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n  }\n  function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n    assert(controller._pendingPullIntos.length > 0);\n    var firstDescriptor = controller._pendingPullIntos[0];\n    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n      throw new RangeError('The region specified by view does not match byobRequest');\n    }\n    if (firstDescriptor.byteLength !== view.byteLength) {\n      throw new RangeError('The buffer of view has different capacity than byobRequest');\n    }\n    firstDescriptor.buffer = view.buffer;\n    ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('ReadableStream.prototype.' + name + ' can only be used on a ReadableStream');\n  }\n  function readerLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released reader');\n  }\n  function defaultReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultReader.prototype.' + name + ' can only be used on a ReadableStreamDefaultReader');\n  }\n  function defaultReaderClosedPromiseInitialize(reader) {\n    reader._closedPromise = new Promise(function (resolve, reject) {\n      reader._closedPromise_resolve = resolve;\n      reader._closedPromise_reject = reject;\n    });\n  }\n  function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n    reader._closedPromise = Promise.reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n    reader._closedPromise = Promise.resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseReject(reader, reason) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n    assert(reader._closedPromise_resolve === undefined);\n    assert(reader._closedPromise_reject === undefined);\n    reader._closedPromise = Promise.reject(reason);\n  }\n  function defaultReaderClosedPromiseResolve(reader) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function byobReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBReader.prototype.' + name + ' can only be used on a ReadableStreamBYOBReader');\n  }\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultController.prototype.' + name + ' can only be used on a ReadableStreamDefaultController');\n  }\n  function byobRequestBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBRequest.prototype.' + name + ' can only be used on a ReadableStreamBYOBRequest');\n  }\n  function byteStreamControllerBrandCheckException(name) {\n    return new TypeError('ReadableByteStreamController.prototype.' + name + ' can only be used on a ReadableByteStreamController');\n  }\n  function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {\n    try {\n      Promise.prototype.then.call(promise, undefined, function () {});\n    } catch (e) {}\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var transformStream = __w_pdfjs_require__(6);\n  var readableStream = __w_pdfjs_require__(4);\n  var writableStream = __w_pdfjs_require__(2);\n  exports.TransformStream = transformStream.TransformStream;\n  exports.ReadableStream = readableStream.ReadableStream;\n  exports.IsReadableStreamDisturbed = readableStream.IsReadableStreamDisturbed;\n  exports.ReadableStreamDefaultControllerClose = readableStream.ReadableStreamDefaultControllerClose;\n  exports.ReadableStreamDefaultControllerEnqueue = readableStream.ReadableStreamDefaultControllerEnqueue;\n  exports.ReadableStreamDefaultControllerError = readableStream.ReadableStreamDefaultControllerError;\n  exports.ReadableStreamDefaultControllerGetDesiredSize = readableStream.ReadableStreamDefaultControllerGetDesiredSize;\n  exports.AcquireWritableStreamDefaultWriter = writableStream.AcquireWritableStreamDefaultWriter;\n  exports.IsWritableStream = writableStream.IsWritableStream;\n  exports.IsWritableStreamLocked = writableStream.IsWritableStreamLocked;\n  exports.WritableStream = writableStream.WritableStream;\n  exports.WritableStreamAbort = writableStream.WritableStreamAbort;\n  exports.WritableStreamDefaultControllerError = writableStream.WritableStreamDefaultControllerError;\n  exports.WritableStreamDefaultWriterCloseWithErrorPropagation = writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;\n  exports.WritableStreamDefaultWriterRelease = writableStream.WritableStreamDefaultWriterRelease;\n  exports.WritableStreamDefaultWriterWrite = writableStream.WritableStreamDefaultWriterWrite;\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  var _require2 = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require2.InvokeOrNoop,\n      PromiseInvokeOrPerformFallback = _require2.PromiseInvokeOrPerformFallback,\n      PromiseInvokeOrNoop = _require2.PromiseInvokeOrNoop,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(4),\n      ReadableStream = _require3.ReadableStream,\n      ReadableStreamDefaultControllerClose = _require3.ReadableStreamDefaultControllerClose,\n      ReadableStreamDefaultControllerEnqueue = _require3.ReadableStreamDefaultControllerEnqueue,\n      ReadableStreamDefaultControllerError = _require3.ReadableStreamDefaultControllerError,\n      ReadableStreamDefaultControllerGetDesiredSize = _require3.ReadableStreamDefaultControllerGetDesiredSize;\n  var _require4 = __w_pdfjs_require__(2),\n      WritableStream = _require4.WritableStream,\n      WritableStreamDefaultControllerError = _require4.WritableStreamDefaultControllerError;\n  function TransformStreamCloseReadable(transformStream) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    TransformStreamCloseReadableInternal(transformStream);\n  }\n  function TransformStreamEnqueueToReadable(transformStream, chunk) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    var controller = transformStream._readableController;\n    try {\n      ReadableStreamDefaultControllerEnqueue(controller, chunk);\n    } catch (e) {\n      transformStream._readableClosed = true;\n      TransformStreamErrorIfNeeded(transformStream, e);\n      throw transformStream._storedError;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    var maybeBackpressure = desiredSize <= 0;\n    if (maybeBackpressure === true && transformStream._backpressure === false) {\n      TransformStreamSetBackpressure(transformStream, true);\n    }\n  }\n  function TransformStreamError(transformStream, e) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    TransformStreamErrorInternal(transformStream, e);\n  }\n  function TransformStreamCloseReadableInternal(transformStream) {\n    assert(transformStream._errored === false);\n    assert(transformStream._readableClosed === false);\n    try {\n      ReadableStreamDefaultControllerClose(transformStream._readableController);\n    } catch (e) {\n      assert(false);\n    }\n    transformStream._readableClosed = true;\n  }\n  function TransformStreamErrorIfNeeded(transformStream, e) {\n    if (transformStream._errored === false) {\n      TransformStreamErrorInternal(transformStream, e);\n    }\n  }\n  function TransformStreamErrorInternal(transformStream, e) {\n    assert(transformStream._errored === false);\n    transformStream._errored = true;\n    transformStream._storedError = e;\n    if (transformStream._writableDone === false) {\n      WritableStreamDefaultControllerError(transformStream._writableController, e);\n    }\n    if (transformStream._readableClosed === false) {\n      ReadableStreamDefaultControllerError(transformStream._readableController, e);\n    }\n  }\n  function TransformStreamReadableReadyPromise(transformStream) {\n    assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n    if (transformStream._backpressure === false) {\n      return Promise.resolve();\n    }\n    assert(transformStream._backpressure === true, '_backpressure should have been initialized');\n    return transformStream._backpressureChangePromise;\n  }\n  function TransformStreamSetBackpressure(transformStream, backpressure) {\n    assert(transformStream._backpressure !== backpressure, 'TransformStreamSetBackpressure() should be called only when backpressure is changed');\n    if (transformStream._backpressureChangePromise !== undefined) {\n      transformStream._backpressureChangePromise_resolve(backpressure);\n    }\n    transformStream._backpressureChangePromise = new Promise(function (resolve) {\n      transformStream._backpressureChangePromise_resolve = resolve;\n    });\n    transformStream._backpressureChangePromise.then(function (resolution) {\n      assert(resolution !== backpressure, '_backpressureChangePromise should be fulfilled only when backpressure is changed');\n    });\n    transformStream._backpressure = backpressure;\n  }\n  function TransformStreamDefaultTransform(chunk, transformStreamController) {\n    var transformStream = transformStreamController._controlledTransformStream;\n    TransformStreamEnqueueToReadable(transformStream, chunk);\n    return Promise.resolve();\n  }\n  function TransformStreamTransform(transformStream, chunk) {\n    assert(transformStream._errored === false);\n    assert(transformStream._transforming === false);\n    assert(transformStream._backpressure === false);\n    transformStream._transforming = true;\n    var transformer = transformStream._transformer;\n    var controller = transformStream._transformStreamController;\n    var transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller], TransformStreamDefaultTransform, [chunk, controller]);\n    return transformPromise.then(function () {\n      transformStream._transforming = false;\n      return TransformStreamReadableReadyPromise(transformStream);\n    }, function (e) {\n      TransformStreamErrorIfNeeded(transformStream, e);\n      return Promise.reject(e);\n    });\n  }\n  function IsTransformStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n      return false;\n    }\n    return true;\n  }\n  function IsTransformStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  var TransformStreamSink = function () {\n    function TransformStreamSink(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSink);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSink, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._writableController = c;\n        return this._startPromise.then(function () {\n          return TransformStreamReadableReadyPromise(transformStream);\n        });\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        var transformStream = this._transformStream;\n        return TransformStreamTransform(transformStream, chunk);\n      }\n    }, {\n      key: 'abort',\n      value: function abort() {\n        var transformStream = this._transformStream;\n        transformStream._writableDone = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        var transformStream = this._transformStream;\n        assert(transformStream._transforming === false);\n        transformStream._writableDone = true;\n        var flushPromise = PromiseInvokeOrNoop(transformStream._transformer, 'flush', [transformStream._transformStreamController]);\n        return flushPromise.then(function () {\n          if (transformStream._errored === true) {\n            return Promise.reject(transformStream._storedError);\n          }\n          if (transformStream._readableClosed === false) {\n            TransformStreamCloseReadableInternal(transformStream);\n          }\n          return Promise.resolve();\n        }).catch(function (r) {\n          TransformStreamErrorIfNeeded(transformStream, r);\n          return Promise.reject(transformStream._storedError);\n        });\n      }\n    }]);\n    return TransformStreamSink;\n  }();\n  var TransformStreamSource = function () {\n    function TransformStreamSource(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSource);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSource, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._readableController = c;\n        return this._startPromise.then(function () {\n          assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n          if (transformStream._backpressure === true) {\n            return Promise.resolve();\n          }\n          assert(transformStream._backpressure === false, '_backpressure should have been initialized');\n          return transformStream._backpressureChangePromise;\n        });\n      }\n    }, {\n      key: 'pull',\n      value: function pull() {\n        var transformStream = this._transformStream;\n        assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');\n        assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n        TransformStreamSetBackpressure(transformStream, false);\n        return transformStream._backpressureChangePromise;\n      }\n    }, {\n      key: 'cancel',\n      value: function cancel() {\n        var transformStream = this._transformStream;\n        transformStream._readableClosed = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));\n      }\n    }]);\n    return TransformStreamSource;\n  }();\n  var TransformStreamDefaultController = function () {\n    function TransformStreamDefaultController(transformStream) {\n      _classCallCheck(this, TransformStreamDefaultController);\n      if (IsTransformStream(transformStream) === false) {\n        throw new TypeError('TransformStreamDefaultController can only be ' + 'constructed with a TransformStream instance');\n      }\n      if (transformStream._transformStreamController !== undefined) {\n        throw new TypeError('TransformStreamDefaultController instances can ' + 'only be created by the TransformStream constructor');\n      }\n      this._controlledTransformStream = transformStream;\n    }\n    _createClass(TransformStreamDefaultController, [{\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        TransformStreamCloseReadable(this._controlledTransformStream);\n      }\n    }, {\n      key: 'error',\n      value: function error(reason) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        TransformStreamError(this._controlledTransformStream, reason);\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        var transformStream = this._controlledTransformStream;\n        var readableController = transformStream._readableController;\n        return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n      }\n    }]);\n    return TransformStreamDefaultController;\n  }();\n  var TransformStream = function () {\n    function TransformStream() {\n      var transformer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _classCallCheck(this, TransformStream);\n      this._transformer = transformer;\n      var readableStrategy = transformer.readableStrategy,\n          writableStrategy = transformer.writableStrategy;\n      this._transforming = false;\n      this._errored = false;\n      this._storedError = undefined;\n      this._writableController = undefined;\n      this._readableController = undefined;\n      this._transformStreamController = undefined;\n      this._writableDone = false;\n      this._readableClosed = false;\n      this._backpressure = undefined;\n      this._backpressureChangePromise = undefined;\n      this._backpressureChangePromise_resolve = undefined;\n      this._transformStreamController = new TransformStreamDefaultController(this);\n      var startPromise_resolve = void 0;\n      var startPromise = new Promise(function (resolve) {\n        startPromise_resolve = resolve;\n      });\n      var source = new TransformStreamSource(this, startPromise);\n      this._readable = new ReadableStream(source, readableStrategy);\n      var sink = new TransformStreamSink(this, startPromise);\n      this._writable = new WritableStream(sink, writableStrategy);\n      assert(this._writableController !== undefined);\n      assert(this._readableController !== undefined);\n      var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);\n      TransformStreamSetBackpressure(this, desiredSize <= 0);\n      var transformStream = this;\n      var startResult = InvokeOrNoop(transformer, 'start', [transformStream._transformStreamController]);\n      startPromise_resolve(startResult);\n      startPromise.catch(function (e) {\n        if (transformStream._errored === false) {\n          transformStream._errored = true;\n          transformStream._storedError = e;\n        }\n      });\n    }\n    _createClass(TransformStream, [{\n      key: 'readable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('readable');\n        }\n        return this._readable;\n      }\n    }, {\n      key: 'writable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('writable');\n        }\n        return this._writable;\n      }\n    }]);\n    return TransformStream;\n  }();\n  module.exports = { TransformStream: TransformStream };\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('TransformStreamDefaultController.prototype.' + name + ' can only be used on a TransformStreamDefaultController');\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('TransformStream.prototype.' + name + ' can only be used on a TransformStream');\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  module.exports = __w_pdfjs_require__(5);\n}]));\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _chunked_stream = __w_pdfjs_require__(63);\n\nvar _document = __w_pdfjs_require__(133);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = __w_pdfjs_require__(64);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _annotation = __w_pdfjs_require__(139);\n\nvar _crypto = __w_pdfjs_require__(68);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _evaluator = __w_pdfjs_require__(140);\n\nvar _function = __w_pdfjs_require__(72);\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    _getInheritableProperty: function _getInheritableProperty(key) {\n      var getArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var value = (0, _util.getInheritableProperty)({\n        dict: this.pageDict,\n        key: key,\n        getArray: getArray,\n        stopWhenFound: false\n      });\n      if (!Array.isArray(value)) {\n        return value;\n      }\n      if (value.length === 1 || !(0, _primitives.isDict)(value[0])) {\n        return value[0];\n      }\n      return _primitives.Dict.merge(this.xref, value);\n    },\n\n    get content() {\n      return this.pageDict.get('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this._getInheritableProperty('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this._getInheritableProperty('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this._getInheritableProperty('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.pageDict.get('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this._getInheritableProperty('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this._getInheritableProperty('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ccitt = __w_pdfjs_require__(65);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _jbig = __w_pdfjs_require__(136);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(66);\n\nvar _ccitt = __w_pdfjs_require__(65);\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n      return decodeMMRBitmap(input, width, height, false);\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var tableB1 = void 0,\n        symbolWidths = void 0;\n    if (huffman) {\n      tableB1 = getStandardTable(1);\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\n    }\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0,\n          totalWidth = 0;\n      var firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          symbolWidths.push(currentWidth);\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        var collectiveBitmap = void 0;\n        if (bitmapSize === 0) {\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n        } else {\n          var originalEnd = huffmanInput.end;\n          var bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        var numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          newSymbols.push(collectiveBitmap);\n        } else {\n          var _i = void 0,\n              y = void 0,\n              xMin = 0,\n              xMax = void 0,\n              bitmapWidth = void 0,\n              symbolBitmap = void 0;\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n            bitmapWidth = symbolWidths[_i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = 0;\n        if (stripSize > 1) {\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var grayScaleBitPlanes = [],\n        mmrInput = void 0,\n        bitmap = void 0;\n    if (mmr) {\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 53:\n        args = [header.number, data, position, end];\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n        huffmanInput = new Reader(data, start, end);\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables: function onTables(currentSegment, data, start, end) {\n      var customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    }\n  };\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === 'lower';\n    }\n  }\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      this.isLeaf = false;\n    }\n  }\n  HuffmanTreeNode.prototype = {\n    buildTree: function buildTree(line, shift) {\n      var bit = line.prefixCode >> shift & 1;\n      if (shift <= 0) {\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        var node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode: function decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        var htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      var node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error('invalid Huffman data');\n      }\n      return node.decodeNode(reader);\n    }\n  };\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    this.rootNode = new HuffmanTreeNode(null);\n    var i = void 0,\n        ii = lines.length,\n        line = void 0;\n    for (i = 0; i < ii; i++) {\n      line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n  HuffmanTable.prototype = {\n    decode: function decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes: function assignPrefixCodes(lines) {\n      var linesLength = lines.length,\n          prefixLengthMax = 0,\n          i = void 0;\n      for (i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n      var histogram = new Uint32Array(prefixLengthMax + 1);\n      for (i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      var currentLength = 1,\n          firstCode = 0,\n          currentCode = void 0,\n          currentTemp = void 0,\n          line = void 0;\n      histogram[0] = 0;\n      while (currentLength <= prefixLengthMax) {\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    }\n  };\n  function decodeTablesSegment(data, start, end) {\n    var flags = data[start];\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n    var reader = new Reader(data, start + 9, end);\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\n    var lines = [];\n    var prefixLength = void 0,\n        rangeLength = void 0,\n        currentRangeLow = lowestValue;\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n    if (flags & 1) {\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n    return new HuffmanTable(lines, false);\n  }\n  var standardTablesCache = {};\n  function getStandardTable(number) {\n    var table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    var lines = void 0;\n    switch (number) {\n      case 1:\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n        break;\n      case 2:\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n        break;\n      case 3:\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n        break;\n      case 4:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n        break;\n      case 5:\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n        break;\n      case 6:\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n        break;\n      case 7:\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n        break;\n      case 8:\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n        break;\n      case 9:\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n        break;\n      case 10:\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n        break;\n      case 11:\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 12:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n        break;\n      case 13:\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 14:\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n        break;\n      case 15:\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n        break;\n      default:\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n    }\n    var length = lines.length,\n        i = void 0;\n    for (i = 0; i < length; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n  Reader.prototype = {\n    readBit: function readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error('end of data while reading bit');\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      var bit = this.currentByte >> this.shift & 1;\n      this.shift--;\n      return bit;\n    },\n    readBits: function readBits(numBits) {\n      var result = 0,\n          i = void 0;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n    byteAlign: function byteAlign() {\n      this.shift = -1;\n    },\n    next: function next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    }\n  };\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    var currentIndex = 0,\n        i = void 0,\n        ii = referredTo.length,\n        table = void 0;\n    for (i = 0; i < ii; i++) {\n      table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error('can\\'t find custom Huffman table');\n  }\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n    var codes = [],\n        i = void 0,\n        codeLength = void 0;\n    for (i = 0; i <= 34; i++) {\n      codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    var runCodesTable = new HuffmanTable(codes, false);\n    codes.length = 0;\n    for (i = 0; i < numberOfSymbols;) {\n      codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        var repeatedLength = void 0,\n            numberOfRepeats = void 0,\n            j = void 0;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error('no previous value in symbol ID table');\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error('invalid code length in symbol ID table');\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    var symbolIDTable = new HuffmanTable(codes, false);\n    var customIndex = 0,\n        tableFirstS = void 0,\n        tableDeltaS = void 0,\n        tableDeltaT = void 0;\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman FS selector');\n    }\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DS selector');\n    }\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DT selector');\n    }\n    if (textRegion.refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    return {\n      symbolIDTable: symbolIDTable,\n      tableFirstS: tableFirstS,\n      tableDeltaS: tableDeltaS,\n      tableDeltaT: tableDeltaT\n    };\n  }\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n    var customIndex = 0,\n        tableDeltaHeight = void 0,\n        tableDeltaWidth = void 0;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DH selector');\n    }\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DW selector');\n    }\n    var tableBitmapSize = void 0,\n        tableAggregateInstances = void 0;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n    return {\n      tableDeltaHeight: tableDeltaHeight,\n      tableDeltaWidth: tableDeltaWidth,\n      tableBitmapSize: tableBitmapSize,\n      tableAggregateInstances: tableAggregateInstances\n    };\n  }\n  function readUncompressedBitmap(reader, width, height) {\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      for (x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    var params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock\n    };\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0,\n        currentByte = void 0,\n        shift = void 0,\n        eof = false;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      shift = -1;\n      for (x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = currentByte >> shift & 1;\n        shift--;\n      }\n    }\n    if (endOfBlock && !eof) {\n      var lookForEOFLimit = 5;\n      for (var i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n    return bitmap;\n  }\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar DNLMarkerError = function DNLMarkerErrorClosure() {\n  function DNLMarkerError(message, scanLines) {\n    this.message = message;\n    this.scanLines = scanLines;\n  }\n  DNLMarkerError.prototype = new Error();\n  DNLMarkerError.prototype.name = 'DNLMarkerError';\n  DNLMarkerError.constructor = DNLMarkerError;\n  return DNLMarkerError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var parseDNLMarker = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          if (nextByte === 0xDC && parseDNLMarker) {\n            offset += 2;\n            var scanLines = data[offset++] << 8 | data[offset++];\n            if (scanLines > 0 && scanLines !== frame.scanLines) {\n              throw new DNLMarkerError('Found DNL marker (0xFFDC) while parsing scan data', scanLines);\n            }\n          }\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var offsetZ = offset + dctZigZag[k];\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, current marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, current marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos) {\n    var startPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : currentPos;\n\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$dnlScanLines = _ref.dnlScanLines,\n          dnlScanLines = _ref$dnlScanLines === undefined ? null : _ref$dnlScanLines;\n\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, current marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var numSOSMarkers = 0;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            var sofScanLines = readUint16();\n            frame.scanLines = dnlScanLines || sofScanLines;\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            var parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            try {\n              var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15, parseDNLMarker);\n              offset += processed;\n            } catch (ex) {\n              if (ex instanceof DNLMarkerError) {\n                (0, _util.warn)('Attempting to re-parse JPEG image using \"scanLines\" ' + 'parameter found in DNL marker (0xFFDC) segment.');\n                return this.parse(data, { dnlScanLines: ex.scanLines });\n              }\n              throw ex;\n            }\n            break;\n          case 0xFFDC:\n            offset += 4;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            var nextFileMarker = findNextFileMarker(data, offset - 2);\n            if (nextFileMarker && nextFileMarker.invalid) {\n              (0, _util.warn)('JpegImage.parse - unexpected data, current marker is: ' + nextFileMarker.invalid);\n              offset = nextFileMarker.offset;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data.subarray(0, offset);\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data.subarray(0, offset);\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _jpx = __w_pdfjs_require__(67);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _obj = __w_pdfjs_require__(64);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _stream = __w_pdfjs_require__(4);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = (0, _util.getInheritableProperty)({\n            dict: dict,\n            key: 'FT'\n          });\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'V',\n      getArray: true\n    });\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DA'\n    }) || '';\n    var fieldType = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'FT'\n    });\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DR'\n    }) || _primitives.Dict.empty;\n    data.fieldFlags = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Ff'\n    });\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Q'\n    });\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'MaxLen'\n    });\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = (0, _util.getInheritableProperty)({\n      dict: params.dict,\n      key: 'Opt'\n    });\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cmap = __w_pdfjs_require__(141);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _fonts = __w_pdfjs_require__(142);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _unicode = __w_pdfjs_require__(71);\n\nvar _standard_fonts = __w_pdfjs_require__(70);\n\nvar _pattern = __w_pdfjs_require__(146);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _bidi = __w_pdfjs_require__(147);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _metrics = __w_pdfjs_require__(148);\n\nvar _function = __w_pdfjs_require__(72);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _murmurhash = __w_pdfjs_require__(150);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _image = __w_pdfjs_require__(151);\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      return this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), colorSpace.numComps]).then(function (_ref2) {\n        var data = _ref2.data,\n            width = _ref2.width,\n            height = _ref2.height;\n\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref3) {\n    var _this = this;\n\n    var pdfManager = _ref3.pdfManager,\n        xref = _ref3.xref,\n        handler = _ref3.handler,\n        pageIndex = _ref3.pageIndex,\n        idFactory = _ref3.idFactory,\n        fontCache = _ref3.fontCache,\n        builtInCMapCache = _ref3.builtInCMapCache,\n        _ref3$options = _ref3.options,\n        options = _ref3$options === undefined ? null : _ref3$options,\n        pdfFunctionFactory = _ref3.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function buildPaintImageXObject(_ref4) {\n      var _this2 = this;\n\n      var resources = _ref4.resources,\n          image = _ref4.image,\n          _ref4$isInline = _ref4.isInline,\n          isInline = _ref4$isInline === undefined ? false : _ref4$isInline,\n          operatorList = _ref4.operatorList,\n          cacheKey = _ref4.cacheKey,\n          imageCache = _ref4.imageCache,\n          _ref4$forceDisableNat = _ref4.forceDisableNativeImageDecoder,\n          forceDisableNativeImageDecoder = _ref4$forceDisableNat === undefined ? false : _ref4$forceDisableNat;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return Promise.resolve();\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return Promise.resolve();\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return Promise.resolve();\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (isInline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          isInline: isInline,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return Promise.resolve();\n      }\n      var nativeImageDecoderSupport = forceDisableNativeImageDecoder ? _util.NativeImageDecoding.NONE : this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        return this.handler.sendWithPromise('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]).then(function () {\n          operatorList.addDependency(objId);\n          args = [objId, w, h];\n          operatorList.addOp(_util.OPS.paintJpegXObject, args);\n          if (cacheKey) {\n            imageCache[cacheKey] = {\n              fn: _util.OPS.paintJpegXObject,\n              args: args\n            };\n          }\n        }, function (reason) {\n          (0, _util.warn)('Native JPEG decoding failed -- trying to recover: ' + (reason && reason.message));\n          return _this2.buildPaintImageXObject({\n            resources: resources,\n            image: image,\n            isInline: isInline,\n            operatorList: operatorList,\n            cacheKey: cacheKey,\n            imageCache: imageCache,\n            forceDisableNativeImageDecoder: true\n          });\n        });\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        isInline: isInline,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n      return Promise.resolve();\n    },\n\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref5) {\n      var _this8 = this;\n\n      var stream = _ref5.stream,\n          task = _ref5.task,\n          resources = _ref5.resources,\n          operatorList = _ref5.operatorList,\n          _ref5$initialState = _ref5.initialState,\n          initialState = _ref5$initialState === undefined ? null : _ref5$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject({\n                    resources: resources,\n                    image: xobj,\n                    operatorList: operatorList,\n                    cacheKey: name,\n                    imageCache: imageCache\n                  }).then(resolveXObject, rejectXObject);\n                  return;\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              next(self.buildPaintImageXObject({\n                resources: resources,\n                image: args[0],\n                isInline: true,\n                operatorList: operatorList,\n                cacheKey: cacheKey,\n                imageCache: imageCache\n              }));\n              return;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref6) {\n      var _this9 = this;\n\n      var stream = _ref6.stream,\n          task = _ref6.task,\n          resources = _ref6.resources,\n          _ref6$stateManager = _ref6.stateManager,\n          stateManager = _ref6$stateManager === undefined ? null : _ref6$stateManager,\n          _ref6$normalizeWhites = _ref6.normalizeWhitespace,\n          normalizeWhitespace = _ref6$normalizeWhites === undefined ? false : _ref6$normalizeWhites,\n          _ref6$combineTextItem = _ref6.combineTextItems,\n          combineTextItems = _ref6$combineTextItem === undefined ? false : _ref6$combineTextItem,\n          sink = _ref6.sink,\n          _ref6$seenStyles = _ref6.seenStyles,\n          seenStyles = _ref6$seenStyles === undefined ? Object.create(null) : _ref6$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n      var toUnicode = [],\n          charcode = void 0,\n          glyphName = void 0;\n      var encoding = properties.defaultEncoding.slice();\n      var baseEncodingName = properties.baseEncodingName;\n      var differences = properties.differences;\n      for (charcode in differences) {\n        glyphName = differences[charcode];\n        if (glyphName === '.notdef') {\n          continue;\n        }\n        encoding[charcode] = glyphName;\n      }\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n      for (charcode in encoding) {\n        glyphName = encoding[charcode];\n        if (glyphName === '') {\n          continue;\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n            case 'G':\n              if (glyphName.length === 3) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'g':\n              if (glyphName.length === 5) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'C':\n            case 'c':\n              if (glyphName.length >= 3) {\n                code = +glyphName.substr(1);\n              }\n              break;\n            default:\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n              if (unicode !== -1) {\n                code = unicode;\n              }\n          }\n          if (code) {\n            if (baseEncodingName && code === +charcode) {\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                continue;\n              }\n            }\n            toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n        }\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n      }\n      return new _fonts.ToUnicodeMap(toUnicode);\n    },\n    buildToUnicode: function buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        if (!properties.composite && properties.hasEncoding) {\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n        }\n        return Promise.resolve(properties.toUnicode);\n      }\n      if (!properties.composite) {\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          var toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _parser = __w_pdfjs_require__(27);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      (0, _util.unreachable)('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      (0, _util.unreachable)('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embeddedUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embeddedUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embeddedUseCMap) {\n      useCMap = embeddedUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (!BUILT_IN_CMAPS.includes(name)) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(69);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _standard_fonts = __w_pdfjs_require__(70);\n\nvar _unicode = __w_pdfjs_require__(71);\n\nvar _font_renderer = __w_pdfjs_require__(144);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _type1_parser = __w_pdfjs_require__(145);\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap() {\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      (0, _util.unreachable)('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isTrueTypeCollectionFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'ttcf';\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        } else if (/Calibri/i.test(name)) {\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n          for (charCode in SupplementalGlyphMapForCalibri) {\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      function readTables(file, numTables) {\n        var tables = Object.create(null);\n        tables['OS/2'] = null;\n        tables['cmap'] = null;\n        tables['head'] = null;\n        tables['hhea'] = null;\n        tables['hmtx'] = null;\n        tables['maxp'] = null;\n        tables['name'] = null;\n        tables['post'] = null;\n        for (var i = 0; i < numTables; i++) {\n          var table = readTableEntry(font);\n          if (!VALID_TABLES.includes(table.tag)) {\n            continue;\n          }\n          if (table.length === 0) {\n            continue;\n          }\n          tables[table.tag] = table;\n        }\n        return tables;\n      }\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readTrueTypeCollectionHeader(ttc) {\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n        var majorVersion = ttc.getUint16();\n        var minorVersion = ttc.getUint16();\n        var numFonts = ttc.getInt32() >>> 0;\n        var offsetTable = [];\n        for (var i = 0; i < numFonts; i++) {\n          offsetTable.push(ttc.getInt32() >>> 0);\n        }\n        var header = {\n          ttcTag: ttcTag,\n          majorVersion: majorVersion,\n          minorVersion: minorVersion,\n          numFonts: numFonts,\n          offsetTable: offsetTable\n        };\n        switch (majorVersion) {\n          case 1:\n            return header;\n          case 2:\n            header.dsigTag = ttc.getInt32() >>> 0;\n            header.dsigLength = ttc.getInt32() >>> 0;\n            header.dsigOffset = ttc.getInt32() >>> 0;\n            return header;\n        }\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n      }\n      function readTrueTypeCollectionData(ttc, fontName) {\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n            numFonts = _readTrueTypeCollecti.numFonts,\n            offsetTable = _readTrueTypeCollecti.offsetTable;\n\n        for (var i = 0; i < numFonts; i++) {\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\n          var potentialHeader = readOpenTypeHeader(ttc);\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\n          if (!potentialTables['name']) {\n            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n          }\n          var nameTable = readNameTable(potentialTables['name']);\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n              var nameEntry = nameTable[j][k];\n              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n                return {\n                  header: potentialHeader,\n                  tables: potentialTables\n                };\n              }\n            }\n          }\n        }\n        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset === 0) {\n            endOffset = startOffset;\n          }\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && !functionsCalled.includes(funcId)) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var header = void 0,\n          tables = void 0;\n      if (isTrueTypeCollectionFile(font)) {\n        var ttcData = readTrueTypeCollectionData(font, this.name);\n        header = ttcData.header;\n        tables = ttcData.tables;\n      } else {\n        header = readOpenTypeHeader(font);\n        tables = readTables(font, header.numTables);\n      }\n      var cff = void 0,\n          cffFile = void 0;\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 4;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (var i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n          }\n        } else {\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n            charCode = cmapMappings[_i2].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(69);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects,\n      isCFFCIDFont: cff.isCIDFont,\n      fdSelect: cff.fdSelect,\n      fdArray: cff.fdArray\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font, glyphId) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop();\n            subrCode = null;\n            if (font.isCFFCIDFont) {\n              var fdIndex = font.fdSelect.getFDIndex(glyphId);\n              if (fdIndex >= 0 && fdIndex < font.fdArray.length) {\n                var fontDict = font.fdArray[fdIndex],\n                    subrs = void 0;\n                if (fontDict.privateDict && fontDict.privateDict.subrsIndex) {\n                  subrs = fontDict.privateDict.subrsIndex.objects;\n                }\n                if (subrs) {\n                  var numSubrs = subrs.length;\n                  n += numSubrs < 1240 ? 107 : numSubrs < 33900 ? 1131 : 32768;\n                  subrCode = subrs[n];\n                }\n              } else {\n                (0, _util.warn)('Invalid fd index for glyph index.');\n              }\n            } else {\n              subrCode = font.subrs[n + font.subrsBias];\n            }\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId], cmap.glyphId);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code, glyphId) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var fontMatrix = this.fontMatrix;\n      if (this.isCFFCIDFont) {\n        var fdIndex = this.fdSelect.getFDIndex(glyphId);\n        if (fdIndex >= 0 && fdIndex < this.fdArray.length) {\n          var fontDict = this.fdArray[fdIndex];\n          fontMatrix = fontDict.getByName('FontMatrix') || _util.FONT_IDENTITY_MATRIX;\n        } else {\n          (0, _util.warn)('Invalid fd index for glyph index.');\n        }\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds, glyphId);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      (0, _util.unreachable)('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n    this.isCFFCIDFont = cffInfo.isCFFCIDFont;\n    this.fdSelect = cffInfo.fdSelect;\n    this.fdArray = cffInfo.fdArray;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds, glyphId) {\n      compileCharString(code, cmds, this, glyphId);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    (0, _util.unreachable)('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _stream = __w_pdfjs_require__(4);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _jpx = __w_pdfjs_require__(67);\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image).catch(function (reason) {\n        (0, _util.warn)('Native image decoding failed -- trying to recover: ' + (reason && reason.message));\n        return image;\n      });\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$isInline = _ref.isInline,\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      var resources = isInline ? res : null;\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        isInline: isInline,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isInline: isInline,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$isInline = _ref2.isInline,\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        isInline: isInline,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n          var imageLength = originalHeight * rowBytes;\n          switch (this.colorSpace.name) {\n            case 'DeviceGray':\n              imageLength *= 3;\n            case 'DeviceRGB':\n            case 'DeviceCMYK':\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n              return imgData;\n          }\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=pdf.worker.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_pdfjs-dist@2.0.489@pdfjs-dist/build/pdf.worker.js\n// module id = iFqw\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_base64-js@1.3.0@base64-js/index.js\n// module id = iNHa\n// module chunks = 0"],"sourceRoot":""}